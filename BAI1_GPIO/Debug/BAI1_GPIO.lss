
BAI1_GPIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002f52  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006c  00800060  00002f52  00002fe6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000026  008000cc  008000cc  00003052  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003052  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000030b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  000030ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c28  00000000  00000000  0000337c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d09  00000000  00000000  00004fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a93  00000000  00000000  00005cad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008f8  00000000  00000000  00007740  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009e0  00000000  00000000  00008038  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011cc  00000000  00000000  00008a18  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000250  00000000  00000000  00009be4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 58 0e 	jmp	0x1cb0	; 0x1cb0 <__vector_4>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 1f 0e 	jmp	0x1c3e	; 0x1c3e <__vector_9>
      28:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <__vector_10>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e5       	ldi	r30, 0x52	; 82
      68:	ff e2       	ldi	r31, 0x2F	; 47
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 3c       	cpi	r26, 0xCC	; 204
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ac ec       	ldi	r26, 0xCC	; 204
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a2 3f       	cpi	r26, 0xF2	; 242
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 8f 08 	call	0x111e	; 0x111e <main>
      8a:	0c 94 a7 17 	jmp	0x2f4e	; 0x2f4e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <PCF8574_write>:
unsigned char lcd = 0x00;						//--- Declaring a variable as lcd for data operation

/* Function to Write data in PCF8574 */

void PCF8574_write(unsigned char x)
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	1f 92       	push	r1
      98:	cd b7       	in	r28, 0x3d	; 61
      9a:	de b7       	in	r29, 0x3e	; 62
      9c:	89 83       	std	Y+1, r24	; 0x01
	twi_start();							//--- Start Condition
      9e:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <twi_start>
	twi_write_cmd((PCF8574 << 1)| WRITE);	//--- SLA+W is Send 0x40
      a2:	8e e4       	ldi	r24, 0x4E	; 78
      a4:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <twi_write_cmd>
	twi_write_dwr(x);						//--- Data to Slave Device
      a8:	89 81       	ldd	r24, Y+1	; 0x01
      aa:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <twi_write_dwr>
	twi_stop();								//--- Stop Condition
      ae:	0e 94 aa 0d 	call	0x1b54	; 0x1b54 <twi_stop>
}
      b2:	00 00       	nop
      b4:	0f 90       	pop	r0
      b6:	df 91       	pop	r29
      b8:	cf 91       	pop	r28
      ba:	08 95       	ret

000000bc <twi_lcd_4bit_send>:

/* Function to Write 4-bit data to LCD */

void twi_lcd_4bit_send(unsigned char x)
{
      bc:	0f 93       	push	r16
      be:	1f 93       	push	r17
      c0:	cf 93       	push	r28
      c2:	df 93       	push	r29
      c4:	cd b7       	in	r28, 0x3d	; 61
      c6:	de b7       	in	r29, 0x3e	; 62
      c8:	c2 58       	subi	r28, 0x82	; 130
      ca:	d1 09       	sbc	r29, r1
      cc:	0f b6       	in	r0, 0x3f	; 63
      ce:	f8 94       	cli
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	0f be       	out	0x3f, r0	; 63
      d4:	cd bf       	out	0x3d, r28	; 61
      d6:	9e 01       	movw	r18, r28
      d8:	2e 57       	subi	r18, 0x7E	; 126
      da:	3f 4f       	sbci	r19, 0xFF	; 255
      dc:	f9 01       	movw	r30, r18
      de:	80 83       	st	Z, r24
	unsigned char temp = 0x00;					//--- temp variable for data operation
      e0:	19 82       	std	Y+1, r1	; 0x01
	
	lcd &= 0x0F;								//--- Masking last four bit to prevent the RS, RW, EN, Backlight
      e2:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
      e6:	8f 70       	andi	r24, 0x0F	; 15
      e8:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	temp = (x & 0xF0);							//--- Masking higher 4-Bit of Data and send it LCD
      ec:	ce 01       	movw	r24, r28
      ee:	8e 57       	subi	r24, 0x7E	; 126
      f0:	9f 4f       	sbci	r25, 0xFF	; 255
      f2:	fc 01       	movw	r30, r24
      f4:	80 81       	ld	r24, Z
      f6:	80 7f       	andi	r24, 0xF0	; 240
      f8:	89 83       	std	Y+1, r24	; 0x01
	lcd |= temp;								//--- 4-Bit Data and LCD control Pin
      fa:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <__data_end>
      fe:	89 81       	ldd	r24, Y+1	; 0x01
     100:	89 2b       	or	r24, r25
     102:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	lcd |= (0x04);								//--- Latching Data to LCD EN = 1
     106:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     10a:	84 60       	ori	r24, 0x04	; 4
     10c:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	PCF8574_write(lcd);							//--- Send Data From PCF8574 to LCD PORT
     110:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     114:	0e 94 49 00 	call	0x92	; 0x92 <PCF8574_write>
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	a0 e8       	ldi	r26, 0x80	; 128
     11e:	bf e3       	ldi	r27, 0x3F	; 63
     120:	8a 83       	std	Y+2, r24	; 0x02
     122:	9b 83       	std	Y+3, r25	; 0x03
     124:	ac 83       	std	Y+4, r26	; 0x04
     126:	bd 83       	std	Y+5, r27	; 0x05
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     128:	8e 01       	movw	r16, r28
     12a:	0a 59       	subi	r16, 0x9A	; 154
     12c:	1f 4f       	sbci	r17, 0xFF	; 255
     12e:	2b ea       	ldi	r18, 0xAB	; 171
     130:	3a ea       	ldi	r19, 0xAA	; 170
     132:	4a ea       	ldi	r20, 0xAA	; 170
     134:	5e e3       	ldi	r21, 0x3E	; 62
     136:	6a 81       	ldd	r22, Y+2	; 0x02
     138:	7b 81       	ldd	r23, Y+3	; 0x03
     13a:	8c 81       	ldd	r24, Y+4	; 0x04
     13c:	9d 81       	ldd	r25, Y+5	; 0x05
     13e:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     142:	dc 01       	movw	r26, r24
     144:	cb 01       	movw	r24, r22
     146:	f8 01       	movw	r30, r16
     148:	80 83       	st	Z, r24
     14a:	91 83       	std	Z+1, r25	; 0x01
     14c:	a2 83       	std	Z+2, r26	; 0x02
     14e:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
     150:	8e 01       	movw	r16, r28
     152:	06 59       	subi	r16, 0x96	; 150
     154:	1f 4f       	sbci	r17, 0xFF	; 255
     156:	20 e0       	ldi	r18, 0x00	; 0
     158:	30 e0       	ldi	r19, 0x00	; 0
     15a:	40 e8       	ldi	r20, 0x80	; 128
     15c:	5e e3       	ldi	r21, 0x3E	; 62
     15e:	6a 81       	ldd	r22, Y+2	; 0x02
     160:	7b 81       	ldd	r23, Y+3	; 0x03
     162:	8c 81       	ldd	r24, Y+4	; 0x04
     164:	9d 81       	ldd	r25, Y+5	; 0x05
     166:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     16a:	dc 01       	movw	r26, r24
     16c:	cb 01       	movw	r24, r22
     16e:	f8 01       	movw	r30, r16
     170:	80 83       	st	Z, r24
     172:	91 83       	std	Z+1, r25	; 0x01
     174:	a2 83       	std	Z+2, r26	; 0x02
     176:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     178:	ce 01       	movw	r24, r28
     17a:	8a 59       	subi	r24, 0x9A	; 154
     17c:	9f 4f       	sbci	r25, 0xFF	; 255
     17e:	20 e0       	ldi	r18, 0x00	; 0
     180:	30 e0       	ldi	r19, 0x00	; 0
     182:	40 e8       	ldi	r20, 0x80	; 128
     184:	5f e3       	ldi	r21, 0x3F	; 63
     186:	fc 01       	movw	r30, r24
     188:	60 81       	ld	r22, Z
     18a:	71 81       	ldd	r23, Z+1	; 0x01
     18c:	82 81       	ldd	r24, Z+2	; 0x02
     18e:	93 81       	ldd	r25, Z+3	; 0x03
     190:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     194:	88 23       	and	r24, r24
     196:	3c f4       	brge	.+14     	; 0x1a6 <twi_lcd_4bit_send+0xea>
		__ticks = 1;
     198:	ce 01       	movw	r24, r28
     19a:	82 59       	subi	r24, 0x92	; 146
     19c:	9f 4f       	sbci	r25, 0xFF	; 255
     19e:	21 e0       	ldi	r18, 0x01	; 1
     1a0:	fc 01       	movw	r30, r24
     1a2:	20 83       	st	Z, r18
     1a4:	2c c1       	rjmp	.+600    	; 0x3fe <twi_lcd_4bit_send+0x342>
	else if (__tmp2 > 65535)
     1a6:	ce 01       	movw	r24, r28
     1a8:	86 59       	subi	r24, 0x96	; 150
     1aa:	9f 4f       	sbci	r25, 0xFF	; 255
     1ac:	20 e0       	ldi	r18, 0x00	; 0
     1ae:	3f ef       	ldi	r19, 0xFF	; 255
     1b0:	4f e7       	ldi	r20, 0x7F	; 127
     1b2:	57 e4       	ldi	r21, 0x47	; 71
     1b4:	fc 01       	movw	r30, r24
     1b6:	60 81       	ld	r22, Z
     1b8:	71 81       	ldd	r23, Z+1	; 0x01
     1ba:	82 81       	ldd	r24, Z+2	; 0x02
     1bc:	93 81       	ldd	r25, Z+3	; 0x03
     1be:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     1c2:	18 16       	cp	r1, r24
     1c4:	0c f0       	brlt	.+2      	; 0x1c8 <twi_lcd_4bit_send+0x10c>
     1c6:	cd c0       	rjmp	.+410    	; 0x362 <twi_lcd_4bit_send+0x2a6>
	{
		_delay_ms(__us / 1000.0);
     1c8:	20 e0       	ldi	r18, 0x00	; 0
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	4a e7       	ldi	r20, 0x7A	; 122
     1ce:	54 e4       	ldi	r21, 0x44	; 68
     1d0:	6a 81       	ldd	r22, Y+2	; 0x02
     1d2:	7b 81       	ldd	r23, Y+3	; 0x03
     1d4:	8c 81       	ldd	r24, Y+4	; 0x04
     1d6:	9d 81       	ldd	r25, Y+5	; 0x05
     1d8:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divsf3>
     1dc:	dc 01       	movw	r26, r24
     1de:	cb 01       	movw	r24, r22
     1e0:	9e 01       	movw	r18, r28
     1e2:	21 59       	subi	r18, 0x91	; 145
     1e4:	3f 4f       	sbci	r19, 0xFF	; 255
     1e6:	f9 01       	movw	r30, r18
     1e8:	80 83       	st	Z, r24
     1ea:	91 83       	std	Z+1, r25	; 0x01
     1ec:	a2 83       	std	Z+2, r26	; 0x02
     1ee:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     1f0:	8e 01       	movw	r16, r28
     1f2:	0d 58       	subi	r16, 0x8D	; 141
     1f4:	1f 4f       	sbci	r17, 0xFF	; 255
     1f6:	ce 01       	movw	r24, r28
     1f8:	81 59       	subi	r24, 0x91	; 145
     1fa:	9f 4f       	sbci	r25, 0xFF	; 255
     1fc:	20 e0       	ldi	r18, 0x00	; 0
     1fe:	30 e0       	ldi	r19, 0x00	; 0
     200:	4a e7       	ldi	r20, 0x7A	; 122
     202:	53 e4       	ldi	r21, 0x43	; 67
     204:	fc 01       	movw	r30, r24
     206:	60 81       	ld	r22, Z
     208:	71 81       	ldd	r23, Z+1	; 0x01
     20a:	82 81       	ldd	r24, Z+2	; 0x02
     20c:	93 81       	ldd	r25, Z+3	; 0x03
     20e:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     212:	dc 01       	movw	r26, r24
     214:	cb 01       	movw	r24, r22
     216:	f8 01       	movw	r30, r16
     218:	80 83       	st	Z, r24
     21a:	91 83       	std	Z+1, r25	; 0x01
     21c:	a2 83       	std	Z+2, r26	; 0x02
     21e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     220:	ce 01       	movw	r24, r28
     222:	8d 58       	subi	r24, 0x8D	; 141
     224:	9f 4f       	sbci	r25, 0xFF	; 255
     226:	20 e0       	ldi	r18, 0x00	; 0
     228:	30 e0       	ldi	r19, 0x00	; 0
     22a:	40 e8       	ldi	r20, 0x80	; 128
     22c:	5f e3       	ldi	r21, 0x3F	; 63
     22e:	fc 01       	movw	r30, r24
     230:	60 81       	ld	r22, Z
     232:	71 81       	ldd	r23, Z+1	; 0x01
     234:	82 81       	ldd	r24, Z+2	; 0x02
     236:	93 81       	ldd	r25, Z+3	; 0x03
     238:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     23c:	88 23       	and	r24, r24
     23e:	4c f4       	brge	.+18     	; 0x252 <twi_lcd_4bit_send+0x196>
		__ticks = 1;
     240:	ce 01       	movw	r24, r28
     242:	89 58       	subi	r24, 0x89	; 137
     244:	9f 4f       	sbci	r25, 0xFF	; 255
     246:	21 e0       	ldi	r18, 0x01	; 1
     248:	30 e0       	ldi	r19, 0x00	; 0
     24a:	fc 01       	movw	r30, r24
     24c:	31 83       	std	Z+1, r19	; 0x01
     24e:	20 83       	st	Z, r18
     250:	6d c0       	rjmp	.+218    	; 0x32c <twi_lcd_4bit_send+0x270>
	else if (__tmp > 65535)
     252:	ce 01       	movw	r24, r28
     254:	8d 58       	subi	r24, 0x8D	; 141
     256:	9f 4f       	sbci	r25, 0xFF	; 255
     258:	20 e0       	ldi	r18, 0x00	; 0
     25a:	3f ef       	ldi	r19, 0xFF	; 255
     25c:	4f e7       	ldi	r20, 0x7F	; 127
     25e:	57 e4       	ldi	r21, 0x47	; 71
     260:	fc 01       	movw	r30, r24
     262:	60 81       	ld	r22, Z
     264:	71 81       	ldd	r23, Z+1	; 0x01
     266:	82 81       	ldd	r24, Z+2	; 0x02
     268:	93 81       	ldd	r25, Z+3	; 0x03
     26a:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     26e:	18 16       	cp	r1, r24
     270:	0c f0       	brlt	.+2      	; 0x274 <twi_lcd_4bit_send+0x1b8>
     272:	4a c0       	rjmp	.+148    	; 0x308 <twi_lcd_4bit_send+0x24c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     274:	ce 01       	movw	r24, r28
     276:	81 59       	subi	r24, 0x91	; 145
     278:	9f 4f       	sbci	r25, 0xFF	; 255
     27a:	20 e0       	ldi	r18, 0x00	; 0
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	40 e2       	ldi	r20, 0x20	; 32
     280:	51 e4       	ldi	r21, 0x41	; 65
     282:	fc 01       	movw	r30, r24
     284:	60 81       	ld	r22, Z
     286:	71 81       	ldd	r23, Z+1	; 0x01
     288:	82 81       	ldd	r24, Z+2	; 0x02
     28a:	93 81       	ldd	r25, Z+3	; 0x03
     28c:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     290:	dc 01       	movw	r26, r24
     292:	cb 01       	movw	r24, r22
     294:	8e 01       	movw	r16, r28
     296:	09 58       	subi	r16, 0x89	; 137
     298:	1f 4f       	sbci	r17, 0xFF	; 255
     29a:	bc 01       	movw	r22, r24
     29c:	cd 01       	movw	r24, r26
     29e:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     2a2:	dc 01       	movw	r26, r24
     2a4:	cb 01       	movw	r24, r22
     2a6:	f8 01       	movw	r30, r16
     2a8:	91 83       	std	Z+1, r25	; 0x01
     2aa:	80 83       	st	Z, r24
		while(__ticks)
     2ac:	ce 01       	movw	r24, r28
     2ae:	89 58       	subi	r24, 0x89	; 137
     2b0:	9f 4f       	sbci	r25, 0xFF	; 255
     2b2:	fc 01       	movw	r30, r24
     2b4:	80 81       	ld	r24, Z
     2b6:	91 81       	ldd	r25, Z+1	; 0x01
     2b8:	89 2b       	or	r24, r25
     2ba:	09 f4       	brne	.+2      	; 0x2be <twi_lcd_4bit_send+0x202>
     2bc:	a0 c0       	rjmp	.+320    	; 0x3fe <twi_lcd_4bit_send+0x342>
     2be:	ce 01       	movw	r24, r28
     2c0:	87 58       	subi	r24, 0x87	; 135
     2c2:	9f 4f       	sbci	r25, 0xFF	; 255
     2c4:	29 e1       	ldi	r18, 0x19	; 25
     2c6:	30 e0       	ldi	r19, 0x00	; 0
     2c8:	fc 01       	movw	r30, r24
     2ca:	31 83       	std	Z+1, r19	; 0x01
     2cc:	20 83       	st	Z, r18
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     2ce:	ce 01       	movw	r24, r28
     2d0:	87 58       	subi	r24, 0x87	; 135
     2d2:	9f 4f       	sbci	r25, 0xFF	; 255
     2d4:	fc 01       	movw	r30, r24
     2d6:	80 81       	ld	r24, Z
     2d8:	91 81       	ldd	r25, Z+1	; 0x01
     2da:	01 97       	sbiw	r24, 0x01	; 1
     2dc:	f1 f7       	brne	.-4      	; 0x2da <twi_lcd_4bit_send+0x21e>
     2de:	9e 01       	movw	r18, r28
     2e0:	27 58       	subi	r18, 0x87	; 135
     2e2:	3f 4f       	sbci	r19, 0xFF	; 255
     2e4:	f9 01       	movw	r30, r18
     2e6:	91 83       	std	Z+1, r25	; 0x01
     2e8:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2ea:	ce 01       	movw	r24, r28
     2ec:	89 58       	subi	r24, 0x89	; 137
     2ee:	9f 4f       	sbci	r25, 0xFF	; 255
     2f0:	9e 01       	movw	r18, r28
     2f2:	29 58       	subi	r18, 0x89	; 137
     2f4:	3f 4f       	sbci	r19, 0xFF	; 255
     2f6:	f9 01       	movw	r30, r18
     2f8:	20 81       	ld	r18, Z
     2fa:	31 81       	ldd	r19, Z+1	; 0x01
     2fc:	21 50       	subi	r18, 0x01	; 1
     2fe:	31 09       	sbc	r19, r1
     300:	fc 01       	movw	r30, r24
     302:	31 83       	std	Z+1, r19	; 0x01
     304:	20 83       	st	Z, r18
     306:	d2 cf       	rjmp	.-92     	; 0x2ac <twi_lcd_4bit_send+0x1f0>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     308:	8e 01       	movw	r16, r28
     30a:	09 58       	subi	r16, 0x89	; 137
     30c:	1f 4f       	sbci	r17, 0xFF	; 255
     30e:	ce 01       	movw	r24, r28
     310:	8d 58       	subi	r24, 0x8D	; 141
     312:	9f 4f       	sbci	r25, 0xFF	; 255
     314:	fc 01       	movw	r30, r24
     316:	60 81       	ld	r22, Z
     318:	71 81       	ldd	r23, Z+1	; 0x01
     31a:	82 81       	ldd	r24, Z+2	; 0x02
     31c:	93 81       	ldd	r25, Z+3	; 0x03
     31e:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     322:	dc 01       	movw	r26, r24
     324:	cb 01       	movw	r24, r22
     326:	f8 01       	movw	r30, r16
     328:	91 83       	std	Z+1, r25	; 0x01
     32a:	80 83       	st	Z, r24
     32c:	ce 01       	movw	r24, r28
     32e:	85 58       	subi	r24, 0x85	; 133
     330:	9f 4f       	sbci	r25, 0xFF	; 255
     332:	9e 01       	movw	r18, r28
     334:	29 58       	subi	r18, 0x89	; 137
     336:	3f 4f       	sbci	r19, 0xFF	; 255
     338:	f9 01       	movw	r30, r18
     33a:	20 81       	ld	r18, Z
     33c:	31 81       	ldd	r19, Z+1	; 0x01
     33e:	fc 01       	movw	r30, r24
     340:	31 83       	std	Z+1, r19	; 0x01
     342:	20 83       	st	Z, r18
     344:	ce 01       	movw	r24, r28
     346:	85 58       	subi	r24, 0x85	; 133
     348:	9f 4f       	sbci	r25, 0xFF	; 255
     34a:	fc 01       	movw	r30, r24
     34c:	80 81       	ld	r24, Z
     34e:	91 81       	ldd	r25, Z+1	; 0x01
     350:	01 97       	sbiw	r24, 0x01	; 1
     352:	f1 f7       	brne	.-4      	; 0x350 <twi_lcd_4bit_send+0x294>
     354:	9e 01       	movw	r18, r28
     356:	25 58       	subi	r18, 0x85	; 133
     358:	3f 4f       	sbci	r19, 0xFF	; 255
     35a:	f9 01       	movw	r30, r18
     35c:	91 83       	std	Z+1, r25	; 0x01
     35e:	80 83       	st	Z, r24
     360:	4e c0       	rjmp	.+156    	; 0x3fe <twi_lcd_4bit_send+0x342>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     362:	ce 01       	movw	r24, r28
     364:	8a 59       	subi	r24, 0x9A	; 154
     366:	9f 4f       	sbci	r25, 0xFF	; 255
     368:	20 e0       	ldi	r18, 0x00	; 0
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	4f e7       	ldi	r20, 0x7F	; 127
     36e:	53 e4       	ldi	r21, 0x43	; 67
     370:	fc 01       	movw	r30, r24
     372:	60 81       	ld	r22, Z
     374:	71 81       	ldd	r23, Z+1	; 0x01
     376:	82 81       	ldd	r24, Z+2	; 0x02
     378:	93 81       	ldd	r25, Z+3	; 0x03
     37a:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     37e:	18 16       	cp	r1, r24
     380:	6c f5       	brge	.+90     	; 0x3dc <twi_lcd_4bit_send+0x320>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     382:	8e 01       	movw	r16, r28
     384:	03 58       	subi	r16, 0x83	; 131
     386:	1f 4f       	sbci	r17, 0xFF	; 255
     388:	ce 01       	movw	r24, r28
     38a:	86 59       	subi	r24, 0x96	; 150
     38c:	9f 4f       	sbci	r25, 0xFF	; 255
     38e:	fc 01       	movw	r30, r24
     390:	60 81       	ld	r22, Z
     392:	71 81       	ldd	r23, Z+1	; 0x01
     394:	82 81       	ldd	r24, Z+2	; 0x02
     396:	93 81       	ldd	r25, Z+3	; 0x03
     398:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     39c:	dc 01       	movw	r26, r24
     39e:	cb 01       	movw	r24, r22
     3a0:	f8 01       	movw	r30, r16
     3a2:	91 83       	std	Z+1, r25	; 0x01
     3a4:	80 83       	st	Z, r24
     3a6:	ce 01       	movw	r24, r28
     3a8:	81 58       	subi	r24, 0x81	; 129
     3aa:	9f 4f       	sbci	r25, 0xFF	; 255
     3ac:	9e 01       	movw	r18, r28
     3ae:	23 58       	subi	r18, 0x83	; 131
     3b0:	3f 4f       	sbci	r19, 0xFF	; 255
     3b2:	f9 01       	movw	r30, r18
     3b4:	20 81       	ld	r18, Z
     3b6:	31 81       	ldd	r19, Z+1	; 0x01
     3b8:	fc 01       	movw	r30, r24
     3ba:	31 83       	std	Z+1, r19	; 0x01
     3bc:	20 83       	st	Z, r18
     3be:	ce 01       	movw	r24, r28
     3c0:	81 58       	subi	r24, 0x81	; 129
     3c2:	9f 4f       	sbci	r25, 0xFF	; 255
     3c4:	fc 01       	movw	r30, r24
     3c6:	80 81       	ld	r24, Z
     3c8:	91 81       	ldd	r25, Z+1	; 0x01
     3ca:	01 97       	sbiw	r24, 0x01	; 1
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <twi_lcd_4bit_send+0x30e>
     3ce:	9e 01       	movw	r18, r28
     3d0:	21 58       	subi	r18, 0x81	; 129
     3d2:	3f 4f       	sbci	r19, 0xFF	; 255
     3d4:	f9 01       	movw	r30, r18
     3d6:	91 83       	std	Z+1, r25	; 0x01
     3d8:	80 83       	st	Z, r24
     3da:	28 c0       	rjmp	.+80     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     3dc:	8e 01       	movw	r16, r28
     3de:	02 59       	subi	r16, 0x92	; 146
     3e0:	1f 4f       	sbci	r17, 0xFF	; 255
     3e2:	ce 01       	movw	r24, r28
     3e4:	8a 59       	subi	r24, 0x9A	; 154
     3e6:	9f 4f       	sbci	r25, 0xFF	; 255
     3e8:	fc 01       	movw	r30, r24
     3ea:	60 81       	ld	r22, Z
     3ec:	71 81       	ldd	r23, Z+1	; 0x01
     3ee:	82 81       	ldd	r24, Z+2	; 0x02
     3f0:	93 81       	ldd	r25, Z+3	; 0x03
     3f2:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     3f6:	dc 01       	movw	r26, r24
     3f8:	cb 01       	movw	r24, r22
     3fa:	f8 01       	movw	r30, r16
     3fc:	80 83       	st	Z, r24
     3fe:	ce 01       	movw	r24, r28
     400:	8f 57       	subi	r24, 0x7F	; 127
     402:	9f 4f       	sbci	r25, 0xFF	; 255
     404:	9e 01       	movw	r18, r28
     406:	22 59       	subi	r18, 0x92	; 146
     408:	3f 4f       	sbci	r19, 0xFF	; 255
     40a:	f9 01       	movw	r30, r18
     40c:	20 81       	ld	r18, Z
     40e:	fc 01       	movw	r30, r24
     410:	20 83       	st	Z, r18
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     412:	ce 01       	movw	r24, r28
     414:	8f 57       	subi	r24, 0x7F	; 127
     416:	9f 4f       	sbci	r25, 0xFF	; 255
     418:	fc 01       	movw	r30, r24
     41a:	80 81       	ld	r24, Z
     41c:	28 2f       	mov	r18, r24
     41e:	2a 95       	dec	r18
     420:	f1 f7       	brne	.-4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     422:	ce 01       	movw	r24, r28
     424:	8f 57       	subi	r24, 0x7F	; 127
     426:	9f 4f       	sbci	r25, 0xFF	; 255
     428:	fc 01       	movw	r30, r24
     42a:	20 83       	st	Z, r18
	_delay_us(1);								//--- 1us Delay
	lcd &= ~(0x04);								//--- Latching Complete
     42c:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     430:	8b 7f       	andi	r24, 0xFB	; 251
     432:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	PCF8574_write(lcd);							//--- Send Data From PCF8574 to LCD PORT
     436:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     43a:	0e 94 49 00 	call	0x92	; 0x92 <PCF8574_write>
     43e:	80 e0       	ldi	r24, 0x00	; 0
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	a0 e8       	ldi	r26, 0x80	; 128
     444:	bf e3       	ldi	r27, 0x3F	; 63
     446:	8e 83       	std	Y+6, r24	; 0x06
     448:	9f 83       	std	Y+7, r25	; 0x07
     44a:	a8 87       	std	Y+8, r26	; 0x08
     44c:	b9 87       	std	Y+9, r27	; 0x09
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     44e:	8e 01       	movw	r16, r28
     450:	06 5b       	subi	r16, 0xB6	; 182
     452:	1f 4f       	sbci	r17, 0xFF	; 255
     454:	2b ea       	ldi	r18, 0xAB	; 171
     456:	3a ea       	ldi	r19, 0xAA	; 170
     458:	4a ea       	ldi	r20, 0xAA	; 170
     45a:	5e e3       	ldi	r21, 0x3E	; 62
     45c:	6e 81       	ldd	r22, Y+6	; 0x06
     45e:	7f 81       	ldd	r23, Y+7	; 0x07
     460:	88 85       	ldd	r24, Y+8	; 0x08
     462:	99 85       	ldd	r25, Y+9	; 0x09
     464:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     468:	dc 01       	movw	r26, r24
     46a:	cb 01       	movw	r24, r22
     46c:	f8 01       	movw	r30, r16
     46e:	80 83       	st	Z, r24
     470:	91 83       	std	Z+1, r25	; 0x01
     472:	a2 83       	std	Z+2, r26	; 0x02
     474:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
     476:	8e 01       	movw	r16, r28
     478:	02 5b       	subi	r16, 0xB2	; 178
     47a:	1f 4f       	sbci	r17, 0xFF	; 255
     47c:	20 e0       	ldi	r18, 0x00	; 0
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	40 e8       	ldi	r20, 0x80	; 128
     482:	5e e3       	ldi	r21, 0x3E	; 62
     484:	6e 81       	ldd	r22, Y+6	; 0x06
     486:	7f 81       	ldd	r23, Y+7	; 0x07
     488:	88 85       	ldd	r24, Y+8	; 0x08
     48a:	99 85       	ldd	r25, Y+9	; 0x09
     48c:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     490:	dc 01       	movw	r26, r24
     492:	cb 01       	movw	r24, r22
     494:	f8 01       	movw	r30, r16
     496:	80 83       	st	Z, r24
     498:	91 83       	std	Z+1, r25	; 0x01
     49a:	a2 83       	std	Z+2, r26	; 0x02
     49c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     49e:	ce 01       	movw	r24, r28
     4a0:	86 5b       	subi	r24, 0xB6	; 182
     4a2:	9f 4f       	sbci	r25, 0xFF	; 255
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	40 e8       	ldi	r20, 0x80	; 128
     4aa:	5f e3       	ldi	r21, 0x3F	; 63
     4ac:	fc 01       	movw	r30, r24
     4ae:	60 81       	ld	r22, Z
     4b0:	71 81       	ldd	r23, Z+1	; 0x01
     4b2:	82 81       	ldd	r24, Z+2	; 0x02
     4b4:	93 81       	ldd	r25, Z+3	; 0x03
     4b6:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     4ba:	88 23       	and	r24, r24
     4bc:	3c f4       	brge	.+14     	; 0x4cc <__stack+0x6d>
		__ticks = 1;
     4be:	ce 01       	movw	r24, r28
     4c0:	8e 5a       	subi	r24, 0xAE	; 174
     4c2:	9f 4f       	sbci	r25, 0xFF	; 255
     4c4:	21 e0       	ldi	r18, 0x01	; 1
     4c6:	fc 01       	movw	r30, r24
     4c8:	20 83       	st	Z, r18
     4ca:	2c c1       	rjmp	.+600    	; 0x724 <__stack+0x2c5>
	else if (__tmp2 > 65535)
     4cc:	ce 01       	movw	r24, r28
     4ce:	82 5b       	subi	r24, 0xB2	; 178
     4d0:	9f 4f       	sbci	r25, 0xFF	; 255
     4d2:	20 e0       	ldi	r18, 0x00	; 0
     4d4:	3f ef       	ldi	r19, 0xFF	; 255
     4d6:	4f e7       	ldi	r20, 0x7F	; 127
     4d8:	57 e4       	ldi	r21, 0x47	; 71
     4da:	fc 01       	movw	r30, r24
     4dc:	60 81       	ld	r22, Z
     4de:	71 81       	ldd	r23, Z+1	; 0x01
     4e0:	82 81       	ldd	r24, Z+2	; 0x02
     4e2:	93 81       	ldd	r25, Z+3	; 0x03
     4e4:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     4e8:	18 16       	cp	r1, r24
     4ea:	0c f0       	brlt	.+2      	; 0x4ee <__stack+0x8f>
     4ec:	cd c0       	rjmp	.+410    	; 0x688 <__stack+0x229>
	{
		_delay_ms(__us / 1000.0);
     4ee:	20 e0       	ldi	r18, 0x00	; 0
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	4a e7       	ldi	r20, 0x7A	; 122
     4f4:	54 e4       	ldi	r21, 0x44	; 68
     4f6:	6e 81       	ldd	r22, Y+6	; 0x06
     4f8:	7f 81       	ldd	r23, Y+7	; 0x07
     4fa:	88 85       	ldd	r24, Y+8	; 0x08
     4fc:	99 85       	ldd	r25, Y+9	; 0x09
     4fe:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divsf3>
     502:	dc 01       	movw	r26, r24
     504:	cb 01       	movw	r24, r22
     506:	9e 01       	movw	r18, r28
     508:	2d 5a       	subi	r18, 0xAD	; 173
     50a:	3f 4f       	sbci	r19, 0xFF	; 255
     50c:	f9 01       	movw	r30, r18
     50e:	80 83       	st	Z, r24
     510:	91 83       	std	Z+1, r25	; 0x01
     512:	a2 83       	std	Z+2, r26	; 0x02
     514:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     516:	8e 01       	movw	r16, r28
     518:	09 5a       	subi	r16, 0xA9	; 169
     51a:	1f 4f       	sbci	r17, 0xFF	; 255
     51c:	ce 01       	movw	r24, r28
     51e:	8d 5a       	subi	r24, 0xAD	; 173
     520:	9f 4f       	sbci	r25, 0xFF	; 255
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	4a e7       	ldi	r20, 0x7A	; 122
     528:	53 e4       	ldi	r21, 0x43	; 67
     52a:	fc 01       	movw	r30, r24
     52c:	60 81       	ld	r22, Z
     52e:	71 81       	ldd	r23, Z+1	; 0x01
     530:	82 81       	ldd	r24, Z+2	; 0x02
     532:	93 81       	ldd	r25, Z+3	; 0x03
     534:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     538:	dc 01       	movw	r26, r24
     53a:	cb 01       	movw	r24, r22
     53c:	f8 01       	movw	r30, r16
     53e:	80 83       	st	Z, r24
     540:	91 83       	std	Z+1, r25	; 0x01
     542:	a2 83       	std	Z+2, r26	; 0x02
     544:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     546:	ce 01       	movw	r24, r28
     548:	89 5a       	subi	r24, 0xA9	; 169
     54a:	9f 4f       	sbci	r25, 0xFF	; 255
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	40 e8       	ldi	r20, 0x80	; 128
     552:	5f e3       	ldi	r21, 0x3F	; 63
     554:	fc 01       	movw	r30, r24
     556:	60 81       	ld	r22, Z
     558:	71 81       	ldd	r23, Z+1	; 0x01
     55a:	82 81       	ldd	r24, Z+2	; 0x02
     55c:	93 81       	ldd	r25, Z+3	; 0x03
     55e:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     562:	88 23       	and	r24, r24
     564:	4c f4       	brge	.+18     	; 0x578 <__stack+0x119>
		__ticks = 1;
     566:	ce 01       	movw	r24, r28
     568:	85 5a       	subi	r24, 0xA5	; 165
     56a:	9f 4f       	sbci	r25, 0xFF	; 255
     56c:	21 e0       	ldi	r18, 0x01	; 1
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	fc 01       	movw	r30, r24
     572:	31 83       	std	Z+1, r19	; 0x01
     574:	20 83       	st	Z, r18
     576:	6d c0       	rjmp	.+218    	; 0x652 <__stack+0x1f3>
	else if (__tmp > 65535)
     578:	ce 01       	movw	r24, r28
     57a:	89 5a       	subi	r24, 0xA9	; 169
     57c:	9f 4f       	sbci	r25, 0xFF	; 255
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	3f ef       	ldi	r19, 0xFF	; 255
     582:	4f e7       	ldi	r20, 0x7F	; 127
     584:	57 e4       	ldi	r21, 0x47	; 71
     586:	fc 01       	movw	r30, r24
     588:	60 81       	ld	r22, Z
     58a:	71 81       	ldd	r23, Z+1	; 0x01
     58c:	82 81       	ldd	r24, Z+2	; 0x02
     58e:	93 81       	ldd	r25, Z+3	; 0x03
     590:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     594:	18 16       	cp	r1, r24
     596:	0c f0       	brlt	.+2      	; 0x59a <__stack+0x13b>
     598:	4a c0       	rjmp	.+148    	; 0x62e <__stack+0x1cf>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     59a:	ce 01       	movw	r24, r28
     59c:	8d 5a       	subi	r24, 0xAD	; 173
     59e:	9f 4f       	sbci	r25, 0xFF	; 255
     5a0:	20 e0       	ldi	r18, 0x00	; 0
     5a2:	30 e0       	ldi	r19, 0x00	; 0
     5a4:	40 e2       	ldi	r20, 0x20	; 32
     5a6:	51 e4       	ldi	r21, 0x41	; 65
     5a8:	fc 01       	movw	r30, r24
     5aa:	60 81       	ld	r22, Z
     5ac:	71 81       	ldd	r23, Z+1	; 0x01
     5ae:	82 81       	ldd	r24, Z+2	; 0x02
     5b0:	93 81       	ldd	r25, Z+3	; 0x03
     5b2:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     5b6:	dc 01       	movw	r26, r24
     5b8:	cb 01       	movw	r24, r22
     5ba:	8e 01       	movw	r16, r28
     5bc:	05 5a       	subi	r16, 0xA5	; 165
     5be:	1f 4f       	sbci	r17, 0xFF	; 255
     5c0:	bc 01       	movw	r22, r24
     5c2:	cd 01       	movw	r24, r26
     5c4:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     5c8:	dc 01       	movw	r26, r24
     5ca:	cb 01       	movw	r24, r22
     5cc:	f8 01       	movw	r30, r16
     5ce:	91 83       	std	Z+1, r25	; 0x01
     5d0:	80 83       	st	Z, r24
		while(__ticks)
     5d2:	ce 01       	movw	r24, r28
     5d4:	85 5a       	subi	r24, 0xA5	; 165
     5d6:	9f 4f       	sbci	r25, 0xFF	; 255
     5d8:	fc 01       	movw	r30, r24
     5da:	80 81       	ld	r24, Z
     5dc:	91 81       	ldd	r25, Z+1	; 0x01
     5de:	89 2b       	or	r24, r25
     5e0:	09 f4       	brne	.+2      	; 0x5e4 <__stack+0x185>
     5e2:	a0 c0       	rjmp	.+320    	; 0x724 <__stack+0x2c5>
     5e4:	ce 01       	movw	r24, r28
     5e6:	83 5a       	subi	r24, 0xA3	; 163
     5e8:	9f 4f       	sbci	r25, 0xFF	; 255
     5ea:	29 e1       	ldi	r18, 0x19	; 25
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	fc 01       	movw	r30, r24
     5f0:	31 83       	std	Z+1, r19	; 0x01
     5f2:	20 83       	st	Z, r18
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     5f4:	ce 01       	movw	r24, r28
     5f6:	83 5a       	subi	r24, 0xA3	; 163
     5f8:	9f 4f       	sbci	r25, 0xFF	; 255
     5fa:	fc 01       	movw	r30, r24
     5fc:	80 81       	ld	r24, Z
     5fe:	91 81       	ldd	r25, Z+1	; 0x01
     600:	01 97       	sbiw	r24, 0x01	; 1
     602:	f1 f7       	brne	.-4      	; 0x600 <__stack+0x1a1>
     604:	9e 01       	movw	r18, r28
     606:	23 5a       	subi	r18, 0xA3	; 163
     608:	3f 4f       	sbci	r19, 0xFF	; 255
     60a:	f9 01       	movw	r30, r18
     60c:	91 83       	std	Z+1, r25	; 0x01
     60e:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     610:	ce 01       	movw	r24, r28
     612:	85 5a       	subi	r24, 0xA5	; 165
     614:	9f 4f       	sbci	r25, 0xFF	; 255
     616:	9e 01       	movw	r18, r28
     618:	25 5a       	subi	r18, 0xA5	; 165
     61a:	3f 4f       	sbci	r19, 0xFF	; 255
     61c:	f9 01       	movw	r30, r18
     61e:	20 81       	ld	r18, Z
     620:	31 81       	ldd	r19, Z+1	; 0x01
     622:	21 50       	subi	r18, 0x01	; 1
     624:	31 09       	sbc	r19, r1
     626:	fc 01       	movw	r30, r24
     628:	31 83       	std	Z+1, r19	; 0x01
     62a:	20 83       	st	Z, r18
     62c:	d2 cf       	rjmp	.-92     	; 0x5d2 <__stack+0x173>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     62e:	8e 01       	movw	r16, r28
     630:	05 5a       	subi	r16, 0xA5	; 165
     632:	1f 4f       	sbci	r17, 0xFF	; 255
     634:	ce 01       	movw	r24, r28
     636:	89 5a       	subi	r24, 0xA9	; 169
     638:	9f 4f       	sbci	r25, 0xFF	; 255
     63a:	fc 01       	movw	r30, r24
     63c:	60 81       	ld	r22, Z
     63e:	71 81       	ldd	r23, Z+1	; 0x01
     640:	82 81       	ldd	r24, Z+2	; 0x02
     642:	93 81       	ldd	r25, Z+3	; 0x03
     644:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     648:	dc 01       	movw	r26, r24
     64a:	cb 01       	movw	r24, r22
     64c:	f8 01       	movw	r30, r16
     64e:	91 83       	std	Z+1, r25	; 0x01
     650:	80 83       	st	Z, r24
     652:	ce 01       	movw	r24, r28
     654:	81 5a       	subi	r24, 0xA1	; 161
     656:	9f 4f       	sbci	r25, 0xFF	; 255
     658:	9e 01       	movw	r18, r28
     65a:	25 5a       	subi	r18, 0xA5	; 165
     65c:	3f 4f       	sbci	r19, 0xFF	; 255
     65e:	f9 01       	movw	r30, r18
     660:	20 81       	ld	r18, Z
     662:	31 81       	ldd	r19, Z+1	; 0x01
     664:	fc 01       	movw	r30, r24
     666:	31 83       	std	Z+1, r19	; 0x01
     668:	20 83       	st	Z, r18
     66a:	ce 01       	movw	r24, r28
     66c:	81 5a       	subi	r24, 0xA1	; 161
     66e:	9f 4f       	sbci	r25, 0xFF	; 255
     670:	fc 01       	movw	r30, r24
     672:	80 81       	ld	r24, Z
     674:	91 81       	ldd	r25, Z+1	; 0x01
     676:	01 97       	sbiw	r24, 0x01	; 1
     678:	f1 f7       	brne	.-4      	; 0x676 <__stack+0x217>
     67a:	9e 01       	movw	r18, r28
     67c:	21 5a       	subi	r18, 0xA1	; 161
     67e:	3f 4f       	sbci	r19, 0xFF	; 255
     680:	f9 01       	movw	r30, r18
     682:	91 83       	std	Z+1, r25	; 0x01
     684:	80 83       	st	Z, r24
     686:	4e c0       	rjmp	.+156    	; 0x724 <__stack+0x2c5>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     688:	ce 01       	movw	r24, r28
     68a:	86 5b       	subi	r24, 0xB6	; 182
     68c:	9f 4f       	sbci	r25, 0xFF	; 255
     68e:	20 e0       	ldi	r18, 0x00	; 0
     690:	30 e0       	ldi	r19, 0x00	; 0
     692:	4f e7       	ldi	r20, 0x7F	; 127
     694:	53 e4       	ldi	r21, 0x43	; 67
     696:	fc 01       	movw	r30, r24
     698:	60 81       	ld	r22, Z
     69a:	71 81       	ldd	r23, Z+1	; 0x01
     69c:	82 81       	ldd	r24, Z+2	; 0x02
     69e:	93 81       	ldd	r25, Z+3	; 0x03
     6a0:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     6a4:	18 16       	cp	r1, r24
     6a6:	6c f5       	brge	.+90     	; 0x702 <__stack+0x2a3>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     6a8:	8e 01       	movw	r16, r28
     6aa:	0f 59       	subi	r16, 0x9F	; 159
     6ac:	1f 4f       	sbci	r17, 0xFF	; 255
     6ae:	ce 01       	movw	r24, r28
     6b0:	82 5b       	subi	r24, 0xB2	; 178
     6b2:	9f 4f       	sbci	r25, 0xFF	; 255
     6b4:	fc 01       	movw	r30, r24
     6b6:	60 81       	ld	r22, Z
     6b8:	71 81       	ldd	r23, Z+1	; 0x01
     6ba:	82 81       	ldd	r24, Z+2	; 0x02
     6bc:	93 81       	ldd	r25, Z+3	; 0x03
     6be:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     6c2:	dc 01       	movw	r26, r24
     6c4:	cb 01       	movw	r24, r22
     6c6:	f8 01       	movw	r30, r16
     6c8:	91 83       	std	Z+1, r25	; 0x01
     6ca:	80 83       	st	Z, r24
     6cc:	ce 01       	movw	r24, r28
     6ce:	8d 59       	subi	r24, 0x9D	; 157
     6d0:	9f 4f       	sbci	r25, 0xFF	; 255
     6d2:	9e 01       	movw	r18, r28
     6d4:	2f 59       	subi	r18, 0x9F	; 159
     6d6:	3f 4f       	sbci	r19, 0xFF	; 255
     6d8:	f9 01       	movw	r30, r18
     6da:	20 81       	ld	r18, Z
     6dc:	31 81       	ldd	r19, Z+1	; 0x01
     6de:	fc 01       	movw	r30, r24
     6e0:	31 83       	std	Z+1, r19	; 0x01
     6e2:	20 83       	st	Z, r18
     6e4:	ce 01       	movw	r24, r28
     6e6:	8d 59       	subi	r24, 0x9D	; 157
     6e8:	9f 4f       	sbci	r25, 0xFF	; 255
     6ea:	fc 01       	movw	r30, r24
     6ec:	80 81       	ld	r24, Z
     6ee:	91 81       	ldd	r25, Z+1	; 0x01
     6f0:	01 97       	sbiw	r24, 0x01	; 1
     6f2:	f1 f7       	brne	.-4      	; 0x6f0 <__stack+0x291>
     6f4:	9e 01       	movw	r18, r28
     6f6:	2d 59       	subi	r18, 0x9D	; 157
     6f8:	3f 4f       	sbci	r19, 0xFF	; 255
     6fa:	f9 01       	movw	r30, r18
     6fc:	91 83       	std	Z+1, r25	; 0x01
     6fe:	80 83       	st	Z, r24
     700:	28 c0       	rjmp	.+80     	; 0x752 <__stack+0x2f3>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     702:	8e 01       	movw	r16, r28
     704:	0e 5a       	subi	r16, 0xAE	; 174
     706:	1f 4f       	sbci	r17, 0xFF	; 255
     708:	ce 01       	movw	r24, r28
     70a:	86 5b       	subi	r24, 0xB6	; 182
     70c:	9f 4f       	sbci	r25, 0xFF	; 255
     70e:	fc 01       	movw	r30, r24
     710:	60 81       	ld	r22, Z
     712:	71 81       	ldd	r23, Z+1	; 0x01
     714:	82 81       	ldd	r24, Z+2	; 0x02
     716:	93 81       	ldd	r25, Z+3	; 0x03
     718:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     71c:	dc 01       	movw	r26, r24
     71e:	cb 01       	movw	r24, r22
     720:	f8 01       	movw	r30, r16
     722:	80 83       	st	Z, r24
     724:	ce 01       	movw	r24, r28
     726:	8b 59       	subi	r24, 0x9B	; 155
     728:	9f 4f       	sbci	r25, 0xFF	; 255
     72a:	9e 01       	movw	r18, r28
     72c:	2e 5a       	subi	r18, 0xAE	; 174
     72e:	3f 4f       	sbci	r19, 0xFF	; 255
     730:	f9 01       	movw	r30, r18
     732:	20 81       	ld	r18, Z
     734:	fc 01       	movw	r30, r24
     736:	20 83       	st	Z, r18
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     738:	ce 01       	movw	r24, r28
     73a:	8b 59       	subi	r24, 0x9B	; 155
     73c:	9f 4f       	sbci	r25, 0xFF	; 255
     73e:	fc 01       	movw	r30, r24
     740:	80 81       	ld	r24, Z
     742:	28 2f       	mov	r18, r24
     744:	2a 95       	dec	r18
     746:	f1 f7       	brne	.-4      	; 0x744 <__stack+0x2e5>
     748:	ce 01       	movw	r24, r28
     74a:	8b 59       	subi	r24, 0x9B	; 155
     74c:	9f 4f       	sbci	r25, 0xFF	; 255
     74e:	fc 01       	movw	r30, r24
     750:	20 83       	st	Z, r18
	_delay_us(1);								//--- 5us Delay to Complete Latching
	
	
	temp = ((x & 0x0F)<<4);						//--- Masking Lower 4-Bit of Data and send it LCD
     752:	ce 01       	movw	r24, r28
     754:	8e 57       	subi	r24, 0x7E	; 126
     756:	9f 4f       	sbci	r25, 0xFF	; 255
     758:	fc 01       	movw	r30, r24
     75a:	80 81       	ld	r24, Z
     75c:	88 2f       	mov	r24, r24
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	82 95       	swap	r24
     762:	92 95       	swap	r25
     764:	90 7f       	andi	r25, 0xF0	; 240
     766:	98 27       	eor	r25, r24
     768:	80 7f       	andi	r24, 0xF0	; 240
     76a:	98 27       	eor	r25, r24
     76c:	89 83       	std	Y+1, r24	; 0x01
	lcd &= 0x0F;								//--- Masking last four bit to prevent the RS, RW, EN, Backlight
     76e:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     772:	8f 70       	andi	r24, 0x0F	; 15
     774:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	lcd |= temp;								//--- 4-Bit Data and LCD control Pin
     778:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <__data_end>
     77c:	89 81       	ldd	r24, Y+1	; 0x01
     77e:	89 2b       	or	r24, r25
     780:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	lcd |= (0x04);								//--- Latching Data to LCD EN = 1
     784:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     788:	84 60       	ori	r24, 0x04	; 4
     78a:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	PCF8574_write(lcd);							//--- Send Data From PCF8574 to LCD PORT
     78e:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     792:	0e 94 49 00 	call	0x92	; 0x92 <PCF8574_write>
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	a0 e8       	ldi	r26, 0x80	; 128
     79c:	bf e3       	ldi	r27, 0x3F	; 63
     79e:	8a 87       	std	Y+10, r24	; 0x0a
     7a0:	9b 87       	std	Y+11, r25	; 0x0b
     7a2:	ac 87       	std	Y+12, r26	; 0x0c
     7a4:	bd 87       	std	Y+13, r27	; 0x0d
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     7a6:	2b ea       	ldi	r18, 0xAB	; 171
     7a8:	3a ea       	ldi	r19, 0xAA	; 170
     7aa:	4a ea       	ldi	r20, 0xAA	; 170
     7ac:	5e e3       	ldi	r21, 0x3E	; 62
     7ae:	6a 85       	ldd	r22, Y+10	; 0x0a
     7b0:	7b 85       	ldd	r23, Y+11	; 0x0b
     7b2:	8c 85       	ldd	r24, Y+12	; 0x0c
     7b4:	9d 85       	ldd	r25, Y+13	; 0x0d
     7b6:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     7ba:	dc 01       	movw	r26, r24
     7bc:	cb 01       	movw	r24, r22
     7be:	8e a7       	std	Y+46, r24	; 0x2e
     7c0:	9f a7       	std	Y+47, r25	; 0x2f
     7c2:	a8 ab       	std	Y+48, r26	; 0x30
     7c4:	b9 ab       	std	Y+49, r27	; 0x31
	__tmp2 = ((F_CPU) / 4e6) * __us;
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	30 e0       	ldi	r19, 0x00	; 0
     7ca:	40 e8       	ldi	r20, 0x80	; 128
     7cc:	5e e3       	ldi	r21, 0x3E	; 62
     7ce:	6a 85       	ldd	r22, Y+10	; 0x0a
     7d0:	7b 85       	ldd	r23, Y+11	; 0x0b
     7d2:	8c 85       	ldd	r24, Y+12	; 0x0c
     7d4:	9d 85       	ldd	r25, Y+13	; 0x0d
     7d6:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     7da:	dc 01       	movw	r26, r24
     7dc:	cb 01       	movw	r24, r22
     7de:	8a ab       	std	Y+50, r24	; 0x32
     7e0:	9b ab       	std	Y+51, r25	; 0x33
     7e2:	ac ab       	std	Y+52, r26	; 0x34
     7e4:	bd ab       	std	Y+53, r27	; 0x35
	if (__tmp < 1.0)
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e8       	ldi	r20, 0x80	; 128
     7ec:	5f e3       	ldi	r21, 0x3F	; 63
     7ee:	6e a5       	ldd	r22, Y+46	; 0x2e
     7f0:	7f a5       	ldd	r23, Y+47	; 0x2f
     7f2:	88 a9       	ldd	r24, Y+48	; 0x30
     7f4:	99 a9       	ldd	r25, Y+49	; 0x31
     7f6:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     7fa:	88 23       	and	r24, r24
     7fc:	1c f4       	brge	.+6      	; 0x804 <__stack+0x3a5>
		__ticks = 1;
     7fe:	81 e0       	ldi	r24, 0x01	; 1
     800:	8e ab       	std	Y+54, r24	; 0x36
     802:	f9 c0       	rjmp	.+498    	; 0x9f6 <__stack+0x597>
	else if (__tmp2 > 65535)
     804:	20 e0       	ldi	r18, 0x00	; 0
     806:	3f ef       	ldi	r19, 0xFF	; 255
     808:	4f e7       	ldi	r20, 0x7F	; 127
     80a:	57 e4       	ldi	r21, 0x47	; 71
     80c:	6a a9       	ldd	r22, Y+50	; 0x32
     80e:	7b a9       	ldd	r23, Y+51	; 0x33
     810:	8c a9       	ldd	r24, Y+52	; 0x34
     812:	9d a9       	ldd	r25, Y+53	; 0x35
     814:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     818:	18 16       	cp	r1, r24
     81a:	0c f0       	brlt	.+2      	; 0x81e <__stack+0x3bf>
     81c:	ae c0       	rjmp	.+348    	; 0x97a <__stack+0x51b>
	{
		_delay_ms(__us / 1000.0);
     81e:	20 e0       	ldi	r18, 0x00	; 0
     820:	30 e0       	ldi	r19, 0x00	; 0
     822:	4a e7       	ldi	r20, 0x7A	; 122
     824:	54 e4       	ldi	r21, 0x44	; 68
     826:	6a 85       	ldd	r22, Y+10	; 0x0a
     828:	7b 85       	ldd	r23, Y+11	; 0x0b
     82a:	8c 85       	ldd	r24, Y+12	; 0x0c
     82c:	9d 85       	ldd	r25, Y+13	; 0x0d
     82e:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divsf3>
     832:	dc 01       	movw	r26, r24
     834:	cb 01       	movw	r24, r22
     836:	8f ab       	std	Y+55, r24	; 0x37
     838:	98 af       	std	Y+56, r25	; 0x38
     83a:	a9 af       	std	Y+57, r26	; 0x39
     83c:	ba af       	std	Y+58, r27	; 0x3a

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     83e:	20 e0       	ldi	r18, 0x00	; 0
     840:	30 e0       	ldi	r19, 0x00	; 0
     842:	4a e7       	ldi	r20, 0x7A	; 122
     844:	53 e4       	ldi	r21, 0x43	; 67
     846:	6f a9       	ldd	r22, Y+55	; 0x37
     848:	78 ad       	ldd	r23, Y+56	; 0x38
     84a:	89 ad       	ldd	r24, Y+57	; 0x39
     84c:	9a ad       	ldd	r25, Y+58	; 0x3a
     84e:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     852:	dc 01       	movw	r26, r24
     854:	cb 01       	movw	r24, r22
     856:	8b af       	std	Y+59, r24	; 0x3b
     858:	9c af       	std	Y+60, r25	; 0x3c
     85a:	ad af       	std	Y+61, r26	; 0x3d
     85c:	be af       	std	Y+62, r27	; 0x3e
	if (__tmp < 1.0)
     85e:	20 e0       	ldi	r18, 0x00	; 0
     860:	30 e0       	ldi	r19, 0x00	; 0
     862:	40 e8       	ldi	r20, 0x80	; 128
     864:	5f e3       	ldi	r21, 0x3F	; 63
     866:	6b ad       	ldd	r22, Y+59	; 0x3b
     868:	7c ad       	ldd	r23, Y+60	; 0x3c
     86a:	8d ad       	ldd	r24, Y+61	; 0x3d
     86c:	9e ad       	ldd	r25, Y+62	; 0x3e
     86e:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     872:	88 23       	and	r24, r24
     874:	44 f4       	brge	.+16     	; 0x886 <__stack+0x427>
		__ticks = 1;
     876:	21 e0       	ldi	r18, 0x01	; 1
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	ce 01       	movw	r24, r28
     87c:	cf 96       	adiw	r24, 0x3f	; 63
     87e:	fc 01       	movw	r30, r24
     880:	31 83       	std	Z+1, r19	; 0x01
     882:	20 83       	st	Z, r18
     884:	5f c0       	rjmp	.+190    	; 0x944 <__stack+0x4e5>
	else if (__tmp > 65535)
     886:	20 e0       	ldi	r18, 0x00	; 0
     888:	3f ef       	ldi	r19, 0xFF	; 255
     88a:	4f e7       	ldi	r20, 0x7F	; 127
     88c:	57 e4       	ldi	r21, 0x47	; 71
     88e:	6b ad       	ldd	r22, Y+59	; 0x3b
     890:	7c ad       	ldd	r23, Y+60	; 0x3c
     892:	8d ad       	ldd	r24, Y+61	; 0x3d
     894:	9e ad       	ldd	r25, Y+62	; 0x3e
     896:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     89a:	18 16       	cp	r1, r24
     89c:	0c f0       	brlt	.+2      	; 0x8a0 <__stack+0x441>
     89e:	44 c0       	rjmp	.+136    	; 0x928 <__stack+0x4c9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	40 e2       	ldi	r20, 0x20	; 32
     8a6:	51 e4       	ldi	r21, 0x41	; 65
     8a8:	6f a9       	ldd	r22, Y+55	; 0x37
     8aa:	78 ad       	ldd	r23, Y+56	; 0x38
     8ac:	89 ad       	ldd	r24, Y+57	; 0x39
     8ae:	9a ad       	ldd	r25, Y+58	; 0x3a
     8b0:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     8b4:	dc 01       	movw	r26, r24
     8b6:	cb 01       	movw	r24, r22
     8b8:	bc 01       	movw	r22, r24
     8ba:	cd 01       	movw	r24, r26
     8bc:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     8c0:	dc 01       	movw	r26, r24
     8c2:	cb 01       	movw	r24, r22
     8c4:	9e 01       	movw	r18, r28
     8c6:	21 5c       	subi	r18, 0xC1	; 193
     8c8:	3f 4f       	sbci	r19, 0xFF	; 255
     8ca:	f9 01       	movw	r30, r18
     8cc:	91 83       	std	Z+1, r25	; 0x01
     8ce:	80 83       	st	Z, r24
		while(__ticks)
     8d0:	ce 01       	movw	r24, r28
     8d2:	cf 96       	adiw	r24, 0x3f	; 63
     8d4:	fc 01       	movw	r30, r24
     8d6:	80 81       	ld	r24, Z
     8d8:	91 81       	ldd	r25, Z+1	; 0x01
     8da:	89 2b       	or	r24, r25
     8dc:	09 f4       	brne	.+2      	; 0x8e0 <__stack+0x481>
     8de:	8b c0       	rjmp	.+278    	; 0x9f6 <__stack+0x597>
     8e0:	ce 01       	movw	r24, r28
     8e2:	8f 5b       	subi	r24, 0xBF	; 191
     8e4:	9f 4f       	sbci	r25, 0xFF	; 255
     8e6:	29 e1       	ldi	r18, 0x19	; 25
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	fc 01       	movw	r30, r24
     8ec:	31 83       	std	Z+1, r19	; 0x01
     8ee:	20 83       	st	Z, r18
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     8f0:	ce 01       	movw	r24, r28
     8f2:	8f 5b       	subi	r24, 0xBF	; 191
     8f4:	9f 4f       	sbci	r25, 0xFF	; 255
     8f6:	fc 01       	movw	r30, r24
     8f8:	80 81       	ld	r24, Z
     8fa:	91 81       	ldd	r25, Z+1	; 0x01
     8fc:	01 97       	sbiw	r24, 0x01	; 1
     8fe:	f1 f7       	brne	.-4      	; 0x8fc <__stack+0x49d>
     900:	9e 01       	movw	r18, r28
     902:	2f 5b       	subi	r18, 0xBF	; 191
     904:	3f 4f       	sbci	r19, 0xFF	; 255
     906:	f9 01       	movw	r30, r18
     908:	91 83       	std	Z+1, r25	; 0x01
     90a:	80 83       	st	Z, r24
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     90c:	ce 01       	movw	r24, r28
     90e:	cf 96       	adiw	r24, 0x3f	; 63
     910:	fc 01       	movw	r30, r24
     912:	80 81       	ld	r24, Z
     914:	91 81       	ldd	r25, Z+1	; 0x01
     916:	9c 01       	movw	r18, r24
     918:	21 50       	subi	r18, 0x01	; 1
     91a:	31 09       	sbc	r19, r1
     91c:	ce 01       	movw	r24, r28
     91e:	cf 96       	adiw	r24, 0x3f	; 63
     920:	fc 01       	movw	r30, r24
     922:	31 83       	std	Z+1, r19	; 0x01
     924:	20 83       	st	Z, r18
     926:	d4 cf       	rjmp	.-88     	; 0x8d0 <__stack+0x471>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     928:	6b ad       	ldd	r22, Y+59	; 0x3b
     92a:	7c ad       	ldd	r23, Y+60	; 0x3c
     92c:	8d ad       	ldd	r24, Y+61	; 0x3d
     92e:	9e ad       	ldd	r25, Y+62	; 0x3e
     930:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     934:	dc 01       	movw	r26, r24
     936:	cb 01       	movw	r24, r22
     938:	9e 01       	movw	r18, r28
     93a:	21 5c       	subi	r18, 0xC1	; 193
     93c:	3f 4f       	sbci	r19, 0xFF	; 255
     93e:	f9 01       	movw	r30, r18
     940:	91 83       	std	Z+1, r25	; 0x01
     942:	80 83       	st	Z, r24
     944:	ce 01       	movw	r24, r28
     946:	8d 5b       	subi	r24, 0xBD	; 189
     948:	9f 4f       	sbci	r25, 0xFF	; 255
     94a:	9e 01       	movw	r18, r28
     94c:	21 5c       	subi	r18, 0xC1	; 193
     94e:	3f 4f       	sbci	r19, 0xFF	; 255
     950:	f9 01       	movw	r30, r18
     952:	20 81       	ld	r18, Z
     954:	31 81       	ldd	r19, Z+1	; 0x01
     956:	fc 01       	movw	r30, r24
     958:	31 83       	std	Z+1, r19	; 0x01
     95a:	20 83       	st	Z, r18
     95c:	ce 01       	movw	r24, r28
     95e:	8d 5b       	subi	r24, 0xBD	; 189
     960:	9f 4f       	sbci	r25, 0xFF	; 255
     962:	fc 01       	movw	r30, r24
     964:	80 81       	ld	r24, Z
     966:	91 81       	ldd	r25, Z+1	; 0x01
     968:	01 97       	sbiw	r24, 0x01	; 1
     96a:	f1 f7       	brne	.-4      	; 0x968 <__stack+0x509>
     96c:	9e 01       	movw	r18, r28
     96e:	2d 5b       	subi	r18, 0xBD	; 189
     970:	3f 4f       	sbci	r19, 0xFF	; 255
     972:	f9 01       	movw	r30, r18
     974:	91 83       	std	Z+1, r25	; 0x01
     976:	80 83       	st	Z, r24
     978:	3e c0       	rjmp	.+124    	; 0x9f6 <__stack+0x597>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     97a:	20 e0       	ldi	r18, 0x00	; 0
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	4f e7       	ldi	r20, 0x7F	; 127
     980:	53 e4       	ldi	r21, 0x43	; 67
     982:	6e a5       	ldd	r22, Y+46	; 0x2e
     984:	7f a5       	ldd	r23, Y+47	; 0x2f
     986:	88 a9       	ldd	r24, Y+48	; 0x30
     988:	99 a9       	ldd	r25, Y+49	; 0x31
     98a:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     98e:	18 16       	cp	r1, r24
     990:	4c f5       	brge	.+82     	; 0x9e4 <__stack+0x585>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     992:	8e 01       	movw	r16, r28
     994:	0b 5b       	subi	r16, 0xBB	; 187
     996:	1f 4f       	sbci	r17, 0xFF	; 255
     998:	6a a9       	ldd	r22, Y+50	; 0x32
     99a:	7b a9       	ldd	r23, Y+51	; 0x33
     99c:	8c a9       	ldd	r24, Y+52	; 0x34
     99e:	9d a9       	ldd	r25, Y+53	; 0x35
     9a0:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     9a4:	dc 01       	movw	r26, r24
     9a6:	cb 01       	movw	r24, r22
     9a8:	f8 01       	movw	r30, r16
     9aa:	91 83       	std	Z+1, r25	; 0x01
     9ac:	80 83       	st	Z, r24
     9ae:	ce 01       	movw	r24, r28
     9b0:	89 5b       	subi	r24, 0xB9	; 185
     9b2:	9f 4f       	sbci	r25, 0xFF	; 255
     9b4:	9e 01       	movw	r18, r28
     9b6:	2b 5b       	subi	r18, 0xBB	; 187
     9b8:	3f 4f       	sbci	r19, 0xFF	; 255
     9ba:	f9 01       	movw	r30, r18
     9bc:	20 81       	ld	r18, Z
     9be:	31 81       	ldd	r19, Z+1	; 0x01
     9c0:	fc 01       	movw	r30, r24
     9c2:	31 83       	std	Z+1, r19	; 0x01
     9c4:	20 83       	st	Z, r18
     9c6:	ce 01       	movw	r24, r28
     9c8:	89 5b       	subi	r24, 0xB9	; 185
     9ca:	9f 4f       	sbci	r25, 0xFF	; 255
     9cc:	fc 01       	movw	r30, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	91 81       	ldd	r25, Z+1	; 0x01
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	f1 f7       	brne	.-4      	; 0x9d2 <__stack+0x573>
     9d6:	9e 01       	movw	r18, r28
     9d8:	29 5b       	subi	r18, 0xB9	; 185
     9da:	3f 4f       	sbci	r19, 0xFF	; 255
     9dc:	f9 01       	movw	r30, r18
     9de:	91 83       	std	Z+1, r25	; 0x01
     9e0:	80 83       	st	Z, r24
     9e2:	1c c0       	rjmp	.+56     	; 0xa1c <__stack+0x5bd>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     9e4:	6e a5       	ldd	r22, Y+46	; 0x2e
     9e6:	7f a5       	ldd	r23, Y+47	; 0x2f
     9e8:	88 a9       	ldd	r24, Y+48	; 0x30
     9ea:	99 a9       	ldd	r25, Y+49	; 0x31
     9ec:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     9f0:	dc 01       	movw	r26, r24
     9f2:	cb 01       	movw	r24, r22
     9f4:	8e ab       	std	Y+54, r24	; 0x36
     9f6:	ce 01       	movw	r24, r28
     9f8:	87 5b       	subi	r24, 0xB7	; 183
     9fa:	9f 4f       	sbci	r25, 0xFF	; 255
     9fc:	2e a9       	ldd	r18, Y+54	; 0x36
     9fe:	fc 01       	movw	r30, r24
     a00:	20 83       	st	Z, r18
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     a02:	ce 01       	movw	r24, r28
     a04:	87 5b       	subi	r24, 0xB7	; 183
     a06:	9f 4f       	sbci	r25, 0xFF	; 255
     a08:	fc 01       	movw	r30, r24
     a0a:	80 81       	ld	r24, Z
     a0c:	28 2f       	mov	r18, r24
     a0e:	2a 95       	dec	r18
     a10:	f1 f7       	brne	.-4      	; 0xa0e <__stack+0x5af>
     a12:	ce 01       	movw	r24, r28
     a14:	87 5b       	subi	r24, 0xB7	; 183
     a16:	9f 4f       	sbci	r25, 0xFF	; 255
     a18:	fc 01       	movw	r30, r24
     a1a:	20 83       	st	Z, r18
	_delay_us(1);								//--- 1us Delay
	lcd &= ~(0x04);								//--- Latching Complete
     a1c:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     a20:	8b 7f       	andi	r24, 0xFB	; 251
     a22:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	PCF8574_write(lcd);							//--- Send Data From PCF8574 to LCD PORT
     a26:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     a2a:	0e 94 49 00 	call	0x92	; 0x92 <PCF8574_write>
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	a0 e8       	ldi	r26, 0x80	; 128
     a34:	bf e3       	ldi	r27, 0x3F	; 63
     a36:	8e 87       	std	Y+14, r24	; 0x0e
     a38:	9f 87       	std	Y+15, r25	; 0x0f
     a3a:	a8 8b       	std	Y+16, r26	; 0x10
     a3c:	b9 8b       	std	Y+17, r27	; 0x11
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     a3e:	2b ea       	ldi	r18, 0xAB	; 171
     a40:	3a ea       	ldi	r19, 0xAA	; 170
     a42:	4a ea       	ldi	r20, 0xAA	; 170
     a44:	5e e3       	ldi	r21, 0x3E	; 62
     a46:	6e 85       	ldd	r22, Y+14	; 0x0e
     a48:	7f 85       	ldd	r23, Y+15	; 0x0f
     a4a:	88 89       	ldd	r24, Y+16	; 0x10
     a4c:	99 89       	ldd	r25, Y+17	; 0x11
     a4e:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     a52:	dc 01       	movw	r26, r24
     a54:	cb 01       	movw	r24, r22
     a56:	8a 8b       	std	Y+18, r24	; 0x12
     a58:	9b 8b       	std	Y+19, r25	; 0x13
     a5a:	ac 8b       	std	Y+20, r26	; 0x14
     a5c:	bd 8b       	std	Y+21, r27	; 0x15
	__tmp2 = ((F_CPU) / 4e6) * __us;
     a5e:	20 e0       	ldi	r18, 0x00	; 0
     a60:	30 e0       	ldi	r19, 0x00	; 0
     a62:	40 e8       	ldi	r20, 0x80	; 128
     a64:	5e e3       	ldi	r21, 0x3E	; 62
     a66:	6e 85       	ldd	r22, Y+14	; 0x0e
     a68:	7f 85       	ldd	r23, Y+15	; 0x0f
     a6a:	88 89       	ldd	r24, Y+16	; 0x10
     a6c:	99 89       	ldd	r25, Y+17	; 0x11
     a6e:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     a72:	dc 01       	movw	r26, r24
     a74:	cb 01       	movw	r24, r22
     a76:	8e 8b       	std	Y+22, r24	; 0x16
     a78:	9f 8b       	std	Y+23, r25	; 0x17
     a7a:	a8 8f       	std	Y+24, r26	; 0x18
     a7c:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
     a7e:	20 e0       	ldi	r18, 0x00	; 0
     a80:	30 e0       	ldi	r19, 0x00	; 0
     a82:	40 e8       	ldi	r20, 0x80	; 128
     a84:	5f e3       	ldi	r21, 0x3F	; 63
     a86:	6a 89       	ldd	r22, Y+18	; 0x12
     a88:	7b 89       	ldd	r23, Y+19	; 0x13
     a8a:	8c 89       	ldd	r24, Y+20	; 0x14
     a8c:	9d 89       	ldd	r25, Y+21	; 0x15
     a8e:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     a92:	88 23       	and	r24, r24
     a94:	1c f4       	brge	.+6      	; 0xa9c <__stack+0x63d>
		__ticks = 1;
     a96:	81 e0       	ldi	r24, 0x01	; 1
     a98:	8a 8f       	std	Y+26, r24	; 0x1a
     a9a:	b2 c0       	rjmp	.+356    	; 0xc00 <__stack+0x7a1>
	else if (__tmp2 > 65535)
     a9c:	20 e0       	ldi	r18, 0x00	; 0
     a9e:	3f ef       	ldi	r19, 0xFF	; 255
     aa0:	4f e7       	ldi	r20, 0x7F	; 127
     aa2:	57 e4       	ldi	r21, 0x47	; 71
     aa4:	6e 89       	ldd	r22, Y+22	; 0x16
     aa6:	7f 89       	ldd	r23, Y+23	; 0x17
     aa8:	88 8d       	ldd	r24, Y+24	; 0x18
     aaa:	99 8d       	ldd	r25, Y+25	; 0x19
     aac:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     ab0:	18 16       	cp	r1, r24
     ab2:	0c f0       	brlt	.+2      	; 0xab6 <__stack+0x657>
     ab4:	7b c0       	rjmp	.+246    	; 0xbac <__stack+0x74d>
	{
		_delay_ms(__us / 1000.0);
     ab6:	20 e0       	ldi	r18, 0x00	; 0
     ab8:	30 e0       	ldi	r19, 0x00	; 0
     aba:	4a e7       	ldi	r20, 0x7A	; 122
     abc:	54 e4       	ldi	r21, 0x44	; 68
     abe:	6e 85       	ldd	r22, Y+14	; 0x0e
     ac0:	7f 85       	ldd	r23, Y+15	; 0x0f
     ac2:	88 89       	ldd	r24, Y+16	; 0x10
     ac4:	99 89       	ldd	r25, Y+17	; 0x11
     ac6:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divsf3>
     aca:	dc 01       	movw	r26, r24
     acc:	cb 01       	movw	r24, r22
     ace:	8b 8f       	std	Y+27, r24	; 0x1b
     ad0:	9c 8f       	std	Y+28, r25	; 0x1c
     ad2:	ad 8f       	std	Y+29, r26	; 0x1d
     ad4:	be 8f       	std	Y+30, r27	; 0x1e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     ad6:	20 e0       	ldi	r18, 0x00	; 0
     ad8:	30 e0       	ldi	r19, 0x00	; 0
     ada:	4a e7       	ldi	r20, 0x7A	; 122
     adc:	53 e4       	ldi	r21, 0x43	; 67
     ade:	6b 8d       	ldd	r22, Y+27	; 0x1b
     ae0:	7c 8d       	ldd	r23, Y+28	; 0x1c
     ae2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ae4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ae6:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     aea:	dc 01       	movw	r26, r24
     aec:	cb 01       	movw	r24, r22
     aee:	8f 8f       	std	Y+31, r24	; 0x1f
     af0:	98 a3       	std	Y+32, r25	; 0x20
     af2:	a9 a3       	std	Y+33, r26	; 0x21
     af4:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	40 e8       	ldi	r20, 0x80	; 128
     afc:	5f e3       	ldi	r21, 0x3F	; 63
     afe:	6f 8d       	ldd	r22, Y+31	; 0x1f
     b00:	78 a1       	ldd	r23, Y+32	; 0x20
     b02:	89 a1       	ldd	r24, Y+33	; 0x21
     b04:	9a a1       	ldd	r25, Y+34	; 0x22
     b06:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     b0a:	88 23       	and	r24, r24
     b0c:	2c f4       	brge	.+10     	; 0xb18 <__stack+0x6b9>
		__ticks = 1;
     b0e:	81 e0       	ldi	r24, 0x01	; 1
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	9c a3       	std	Y+36, r25	; 0x24
     b14:	8b a3       	std	Y+35, r24	; 0x23
     b16:	3f c0       	rjmp	.+126    	; 0xb96 <__stack+0x737>
	else if (__tmp > 65535)
     b18:	20 e0       	ldi	r18, 0x00	; 0
     b1a:	3f ef       	ldi	r19, 0xFF	; 255
     b1c:	4f e7       	ldi	r20, 0x7F	; 127
     b1e:	57 e4       	ldi	r21, 0x47	; 71
     b20:	6f 8d       	ldd	r22, Y+31	; 0x1f
     b22:	78 a1       	ldd	r23, Y+32	; 0x20
     b24:	89 a1       	ldd	r24, Y+33	; 0x21
     b26:	9a a1       	ldd	r25, Y+34	; 0x22
     b28:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     b2c:	18 16       	cp	r1, r24
     b2e:	4c f5       	brge	.+82     	; 0xb82 <__stack+0x723>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b30:	20 e0       	ldi	r18, 0x00	; 0
     b32:	30 e0       	ldi	r19, 0x00	; 0
     b34:	40 e2       	ldi	r20, 0x20	; 32
     b36:	51 e4       	ldi	r21, 0x41	; 65
     b38:	6b 8d       	ldd	r22, Y+27	; 0x1b
     b3a:	7c 8d       	ldd	r23, Y+28	; 0x1c
     b3c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b3e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     b40:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     b44:	dc 01       	movw	r26, r24
     b46:	cb 01       	movw	r24, r22
     b48:	bc 01       	movw	r22, r24
     b4a:	cd 01       	movw	r24, r26
     b4c:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     b50:	dc 01       	movw	r26, r24
     b52:	cb 01       	movw	r24, r22
     b54:	9c a3       	std	Y+36, r25	; 0x24
     b56:	8b a3       	std	Y+35, r24	; 0x23
		while(__ticks)
     b58:	8b a1       	ldd	r24, Y+35	; 0x23
     b5a:	9c a1       	ldd	r25, Y+36	; 0x24
     b5c:	89 2b       	or	r24, r25
     b5e:	09 f4       	brne	.+2      	; 0xb62 <__stack+0x703>
     b60:	4f c0       	rjmp	.+158    	; 0xc00 <__stack+0x7a1>
     b62:	89 e1       	ldi	r24, 0x19	; 25
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	9e a3       	std	Y+38, r25	; 0x26
     b68:	8d a3       	std	Y+37, r24	; 0x25
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     b6a:	8d a1       	ldd	r24, Y+37	; 0x25
     b6c:	9e a1       	ldd	r25, Y+38	; 0x26
     b6e:	01 97       	sbiw	r24, 0x01	; 1
     b70:	f1 f7       	brne	.-4      	; 0xb6e <__stack+0x70f>
     b72:	9e a3       	std	Y+38, r25	; 0x26
     b74:	8d a3       	std	Y+37, r24	; 0x25
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b76:	8b a1       	ldd	r24, Y+35	; 0x23
     b78:	9c a1       	ldd	r25, Y+36	; 0x24
     b7a:	01 97       	sbiw	r24, 0x01	; 1
     b7c:	9c a3       	std	Y+36, r25	; 0x24
     b7e:	8b a3       	std	Y+35, r24	; 0x23
     b80:	eb cf       	rjmp	.-42     	; 0xb58 <__stack+0x6f9>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b82:	6f 8d       	ldd	r22, Y+31	; 0x1f
     b84:	78 a1       	ldd	r23, Y+32	; 0x20
     b86:	89 a1       	ldd	r24, Y+33	; 0x21
     b88:	9a a1       	ldd	r25, Y+34	; 0x22
     b8a:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     b8e:	dc 01       	movw	r26, r24
     b90:	cb 01       	movw	r24, r22
     b92:	9c a3       	std	Y+36, r25	; 0x24
     b94:	8b a3       	std	Y+35, r24	; 0x23
     b96:	8b a1       	ldd	r24, Y+35	; 0x23
     b98:	9c a1       	ldd	r25, Y+36	; 0x24
     b9a:	98 a7       	std	Y+40, r25	; 0x28
     b9c:	8f a3       	std	Y+39, r24	; 0x27
     b9e:	8f a1       	ldd	r24, Y+39	; 0x27
     ba0:	98 a5       	ldd	r25, Y+40	; 0x28
     ba2:	01 97       	sbiw	r24, 0x01	; 1
     ba4:	f1 f7       	brne	.-4      	; 0xba2 <__stack+0x743>
     ba6:	98 a7       	std	Y+40, r25	; 0x28
     ba8:	8f a3       	std	Y+39, r24	; 0x27
     baa:	2a c0       	rjmp	.+84     	; 0xc00 <__stack+0x7a1>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     bac:	20 e0       	ldi	r18, 0x00	; 0
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	4f e7       	ldi	r20, 0x7F	; 127
     bb2:	53 e4       	ldi	r21, 0x43	; 67
     bb4:	6a 89       	ldd	r22, Y+18	; 0x12
     bb6:	7b 89       	ldd	r23, Y+19	; 0x13
     bb8:	8c 89       	ldd	r24, Y+20	; 0x14
     bba:	9d 89       	ldd	r25, Y+21	; 0x15
     bbc:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     bc0:	18 16       	cp	r1, r24
     bc2:	ac f4       	brge	.+42     	; 0xbee <__stack+0x78f>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     bc4:	6e 89       	ldd	r22, Y+22	; 0x16
     bc6:	7f 89       	ldd	r23, Y+23	; 0x17
     bc8:	88 8d       	ldd	r24, Y+24	; 0x18
     bca:	99 8d       	ldd	r25, Y+25	; 0x19
     bcc:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     bd0:	dc 01       	movw	r26, r24
     bd2:	cb 01       	movw	r24, r22
     bd4:	9a a7       	std	Y+42, r25	; 0x2a
     bd6:	89 a7       	std	Y+41, r24	; 0x29
     bd8:	89 a5       	ldd	r24, Y+41	; 0x29
     bda:	9a a5       	ldd	r25, Y+42	; 0x2a
     bdc:	9c a7       	std	Y+44, r25	; 0x2c
     bde:	8b a7       	std	Y+43, r24	; 0x2b
     be0:	8b a5       	ldd	r24, Y+43	; 0x2b
     be2:	9c a5       	ldd	r25, Y+44	; 0x2c
     be4:	01 97       	sbiw	r24, 0x01	; 1
     be6:	f1 f7       	brne	.-4      	; 0xbe4 <__stack+0x785>
     be8:	9c a7       	std	Y+44, r25	; 0x2c
     bea:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_us(1);								//--- 5us Delay to Complete Latching
	
}
     bec:	0f c0       	rjmp	.+30     	; 0xc0c <__stack+0x7ad>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     bee:	6a 89       	ldd	r22, Y+18	; 0x12
     bf0:	7b 89       	ldd	r23, Y+19	; 0x13
     bf2:	8c 89       	ldd	r24, Y+20	; 0x14
     bf4:	9d 89       	ldd	r25, Y+21	; 0x15
     bf6:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     bfa:	dc 01       	movw	r26, r24
     bfc:	cb 01       	movw	r24, r22
     bfe:	8a 8f       	std	Y+26, r24	; 0x1a
     c00:	8a 8d       	ldd	r24, Y+26	; 0x1a
     c02:	8d a7       	std	Y+45, r24	; 0x2d
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     c04:	8d a5       	ldd	r24, Y+45	; 0x2d
     c06:	8a 95       	dec	r24
     c08:	f1 f7       	brne	.-4      	; 0xc06 <__stack+0x7a7>
     c0a:	8d a7       	std	Y+45, r24	; 0x2d
     c0c:	00 00       	nop
     c0e:	ce 57       	subi	r28, 0x7E	; 126
     c10:	df 4f       	sbci	r29, 0xFF	; 255
     c12:	0f b6       	in	r0, 0x3f	; 63
     c14:	f8 94       	cli
     c16:	de bf       	out	0x3e, r29	; 62
     c18:	0f be       	out	0x3f, r0	; 63
     c1a:	cd bf       	out	0x3d, r28	; 61
     c1c:	df 91       	pop	r29
     c1e:	cf 91       	pop	r28
     c20:	1f 91       	pop	r17
     c22:	0f 91       	pop	r16
     c24:	08 95       	ret

00000c26 <twi_lcd_cmd>:

/* Function to Write to LCD Command Register */

void twi_lcd_cmd(unsigned char x)
{
     c26:	cf 93       	push	r28
     c28:	df 93       	push	r29
     c2a:	1f 92       	push	r1
     c2c:	cd b7       	in	r28, 0x3d	; 61
     c2e:	de b7       	in	r29, 0x3e	; 62
     c30:	89 83       	std	Y+1, r24	; 0x01
	lcd = 0x08;									//--- Enable Backlight Pin
     c32:	88 e0       	ldi	r24, 0x08	; 8
     c34:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	lcd &= ~(0x01);								//--- Select Command Register By RS = 0
     c38:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     c3c:	8e 7f       	andi	r24, 0xFE	; 254
     c3e:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	PCF8574_write(lcd);							//--- Send Data From PCF8574 to LCD PORT
     c42:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     c46:	0e 94 49 00 	call	0x92	; 0x92 <PCF8574_write>
	twi_lcd_4bit_send(x);						//--- Function to Write 4-bit data to LCD
     c4a:	89 81       	ldd	r24, Y+1	; 0x01
     c4c:	0e 94 5e 00 	call	0xbc	; 0xbc <twi_lcd_4bit_send>
	
}
     c50:	00 00       	nop
     c52:	0f 90       	pop	r0
     c54:	df 91       	pop	r29
     c56:	cf 91       	pop	r28
     c58:	08 95       	ret

00000c5a <twi_lcd_dwr>:
/* Function to Write to LCD Command Register */
void twi_lcd_dwr(unsigned char x)
{
     c5a:	cf 93       	push	r28
     c5c:	df 93       	push	r29
     c5e:	1f 92       	push	r1
     c60:	cd b7       	in	r28, 0x3d	; 61
     c62:	de b7       	in	r29, 0x3e	; 62
     c64:	89 83       	std	Y+1, r24	; 0x01
	lcd |= 0x09;								//--- Enable Backlight Pin & Select Data Register By RS = 1
     c66:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     c6a:	89 60       	ori	r24, 0x09	; 9
     c6c:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	PCF8574_write(lcd);							//--- Send Data From PCF8574 to LCD PORT
     c70:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     c74:	0e 94 49 00 	call	0x92	; 0x92 <PCF8574_write>
	twi_lcd_4bit_send(x);						//--- Function to Write 4-bit data to LCD
     c78:	89 81       	ldd	r24, Y+1	; 0x01
     c7a:	0e 94 5e 00 	call	0xbc	; 0xbc <twi_lcd_4bit_send>
}
     c7e:	00 00       	nop
     c80:	0f 90       	pop	r0
     c82:	df 91       	pop	r29
     c84:	cf 91       	pop	r28
     c86:	08 95       	ret

00000c88 <twi_lcd_msg>:

/* Function to Send String of Data */

void twi_lcd_msg(char *c)
{
     c88:	cf 93       	push	r28
     c8a:	df 93       	push	r29
     c8c:	00 d0       	rcall	.+0      	; 0xc8e <twi_lcd_msg+0x6>
     c8e:	cd b7       	in	r28, 0x3d	; 61
     c90:	de b7       	in	r29, 0x3e	; 62
     c92:	9a 83       	std	Y+2, r25	; 0x02
     c94:	89 83       	std	Y+1, r24	; 0x01
	while (*c != '\0')							//--- Check Pointer for Null
     c96:	89 81       	ldd	r24, Y+1	; 0x01
     c98:	9a 81       	ldd	r25, Y+2	; 0x02
     c9a:	fc 01       	movw	r30, r24
     c9c:	80 81       	ld	r24, Z
     c9e:	88 23       	and	r24, r24
     ca0:	61 f0       	breq	.+24     	; 0xcba <twi_lcd_msg+0x32>
	twi_lcd_dwr(*c++);							//--- Send the String of Data
     ca2:	89 81       	ldd	r24, Y+1	; 0x01
     ca4:	9a 81       	ldd	r25, Y+2	; 0x02
     ca6:	9c 01       	movw	r18, r24
     ca8:	2f 5f       	subi	r18, 0xFF	; 255
     caa:	3f 4f       	sbci	r19, 0xFF	; 255
     cac:	3a 83       	std	Y+2, r19	; 0x02
     cae:	29 83       	std	Y+1, r18	; 0x01
     cb0:	fc 01       	movw	r30, r24
     cb2:	80 81       	ld	r24, Z
     cb4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <twi_lcd_dwr>

/* Function to Send String of Data */

void twi_lcd_msg(char *c)
{
	while (*c != '\0')							//--- Check Pointer for Null
     cb8:	ee cf       	rjmp	.-36     	; 0xc96 <twi_lcd_msg+0xe>
	twi_lcd_dwr(*c++);							//--- Send the String of Data
}
     cba:	00 00       	nop
     cbc:	0f 90       	pop	r0
     cbe:	0f 90       	pop	r0
     cc0:	df 91       	pop	r29
     cc2:	cf 91       	pop	r28
     cc4:	08 95       	ret

00000cc6 <twi_lcd_clear>:

/* Function to Execute Clear LCD Command */

void twi_lcd_clear()
{
     cc6:	cf 93       	push	r28
     cc8:	df 93       	push	r29
     cca:	cd b7       	in	r28, 0x3d	; 61
     ccc:	de b7       	in	r29, 0x3e	; 62
	twi_lcd_cmd(0x01);
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
}
     cd4:	00 00       	nop
     cd6:	df 91       	pop	r29
     cd8:	cf 91       	pop	r28
     cda:	08 95       	ret

00000cdc <twi_lcd_init>:

/* Function to Initialize LCD in 4-Bit Mode, Cursor Setting and Row Selection */

void twi_lcd_init()
{
     cdc:	cf 93       	push	r28
     cde:	df 93       	push	r29
     ce0:	cd b7       	in	r28, 0x3d	; 61
     ce2:	de b7       	in	r29, 0x3e	; 62
     ce4:	ae 97       	sbiw	r28, 0x2e	; 46
     ce6:	0f b6       	in	r0, 0x3f	; 63
     ce8:	f8 94       	cli
     cea:	de bf       	out	0x3e, r29	; 62
     cec:	0f be       	out	0x3f, r0	; 63
     cee:	cd bf       	out	0x3d, r28	; 61
	lcd = 0x04;						//--- EN = 1 for 25us initialize Sequence
     cf0:	84 e0       	ldi	r24, 0x04	; 4
     cf2:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
	PCF8574_write(lcd);
     cf6:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <__data_end>
     cfa:	0e 94 49 00 	call	0x92	; 0x92 <PCF8574_write>
     cfe:	80 e0       	ldi	r24, 0x00	; 0
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	a8 ec       	ldi	r26, 0xC8	; 200
     d04:	b1 e4       	ldi	r27, 0x41	; 65
     d06:	89 83       	std	Y+1, r24	; 0x01
     d08:	9a 83       	std	Y+2, r25	; 0x02
     d0a:	ab 83       	std	Y+3, r26	; 0x03
     d0c:	bc 83       	std	Y+4, r27	; 0x04
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     d0e:	2b ea       	ldi	r18, 0xAB	; 171
     d10:	3a ea       	ldi	r19, 0xAA	; 170
     d12:	4a ea       	ldi	r20, 0xAA	; 170
     d14:	5e e3       	ldi	r21, 0x3E	; 62
     d16:	69 81       	ldd	r22, Y+1	; 0x01
     d18:	7a 81       	ldd	r23, Y+2	; 0x02
     d1a:	8b 81       	ldd	r24, Y+3	; 0x03
     d1c:	9c 81       	ldd	r25, Y+4	; 0x04
     d1e:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     d22:	dc 01       	movw	r26, r24
     d24:	cb 01       	movw	r24, r22
     d26:	8b 8b       	std	Y+19, r24	; 0x13
     d28:	9c 8b       	std	Y+20, r25	; 0x14
     d2a:	ad 8b       	std	Y+21, r26	; 0x15
     d2c:	be 8b       	std	Y+22, r27	; 0x16
	__tmp2 = ((F_CPU) / 4e6) * __us;
     d2e:	20 e0       	ldi	r18, 0x00	; 0
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	40 e8       	ldi	r20, 0x80	; 128
     d34:	5e e3       	ldi	r21, 0x3E	; 62
     d36:	69 81       	ldd	r22, Y+1	; 0x01
     d38:	7a 81       	ldd	r23, Y+2	; 0x02
     d3a:	8b 81       	ldd	r24, Y+3	; 0x03
     d3c:	9c 81       	ldd	r25, Y+4	; 0x04
     d3e:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     d42:	dc 01       	movw	r26, r24
     d44:	cb 01       	movw	r24, r22
     d46:	8f 8b       	std	Y+23, r24	; 0x17
     d48:	98 8f       	std	Y+24, r25	; 0x18
     d4a:	a9 8f       	std	Y+25, r26	; 0x19
     d4c:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     d4e:	20 e0       	ldi	r18, 0x00	; 0
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	40 e8       	ldi	r20, 0x80	; 128
     d54:	5f e3       	ldi	r21, 0x3F	; 63
     d56:	6b 89       	ldd	r22, Y+19	; 0x13
     d58:	7c 89       	ldd	r23, Y+20	; 0x14
     d5a:	8d 89       	ldd	r24, Y+21	; 0x15
     d5c:	9e 89       	ldd	r25, Y+22	; 0x16
     d5e:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     d62:	88 23       	and	r24, r24
     d64:	1c f4       	brge	.+6      	; 0xd6c <twi_lcd_init+0x90>
		__ticks = 1;
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	8b 8f       	std	Y+27, r24	; 0x1b
     d6a:	b2 c0       	rjmp	.+356    	; 0xed0 <twi_lcd_init+0x1f4>
	else if (__tmp2 > 65535)
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	3f ef       	ldi	r19, 0xFF	; 255
     d70:	4f e7       	ldi	r20, 0x7F	; 127
     d72:	57 e4       	ldi	r21, 0x47	; 71
     d74:	6f 89       	ldd	r22, Y+23	; 0x17
     d76:	78 8d       	ldd	r23, Y+24	; 0x18
     d78:	89 8d       	ldd	r24, Y+25	; 0x19
     d7a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     d7c:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     d80:	18 16       	cp	r1, r24
     d82:	0c f0       	brlt	.+2      	; 0xd86 <twi_lcd_init+0xaa>
     d84:	7b c0       	rjmp	.+246    	; 0xe7c <twi_lcd_init+0x1a0>
	{
		_delay_ms(__us / 1000.0);
     d86:	20 e0       	ldi	r18, 0x00	; 0
     d88:	30 e0       	ldi	r19, 0x00	; 0
     d8a:	4a e7       	ldi	r20, 0x7A	; 122
     d8c:	54 e4       	ldi	r21, 0x44	; 68
     d8e:	69 81       	ldd	r22, Y+1	; 0x01
     d90:	7a 81       	ldd	r23, Y+2	; 0x02
     d92:	8b 81       	ldd	r24, Y+3	; 0x03
     d94:	9c 81       	ldd	r25, Y+4	; 0x04
     d96:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divsf3>
     d9a:	dc 01       	movw	r26, r24
     d9c:	cb 01       	movw	r24, r22
     d9e:	8c 8f       	std	Y+28, r24	; 0x1c
     da0:	9d 8f       	std	Y+29, r25	; 0x1d
     da2:	ae 8f       	std	Y+30, r26	; 0x1e
     da4:	bf 8f       	std	Y+31, r27	; 0x1f

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     da6:	20 e0       	ldi	r18, 0x00	; 0
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	4a e7       	ldi	r20, 0x7A	; 122
     dac:	53 e4       	ldi	r21, 0x43	; 67
     dae:	6c 8d       	ldd	r22, Y+28	; 0x1c
     db0:	7d 8d       	ldd	r23, Y+29	; 0x1d
     db2:	8e 8d       	ldd	r24, Y+30	; 0x1e
     db4:	9f 8d       	ldd	r25, Y+31	; 0x1f
     db6:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     dba:	dc 01       	movw	r26, r24
     dbc:	cb 01       	movw	r24, r22
     dbe:	88 a3       	std	Y+32, r24	; 0x20
     dc0:	99 a3       	std	Y+33, r25	; 0x21
     dc2:	aa a3       	std	Y+34, r26	; 0x22
     dc4:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
     dc6:	20 e0       	ldi	r18, 0x00	; 0
     dc8:	30 e0       	ldi	r19, 0x00	; 0
     dca:	40 e8       	ldi	r20, 0x80	; 128
     dcc:	5f e3       	ldi	r21, 0x3F	; 63
     dce:	68 a1       	ldd	r22, Y+32	; 0x20
     dd0:	79 a1       	ldd	r23, Y+33	; 0x21
     dd2:	8a a1       	ldd	r24, Y+34	; 0x22
     dd4:	9b a1       	ldd	r25, Y+35	; 0x23
     dd6:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     dda:	88 23       	and	r24, r24
     ddc:	2c f4       	brge	.+10     	; 0xde8 <twi_lcd_init+0x10c>
		__ticks = 1;
     dde:	81 e0       	ldi	r24, 0x01	; 1
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	9d a3       	std	Y+37, r25	; 0x25
     de4:	8c a3       	std	Y+36, r24	; 0x24
     de6:	3f c0       	rjmp	.+126    	; 0xe66 <twi_lcd_init+0x18a>
	else if (__tmp > 65535)
     de8:	20 e0       	ldi	r18, 0x00	; 0
     dea:	3f ef       	ldi	r19, 0xFF	; 255
     dec:	4f e7       	ldi	r20, 0x7F	; 127
     dee:	57 e4       	ldi	r21, 0x47	; 71
     df0:	68 a1       	ldd	r22, Y+32	; 0x20
     df2:	79 a1       	ldd	r23, Y+33	; 0x21
     df4:	8a a1       	ldd	r24, Y+34	; 0x22
     df6:	9b a1       	ldd	r25, Y+35	; 0x23
     df8:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     dfc:	18 16       	cp	r1, r24
     dfe:	4c f5       	brge	.+82     	; 0xe52 <twi_lcd_init+0x176>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e00:	20 e0       	ldi	r18, 0x00	; 0
     e02:	30 e0       	ldi	r19, 0x00	; 0
     e04:	40 e2       	ldi	r20, 0x20	; 32
     e06:	51 e4       	ldi	r21, 0x41	; 65
     e08:	6c 8d       	ldd	r22, Y+28	; 0x1c
     e0a:	7d 8d       	ldd	r23, Y+29	; 0x1d
     e0c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     e0e:	9f 8d       	ldd	r25, Y+31	; 0x1f
     e10:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     e14:	dc 01       	movw	r26, r24
     e16:	cb 01       	movw	r24, r22
     e18:	bc 01       	movw	r22, r24
     e1a:	cd 01       	movw	r24, r26
     e1c:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     e20:	dc 01       	movw	r26, r24
     e22:	cb 01       	movw	r24, r22
     e24:	9d a3       	std	Y+37, r25	; 0x25
     e26:	8c a3       	std	Y+36, r24	; 0x24
		while(__ticks)
     e28:	8c a1       	ldd	r24, Y+36	; 0x24
     e2a:	9d a1       	ldd	r25, Y+37	; 0x25
     e2c:	89 2b       	or	r24, r25
     e2e:	09 f4       	brne	.+2      	; 0xe32 <twi_lcd_init+0x156>
     e30:	4f c0       	rjmp	.+158    	; 0xed0 <twi_lcd_init+0x1f4>
     e32:	89 e1       	ldi	r24, 0x19	; 25
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	9f a3       	std	Y+39, r25	; 0x27
     e38:	8e a3       	std	Y+38, r24	; 0x26
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     e3a:	8e a1       	ldd	r24, Y+38	; 0x26
     e3c:	9f a1       	ldd	r25, Y+39	; 0x27
     e3e:	01 97       	sbiw	r24, 0x01	; 1
     e40:	f1 f7       	brne	.-4      	; 0xe3e <twi_lcd_init+0x162>
     e42:	9f a3       	std	Y+39, r25	; 0x27
     e44:	8e a3       	std	Y+38, r24	; 0x26
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e46:	8c a1       	ldd	r24, Y+36	; 0x24
     e48:	9d a1       	ldd	r25, Y+37	; 0x25
     e4a:	01 97       	sbiw	r24, 0x01	; 1
     e4c:	9d a3       	std	Y+37, r25	; 0x25
     e4e:	8c a3       	std	Y+36, r24	; 0x24
     e50:	eb cf       	rjmp	.-42     	; 0xe28 <twi_lcd_init+0x14c>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e52:	68 a1       	ldd	r22, Y+32	; 0x20
     e54:	79 a1       	ldd	r23, Y+33	; 0x21
     e56:	8a a1       	ldd	r24, Y+34	; 0x22
     e58:	9b a1       	ldd	r25, Y+35	; 0x23
     e5a:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     e5e:	dc 01       	movw	r26, r24
     e60:	cb 01       	movw	r24, r22
     e62:	9d a3       	std	Y+37, r25	; 0x25
     e64:	8c a3       	std	Y+36, r24	; 0x24
     e66:	8c a1       	ldd	r24, Y+36	; 0x24
     e68:	9d a1       	ldd	r25, Y+37	; 0x25
     e6a:	99 a7       	std	Y+41, r25	; 0x29
     e6c:	88 a7       	std	Y+40, r24	; 0x28
     e6e:	88 a5       	ldd	r24, Y+40	; 0x28
     e70:	99 a5       	ldd	r25, Y+41	; 0x29
     e72:	01 97       	sbiw	r24, 0x01	; 1
     e74:	f1 f7       	brne	.-4      	; 0xe72 <twi_lcd_init+0x196>
     e76:	99 a7       	std	Y+41, r25	; 0x29
     e78:	88 a7       	std	Y+40, r24	; 0x28
     e7a:	2a c0       	rjmp	.+84     	; 0xed0 <twi_lcd_init+0x1f4>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     e7c:	20 e0       	ldi	r18, 0x00	; 0
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	4f e7       	ldi	r20, 0x7F	; 127
     e82:	53 e4       	ldi	r21, 0x43	; 67
     e84:	6b 89       	ldd	r22, Y+19	; 0x13
     e86:	7c 89       	ldd	r23, Y+20	; 0x14
     e88:	8d 89       	ldd	r24, Y+21	; 0x15
     e8a:	9e 89       	ldd	r25, Y+22	; 0x16
     e8c:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     e90:	18 16       	cp	r1, r24
     e92:	ac f4       	brge	.+42     	; 0xebe <twi_lcd_init+0x1e2>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     e94:	6f 89       	ldd	r22, Y+23	; 0x17
     e96:	78 8d       	ldd	r23, Y+24	; 0x18
     e98:	89 8d       	ldd	r24, Y+25	; 0x19
     e9a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     e9c:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     ea0:	dc 01       	movw	r26, r24
     ea2:	cb 01       	movw	r24, r22
     ea4:	9b a7       	std	Y+43, r25	; 0x2b
     ea6:	8a a7       	std	Y+42, r24	; 0x2a
     ea8:	8a a5       	ldd	r24, Y+42	; 0x2a
     eaa:	9b a5       	ldd	r25, Y+43	; 0x2b
     eac:	9d a7       	std	Y+45, r25	; 0x2d
     eae:	8c a7       	std	Y+44, r24	; 0x2c
     eb0:	8c a5       	ldd	r24, Y+44	; 0x2c
     eb2:	9d a5       	ldd	r25, Y+45	; 0x2d
     eb4:	01 97       	sbiw	r24, 0x01	; 1
     eb6:	f1 f7       	brne	.-4      	; 0xeb4 <twi_lcd_init+0x1d8>
     eb8:	9d a7       	std	Y+45, r25	; 0x2d
     eba:	8c a7       	std	Y+44, r24	; 0x2c
     ebc:	0f c0       	rjmp	.+30     	; 0xedc <twi_lcd_init+0x200>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     ebe:	6b 89       	ldd	r22, Y+19	; 0x13
     ec0:	7c 89       	ldd	r23, Y+20	; 0x14
     ec2:	8d 89       	ldd	r24, Y+21	; 0x15
     ec4:	9e 89       	ldd	r25, Y+22	; 0x16
     ec6:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     eca:	dc 01       	movw	r26, r24
     ecc:	cb 01       	movw	r24, r22
     ece:	8b 8f       	std	Y+27, r24	; 0x1b
     ed0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     ed2:	8e a7       	std	Y+46, r24	; 0x2e
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     ed4:	8e a5       	ldd	r24, Y+46	; 0x2e
     ed6:	8a 95       	dec	r24
     ed8:	f1 f7       	brne	.-4      	; 0xed6 <twi_lcd_init+0x1fa>
     eda:	8e a7       	std	Y+46, r24	; 0x2e
	_delay_us(25);
	twi_lcd_cmd(0x03);				//--- Initialize Sequence
     edc:	83 e0       	ldi	r24, 0x03	; 3
     ede:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
	twi_lcd_cmd(0x03);				//--- Initialize Sequence
     ee2:	83 e0       	ldi	r24, 0x03	; 3
     ee4:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
	twi_lcd_cmd(0x03);				//--- Initialize Sequence
     ee8:	83 e0       	ldi	r24, 0x03	; 3
     eea:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
	twi_lcd_cmd(0x02);				//--- Return to Home
     eee:	82 e0       	ldi	r24, 0x02	; 2
     ef0:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
	twi_lcd_cmd(0x28);				//--- 4-Bit Mode 2 - Row Select
     ef4:	88 e2       	ldi	r24, 0x28	; 40
     ef6:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
	twi_lcd_cmd(0x0F);				//--- Cursor on, Blinking on
     efa:	8f e0       	ldi	r24, 0x0F	; 15
     efc:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
	twi_lcd_cmd(0x01);				//--- Clear LCD
     f00:	81 e0       	ldi	r24, 0x01	; 1
     f02:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
	twi_lcd_cmd(0x06);				//--- Auto increment Cursor
     f06:	86 e0       	ldi	r24, 0x06	; 6
     f08:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
	twi_lcd_cmd(0x80);				//--- Row 1 Column 1 Address
     f0c:	80 e8       	ldi	r24, 0x80	; 128
     f0e:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
     f12:	80 e0       	ldi	r24, 0x00	; 0
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	a0 e8       	ldi	r26, 0x80	; 128
     f18:	bf e3       	ldi	r27, 0x3F	; 63
     f1a:	8d 83       	std	Y+5, r24	; 0x05
     f1c:	9e 83       	std	Y+6, r25	; 0x06
     f1e:	af 83       	std	Y+7, r26	; 0x07
     f20:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	4a e7       	ldi	r20, 0x7A	; 122
     f28:	53 e4       	ldi	r21, 0x43	; 67
     f2a:	6d 81       	ldd	r22, Y+5	; 0x05
     f2c:	7e 81       	ldd	r23, Y+6	; 0x06
     f2e:	8f 81       	ldd	r24, Y+7	; 0x07
     f30:	98 85       	ldd	r25, Y+8	; 0x08
     f32:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     f36:	dc 01       	movw	r26, r24
     f38:	cb 01       	movw	r24, r22
     f3a:	89 87       	std	Y+9, r24	; 0x09
     f3c:	9a 87       	std	Y+10, r25	; 0x0a
     f3e:	ab 87       	std	Y+11, r26	; 0x0b
     f40:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	40 e8       	ldi	r20, 0x80	; 128
     f48:	5f e3       	ldi	r21, 0x3F	; 63
     f4a:	69 85       	ldd	r22, Y+9	; 0x09
     f4c:	7a 85       	ldd	r23, Y+10	; 0x0a
     f4e:	8b 85       	ldd	r24, Y+11	; 0x0b
     f50:	9c 85       	ldd	r25, Y+12	; 0x0c
     f52:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
     f56:	88 23       	and	r24, r24
     f58:	2c f4       	brge	.+10     	; 0xf64 <twi_lcd_init+0x288>
		__ticks = 1;
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	9e 87       	std	Y+14, r25	; 0x0e
     f60:	8d 87       	std	Y+13, r24	; 0x0d
     f62:	3e c0       	rjmp	.+124    	; 0xfe0 <twi_lcd_init+0x304>
	else if (__tmp > 65535)
     f64:	20 e0       	ldi	r18, 0x00	; 0
     f66:	3f ef       	ldi	r19, 0xFF	; 255
     f68:	4f e7       	ldi	r20, 0x7F	; 127
     f6a:	57 e4       	ldi	r21, 0x47	; 71
     f6c:	69 85       	ldd	r22, Y+9	; 0x09
     f6e:	7a 85       	ldd	r23, Y+10	; 0x0a
     f70:	8b 85       	ldd	r24, Y+11	; 0x0b
     f72:	9c 85       	ldd	r25, Y+12	; 0x0c
     f74:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
     f78:	18 16       	cp	r1, r24
     f7a:	44 f5       	brge	.+80     	; 0xfcc <twi_lcd_init+0x2f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f7c:	20 e0       	ldi	r18, 0x00	; 0
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	40 e2       	ldi	r20, 0x20	; 32
     f82:	51 e4       	ldi	r21, 0x41	; 65
     f84:	6d 81       	ldd	r22, Y+5	; 0x05
     f86:	7e 81       	ldd	r23, Y+6	; 0x06
     f88:	8f 81       	ldd	r24, Y+7	; 0x07
     f8a:	98 85       	ldd	r25, Y+8	; 0x08
     f8c:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
     f90:	dc 01       	movw	r26, r24
     f92:	cb 01       	movw	r24, r22
     f94:	bc 01       	movw	r22, r24
     f96:	cd 01       	movw	r24, r26
     f98:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     f9c:	dc 01       	movw	r26, r24
     f9e:	cb 01       	movw	r24, r22
     fa0:	9e 87       	std	Y+14, r25	; 0x0e
     fa2:	8d 87       	std	Y+13, r24	; 0x0d
		while(__ticks)
     fa4:	8d 85       	ldd	r24, Y+13	; 0x0d
     fa6:	9e 85       	ldd	r25, Y+14	; 0x0e
     fa8:	89 2b       	or	r24, r25
     faa:	21 f1       	breq	.+72     	; 0xff4 <twi_lcd_init+0x318>
     fac:	89 e1       	ldi	r24, 0x19	; 25
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	98 8b       	std	Y+16, r25	; 0x10
     fb2:	8f 87       	std	Y+15, r24	; 0x0f
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     fb4:	8f 85       	ldd	r24, Y+15	; 0x0f
     fb6:	98 89       	ldd	r25, Y+16	; 0x10
     fb8:	01 97       	sbiw	r24, 0x01	; 1
     fba:	f1 f7       	brne	.-4      	; 0xfb8 <twi_lcd_init+0x2dc>
     fbc:	98 8b       	std	Y+16, r25	; 0x10
     fbe:	8f 87       	std	Y+15, r24	; 0x0f
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fc0:	8d 85       	ldd	r24, Y+13	; 0x0d
     fc2:	9e 85       	ldd	r25, Y+14	; 0x0e
     fc4:	01 97       	sbiw	r24, 0x01	; 1
     fc6:	9e 87       	std	Y+14, r25	; 0x0e
     fc8:	8d 87       	std	Y+13, r24	; 0x0d
     fca:	ec cf       	rjmp	.-40     	; 0xfa4 <twi_lcd_init+0x2c8>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fcc:	69 85       	ldd	r22, Y+9	; 0x09
     fce:	7a 85       	ldd	r23, Y+10	; 0x0a
     fd0:	8b 85       	ldd	r24, Y+11	; 0x0b
     fd2:	9c 85       	ldd	r25, Y+12	; 0x0c
     fd4:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
     fd8:	dc 01       	movw	r26, r24
     fda:	cb 01       	movw	r24, r22
     fdc:	9e 87       	std	Y+14, r25	; 0x0e
     fde:	8d 87       	std	Y+13, r24	; 0x0d
     fe0:	8d 85       	ldd	r24, Y+13	; 0x0d
     fe2:	9e 85       	ldd	r25, Y+14	; 0x0e
     fe4:	9a 8b       	std	Y+18, r25	; 0x12
     fe6:	89 8b       	std	Y+17, r24	; 0x11
     fe8:	89 89       	ldd	r24, Y+17	; 0x11
     fea:	9a 89       	ldd	r25, Y+18	; 0x12
     fec:	01 97       	sbiw	r24, 0x01	; 1
     fee:	f1 f7       	brne	.-4      	; 0xfec <twi_lcd_init+0x310>
     ff0:	9a 8b       	std	Y+18, r25	; 0x12
     ff2:	89 8b       	std	Y+17, r24	; 0x11
	_delay_ms(1);				//--- 1s Delay
	twi_lcd_clear();				//--- Clear LCD
     ff4:	0e 94 63 06 	call	0xcc6	; 0xcc6 <twi_lcd_clear>
	twi_lcd_cmd(0x80);				//--- Row 1 Column 1 Address
     ff8:	80 e8       	ldi	r24, 0x80	; 128
     ffa:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
}
     ffe:	00 00       	nop
    1000:	ae 96       	adiw	r28, 0x2e	; 46
    1002:	0f b6       	in	r0, 0x3f	; 63
    1004:	f8 94       	cli
    1006:	de bf       	out	0x3e, r29	; 62
    1008:	0f be       	out	0x3f, r0	; 63
    100a:	cd bf       	out	0x3d, r28	; 61
    100c:	df 91       	pop	r29
    100e:	cf 91       	pop	r28
    1010:	08 95       	ret

00001012 <_Z16convert05To01000d>:

char buffer[10];
char buffer_kc[10];


int convert05To01000(double data){
    1012:	cf 93       	push	r28
    1014:	df 93       	push	r29
    1016:	00 d0       	rcall	.+0      	; 0x1018 <_Z16convert05To01000d+0x6>
    1018:	00 d0       	rcall	.+0      	; 0x101a <_Z16convert05To01000d+0x8>
    101a:	00 d0       	rcall	.+0      	; 0x101c <_Z16convert05To01000d+0xa>
    101c:	cd b7       	in	r28, 0x3d	; 61
    101e:	de b7       	in	r29, 0x3e	; 62
    1020:	6b 83       	std	Y+3, r22	; 0x03
    1022:	7c 83       	std	Y+4, r23	; 0x04
    1024:	8d 83       	std	Y+5, r24	; 0x05
    1026:	9e 83       	std	Y+6, r25	; 0x06
	
	if(data > 5){ return 1000; }
    1028:	20 e0       	ldi	r18, 0x00	; 0
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	40 ea       	ldi	r20, 0xA0	; 160
    102e:	50 e4       	ldi	r21, 0x40	; 64
    1030:	6b 81       	ldd	r22, Y+3	; 0x03
    1032:	7c 81       	ldd	r23, Y+4	; 0x04
    1034:	8d 81       	ldd	r24, Y+5	; 0x05
    1036:	9e 81       	ldd	r25, Y+6	; 0x06
    1038:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
    103c:	18 16       	cp	r1, r24
    103e:	1c f4       	brge	.+6      	; 0x1046 <_Z16convert05To01000d+0x34>
    1040:	88 ee       	ldi	r24, 0xE8	; 232
    1042:	93 e0       	ldi	r25, 0x03	; 3
    1044:	31 c0       	rjmp	.+98     	; 0x10a8 <_Z16convert05To01000d+0x96>
	if(data < 1){ return 0;}
    1046:	20 e0       	ldi	r18, 0x00	; 0
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	40 e8       	ldi	r20, 0x80	; 128
    104c:	5f e3       	ldi	r21, 0x3F	; 63
    104e:	6b 81       	ldd	r22, Y+3	; 0x03
    1050:	7c 81       	ldd	r23, Y+4	; 0x04
    1052:	8d 81       	ldd	r24, Y+5	; 0x05
    1054:	9e 81       	ldd	r25, Y+6	; 0x06
    1056:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
    105a:	88 23       	and	r24, r24
    105c:	1c f4       	brge	.+6      	; 0x1064 <_Z16convert05To01000d+0x52>
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	22 c0       	rjmp	.+68     	; 0x10a8 <_Z16convert05To01000d+0x96>
	int result = 0 ;
    1064:	1a 82       	std	Y+2, r1	; 0x02
    1066:	19 82       	std	Y+1, r1	; 0x01
	result = (int)(data*1000/5);
    1068:	20 e0       	ldi	r18, 0x00	; 0
    106a:	30 e0       	ldi	r19, 0x00	; 0
    106c:	4a e7       	ldi	r20, 0x7A	; 122
    106e:	54 e4       	ldi	r21, 0x44	; 68
    1070:	6b 81       	ldd	r22, Y+3	; 0x03
    1072:	7c 81       	ldd	r23, Y+4	; 0x04
    1074:	8d 81       	ldd	r24, Y+5	; 0x05
    1076:	9e 81       	ldd	r25, Y+6	; 0x06
    1078:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
    107c:	dc 01       	movw	r26, r24
    107e:	cb 01       	movw	r24, r22
    1080:	20 e0       	ldi	r18, 0x00	; 0
    1082:	30 e0       	ldi	r19, 0x00	; 0
    1084:	40 ea       	ldi	r20, 0xA0	; 160
    1086:	50 e4       	ldi	r21, 0x40	; 64
    1088:	bc 01       	movw	r22, r24
    108a:	cd 01       	movw	r24, r26
    108c:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divsf3>
    1090:	dc 01       	movw	r26, r24
    1092:	cb 01       	movw	r24, r22
    1094:	bc 01       	movw	r22, r24
    1096:	cd 01       	movw	r24, r26
    1098:	0e 94 63 13 	call	0x26c6	; 0x26c6 <__fixsfsi>
    109c:	dc 01       	movw	r26, r24
    109e:	cb 01       	movw	r24, r22
    10a0:	9a 83       	std	Y+2, r25	; 0x02
    10a2:	89 83       	std	Y+1, r24	; 0x01
	return result;
    10a4:	89 81       	ldd	r24, Y+1	; 0x01
    10a6:	9a 81       	ldd	r25, Y+2	; 0x02
};
    10a8:	26 96       	adiw	r28, 0x06	; 6
    10aa:	0f b6       	in	r0, 0x3f	; 63
    10ac:	f8 94       	cli
    10ae:	de bf       	out	0x3e, r29	; 62
    10b0:	0f be       	out	0x3f, r0	; 63
    10b2:	cd bf       	out	0x3d, r28	; 61
    10b4:	df 91       	pop	r29
    10b6:	cf 91       	pop	r28
    10b8:	08 95       	ret

000010ba <_Z8chieucaof>:

//set the offset
int32_t offset = 8389246;
//set the scale
double scale = 15797.8;
int chieucao(float n){
    10ba:	cf 93       	push	r28
    10bc:	df 93       	push	r29
    10be:	00 d0       	rcall	.+0      	; 0x10c0 <_Z8chieucaof+0x6>
    10c0:	00 d0       	rcall	.+0      	; 0x10c2 <_Z8chieucaof+0x8>
    10c2:	00 d0       	rcall	.+0      	; 0x10c4 <_Z8chieucaof+0xa>
    10c4:	cd b7       	in	r28, 0x3d	; 61
    10c6:	de b7       	in	r29, 0x3e	; 62
    10c8:	6b 83       	std	Y+3, r22	; 0x03
    10ca:	7c 83       	std	Y+4, r23	; 0x04
    10cc:	8d 83       	std	Y+5, r24	; 0x05
    10ce:	9e 83       	std	Y+6, r25	; 0x06
	int m = (int)(n - 5) ;
    10d0:	20 e0       	ldi	r18, 0x00	; 0
    10d2:	30 e0       	ldi	r19, 0x00	; 0
    10d4:	40 ea       	ldi	r20, 0xA0	; 160
    10d6:	50 e4       	ldi	r21, 0x40	; 64
    10d8:	6b 81       	ldd	r22, Y+3	; 0x03
    10da:	7c 81       	ldd	r23, Y+4	; 0x04
    10dc:	8d 81       	ldd	r24, Y+5	; 0x05
    10de:	9e 81       	ldd	r25, Y+6	; 0x06
    10e0:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__subsf3>
    10e4:	dc 01       	movw	r26, r24
    10e6:	cb 01       	movw	r24, r22
    10e8:	bc 01       	movw	r22, r24
    10ea:	cd 01       	movw	r24, r26
    10ec:	0e 94 63 13 	call	0x26c6	; 0x26c6 <__fixsfsi>
    10f0:	dc 01       	movw	r26, r24
    10f2:	cb 01       	movw	r24, r22
    10f4:	9a 83       	std	Y+2, r25	; 0x02
    10f6:	89 83       	std	Y+1, r24	; 0x01
	if(m<=0){
    10f8:	89 81       	ldd	r24, Y+1	; 0x01
    10fa:	9a 81       	ldd	r25, Y+2	; 0x02
    10fc:	18 16       	cp	r1, r24
    10fe:	19 06       	cpc	r1, r25
    1100:	1c f0       	brlt	.+6      	; 0x1108 <_Z8chieucaof+0x4e>
		return 0;
    1102:	80 e0       	ldi	r24, 0x00	; 0
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	02 c0       	rjmp	.+4      	; 0x110c <_Z8chieucaof+0x52>
	}
	return m;
    1108:	89 81       	ldd	r24, Y+1	; 0x01
    110a:	9a 81       	ldd	r25, Y+2	; 0x02
}
    110c:	26 96       	adiw	r28, 0x06	; 6
    110e:	0f b6       	in	r0, 0x3f	; 63
    1110:	f8 94       	cli
    1112:	de bf       	out	0x3e, r29	; 62
    1114:	0f be       	out	0x3f, r0	; 63
    1116:	cd bf       	out	0x3d, r28	; 61
    1118:	df 91       	pop	r29
    111a:	cf 91       	pop	r28
    111c:	08 95       	ret

0000111e <main>:
int main(void)
{	
    111e:	0f 93       	push	r16
    1120:	1f 93       	push	r17
    1122:	cf 93       	push	r28
    1124:	df 93       	push	r29
    1126:	cd b7       	in	r28, 0x3d	; 61
    1128:	de b7       	in	r29, 0x3e	; 62
    112a:	68 97       	sbiw	r28, 0x18	; 24
    112c:	0f b6       	in	r0, 0x3f	; 63
    112e:	f8 94       	cli
    1130:	de bf       	out	0x3e, r29	; 62
    1132:	0f be       	out	0x3f, r0	; 63
    1134:	cd bf       	out	0x3d, r28	; 61
	hx711_init(gain, scale, offset);
    1136:	20 91 61 00 	lds	r18, 0x0061	; 0x800061 <offset>
    113a:	30 91 62 00 	lds	r19, 0x0062	; 0x800062 <offset+0x1>
    113e:	40 91 63 00 	lds	r20, 0x0063	; 0x800063 <offset+0x2>
    1142:	50 91 64 00 	lds	r21, 0x0064	; 0x800064 <offset+0x3>
    1146:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <scale>
    114a:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <scale+0x1>
    114e:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <scale+0x2>
    1152:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <scale+0x3>
    1156:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__data_start>
    115a:	e6 2f       	mov	r30, r22
    115c:	89 01       	movw	r16, r18
    115e:	9a 01       	movw	r18, r20
    1160:	ac 01       	movw	r20, r24
    1162:	bd 01       	movw	r22, r26
    1164:	8e 2f       	mov	r24, r30
    1166:	0e 94 2e 12 	call	0x245c	; 0x245c <hx711_init>
	sr04_init();
    116a:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <sr04_init>
	twi_init();
    116e:	0e 94 e8 0b 	call	0x17d0	; 0x17d0 <twi_init>
	twi_lcd_init();
    1172:	0e 94 6e 06 	call	0xcdc	; 0xcdc <twi_lcd_init>
	twi_lcd_cmd(0x0C);
    1176:	8c e0       	ldi	r24, 0x0C	; 12
    1178:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
	
	while(1){
		sr04_handle();
    117c:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <sr04_handle>
		twi_lcd_cmd(0x01);
    1180:	81 e0       	ldi	r24, 0x01	; 1
    1182:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
		twi_lcd_cmd(0x80);
    1186:	80 e8       	ldi	r24, 0x80	; 128
    1188:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
		
		sprintf(buffer_kc,"%d cm",chieucao(kc));
    118c:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <kc>
    1190:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <kc+0x1>
    1194:	a0 91 f0 00 	lds	r26, 0x00F0	; 0x8000f0 <kc+0x2>
    1198:	b0 91 f1 00 	lds	r27, 0x00F1	; 0x8000f1 <kc+0x3>
    119c:	bc 01       	movw	r22, r24
    119e:	cd 01       	movw	r24, r26
    11a0:	0e 94 5d 08 	call	0x10ba	; 0x10ba <_Z8chieucaof>
    11a4:	29 2f       	mov	r18, r25
    11a6:	2f 93       	push	r18
    11a8:	8f 93       	push	r24
    11aa:	89 e6       	ldi	r24, 0x69	; 105
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	89 2f       	mov	r24, r25
    11b0:	8f 93       	push	r24
    11b2:	89 e6       	ldi	r24, 0x69	; 105
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	8f 93       	push	r24
    11b8:	87 ed       	ldi	r24, 0xD7	; 215
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	89 2f       	mov	r24, r25
    11be:	8f 93       	push	r24
    11c0:	87 ed       	ldi	r24, 0xD7	; 215
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	8f 93       	push	r24
    11c6:	0e 94 bd 14 	call	0x297a	; 0x297a <sprintf>
    11ca:	0f 90       	pop	r0
    11cc:	0f 90       	pop	r0
    11ce:	0f 90       	pop	r0
    11d0:	0f 90       	pop	r0
    11d2:	0f 90       	pop	r0
    11d4:	0f 90       	pop	r0
		twi_lcd_msg(buffer_kc);
    11d6:	87 ed       	ldi	r24, 0xD7	; 215
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	0e 94 44 06 	call	0xc88	; 0xc88 <twi_lcd_msg>
		int32_t read = hx711_read();
    11de:	0e 94 cf 10 	call	0x219e	; 0x219e <hx711_read>
    11e2:	dc 01       	movw	r26, r24
    11e4:	cb 01       	movw	r24, r22
    11e6:	89 83       	std	Y+1, r24	; 0x01
    11e8:	9a 83       	std	Y+2, r25	; 0x02
    11ea:	ab 83       	std	Y+3, r26	; 0x03
    11ec:	bc 83       	std	Y+4, r27	; 0x04
	    double weight = hx711_getweight()*(-1) -24;
    11ee:	0e 94 9a 11 	call	0x2334	; 0x2334 <hx711_getweight>
    11f2:	dc 01       	movw	r26, r24
    11f4:	cb 01       	movw	r24, r22
    11f6:	b0 58       	subi	r27, 0x80	; 128
    11f8:	20 e0       	ldi	r18, 0x00	; 0
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	40 ec       	ldi	r20, 0xC0	; 192
    11fe:	51 e4       	ldi	r21, 0x41	; 65
    1200:	bc 01       	movw	r22, r24
    1202:	cd 01       	movw	r24, r26
    1204:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__subsf3>
    1208:	dc 01       	movw	r26, r24
    120a:	cb 01       	movw	r24, r22
    120c:	8d 83       	std	Y+5, r24	; 0x05
    120e:	9e 83       	std	Y+6, r25	; 0x06
    1210:	af 83       	std	Y+7, r26	; 0x07
    1212:	b8 87       	std	Y+8, r27	; 0x08
		int data = convert05To01000(weight);
    1214:	8d 81       	ldd	r24, Y+5	; 0x05
    1216:	9e 81       	ldd	r25, Y+6	; 0x06
    1218:	af 81       	ldd	r26, Y+7	; 0x07
    121a:	b8 85       	ldd	r27, Y+8	; 0x08
    121c:	bc 01       	movw	r22, r24
    121e:	cd 01       	movw	r24, r26
    1220:	0e 94 09 08 	call	0x1012	; 0x1012 <_Z16convert05To01000d>
    1224:	9a 87       	std	Y+10, r25	; 0x0a
    1226:	89 87       	std	Y+9, r24	; 0x09
		twi_lcd_cmd(0xC0);
    1228:	80 ec       	ldi	r24, 0xC0	; 192
    122a:	0e 94 13 06 	call	0xc26	; 0xc26 <twi_lcd_cmd>
		sprintf(buffer,"%d gam",data);
    122e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1230:	8f 93       	push	r24
    1232:	89 85       	ldd	r24, Y+9	; 0x09
    1234:	8f 93       	push	r24
    1236:	8f e6       	ldi	r24, 0x6F	; 111
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	89 2f       	mov	r24, r25
    123c:	8f 93       	push	r24
    123e:	8f e6       	ldi	r24, 0x6F	; 111
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	8f 93       	push	r24
    1244:	8d ec       	ldi	r24, 0xCD	; 205
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	89 2f       	mov	r24, r25
    124a:	8f 93       	push	r24
    124c:	8d ec       	ldi	r24, 0xCD	; 205
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	8f 93       	push	r24
    1252:	0e 94 bd 14 	call	0x297a	; 0x297a <sprintf>
    1256:	0f 90       	pop	r0
    1258:	0f 90       	pop	r0
    125a:	0f 90       	pop	r0
    125c:	0f 90       	pop	r0
    125e:	0f 90       	pop	r0
    1260:	0f 90       	pop	r0
		twi_lcd_msg(buffer);
    1262:	8d ec       	ldi	r24, 0xCD	; 205
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	0e 94 44 06 	call	0xc88	; 0xc88 <twi_lcd_msg>
    126a:	80 e0       	ldi	r24, 0x00	; 0
    126c:	90 e8       	ldi	r25, 0x80	; 128
    126e:	ab e3       	ldi	r26, 0x3B	; 59
    1270:	b5 e4       	ldi	r27, 0x45	; 69
    1272:	8b 87       	std	Y+11, r24	; 0x0b
    1274:	9c 87       	std	Y+12, r25	; 0x0c
    1276:	ad 87       	std	Y+13, r26	; 0x0d
    1278:	be 87       	std	Y+14, r27	; 0x0e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    127a:	20 e0       	ldi	r18, 0x00	; 0
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	4a e7       	ldi	r20, 0x7A	; 122
    1280:	53 e4       	ldi	r21, 0x43	; 67
    1282:	6b 85       	ldd	r22, Y+11	; 0x0b
    1284:	7c 85       	ldd	r23, Y+12	; 0x0c
    1286:	8d 85       	ldd	r24, Y+13	; 0x0d
    1288:	9e 85       	ldd	r25, Y+14	; 0x0e
    128a:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
    128e:	dc 01       	movw	r26, r24
    1290:	cb 01       	movw	r24, r22
    1292:	8f 87       	std	Y+15, r24	; 0x0f
    1294:	98 8b       	std	Y+16, r25	; 0x10
    1296:	a9 8b       	std	Y+17, r26	; 0x11
    1298:	ba 8b       	std	Y+18, r27	; 0x12
	if (__tmp < 1.0)
    129a:	20 e0       	ldi	r18, 0x00	; 0
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	40 e8       	ldi	r20, 0x80	; 128
    12a0:	5f e3       	ldi	r21, 0x3F	; 63
    12a2:	6f 85       	ldd	r22, Y+15	; 0x0f
    12a4:	78 89       	ldd	r23, Y+16	; 0x10
    12a6:	89 89       	ldd	r24, Y+17	; 0x11
    12a8:	9a 89       	ldd	r25, Y+18	; 0x12
    12aa:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
    12ae:	88 23       	and	r24, r24
    12b0:	2c f4       	brge	.+10     	; 0x12bc <main+0x19e>
		__ticks = 1;
    12b2:	81 e0       	ldi	r24, 0x01	; 1
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	9c 8b       	std	Y+20, r25	; 0x14
    12b8:	8b 8b       	std	Y+19, r24	; 0x13
    12ba:	3f c0       	rjmp	.+126    	; 0x133a <main+0x21c>
	else if (__tmp > 65535)
    12bc:	20 e0       	ldi	r18, 0x00	; 0
    12be:	3f ef       	ldi	r19, 0xFF	; 255
    12c0:	4f e7       	ldi	r20, 0x7F	; 127
    12c2:	57 e4       	ldi	r21, 0x47	; 71
    12c4:	6f 85       	ldd	r22, Y+15	; 0x0f
    12c6:	78 89       	ldd	r23, Y+16	; 0x10
    12c8:	89 89       	ldd	r24, Y+17	; 0x11
    12ca:	9a 89       	ldd	r25, Y+18	; 0x12
    12cc:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
    12d0:	18 16       	cp	r1, r24
    12d2:	4c f5       	brge	.+82     	; 0x1326 <main+0x208>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12d4:	20 e0       	ldi	r18, 0x00	; 0
    12d6:	30 e0       	ldi	r19, 0x00	; 0
    12d8:	40 e2       	ldi	r20, 0x20	; 32
    12da:	51 e4       	ldi	r21, 0x41	; 65
    12dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    12de:	7c 85       	ldd	r23, Y+12	; 0x0c
    12e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    12e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    12e4:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
    12e8:	dc 01       	movw	r26, r24
    12ea:	cb 01       	movw	r24, r22
    12ec:	bc 01       	movw	r22, r24
    12ee:	cd 01       	movw	r24, r26
    12f0:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
    12f4:	dc 01       	movw	r26, r24
    12f6:	cb 01       	movw	r24, r22
    12f8:	9c 8b       	std	Y+20, r25	; 0x14
    12fa:	8b 8b       	std	Y+19, r24	; 0x13
		while(__ticks)
    12fc:	8b 89       	ldd	r24, Y+19	; 0x13
    12fe:	9c 89       	ldd	r25, Y+20	; 0x14
    1300:	89 2b       	or	r24, r25
    1302:	09 f4       	brne	.+2      	; 0x1306 <main+0x1e8>
    1304:	3b cf       	rjmp	.-394    	; 0x117c <main+0x5e>
    1306:	89 e1       	ldi	r24, 0x19	; 25
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	9e 8b       	std	Y+22, r25	; 0x16
    130c:	8d 8b       	std	Y+21, r24	; 0x15
    130e:	8d 89       	ldd	r24, Y+21	; 0x15
    1310:	9e 89       	ldd	r25, Y+22	; 0x16
    1312:	01 97       	sbiw	r24, 0x01	; 1
    1314:	f1 f7       	brne	.-4      	; 0x1312 <main+0x1f4>
    1316:	9e 8b       	std	Y+22, r25	; 0x16
    1318:	8d 8b       	std	Y+21, r24	; 0x15
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    131a:	8b 89       	ldd	r24, Y+19	; 0x13
    131c:	9c 89       	ldd	r25, Y+20	; 0x14
    131e:	01 97       	sbiw	r24, 0x01	; 1
    1320:	9c 8b       	std	Y+20, r25	; 0x14
    1322:	8b 8b       	std	Y+19, r24	; 0x13
    1324:	eb cf       	rjmp	.-42     	; 0x12fc <main+0x1de>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1326:	6f 85       	ldd	r22, Y+15	; 0x0f
    1328:	78 89       	ldd	r23, Y+16	; 0x10
    132a:	89 89       	ldd	r24, Y+17	; 0x11
    132c:	9a 89       	ldd	r25, Y+18	; 0x12
    132e:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
    1332:	dc 01       	movw	r26, r24
    1334:	cb 01       	movw	r24, r22
    1336:	9c 8b       	std	Y+20, r25	; 0x14
    1338:	8b 8b       	std	Y+19, r24	; 0x13
    133a:	8b 89       	ldd	r24, Y+19	; 0x13
    133c:	9c 89       	ldd	r25, Y+20	; 0x14
    133e:	98 8f       	std	Y+24, r25	; 0x18
    1340:	8f 8b       	std	Y+23, r24	; 0x17
    1342:	8f 89       	ldd	r24, Y+23	; 0x17
    1344:	98 8d       	ldd	r25, Y+24	; 0x18
    1346:	01 97       	sbiw	r24, 0x01	; 1
    1348:	f1 f7       	brne	.-4      	; 0x1346 <main+0x228>
    134a:	98 8f       	std	Y+24, r25	; 0x18
    134c:	8f 8b       	std	Y+23, r24	; 0x17
	sr04_init();
	twi_init();
	twi_lcd_init();
	twi_lcd_cmd(0x0C);
	
	while(1){
    134e:	16 cf       	rjmp	.-468    	; 0x117c <main+0x5e>

00001350 <dvn_gpio_output>:
    1350:	cf 93       	push	r28
    1352:	df 93       	push	r29
    1354:	00 d0       	rcall	.+0      	; 0x1356 <dvn_gpio_output+0x6>
    1356:	cd b7       	in	r28, 0x3d	; 61
    1358:	de b7       	in	r29, 0x3e	; 62
    135a:	89 83       	std	Y+1, r24	; 0x01
    135c:	6a 83       	std	Y+2, r22	; 0x02
    135e:	89 81       	ldd	r24, Y+1	; 0x01
    1360:	88 2f       	mov	r24, r24
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	81 30       	cpi	r24, 0x01	; 1
    1366:	91 05       	cpc	r25, r1
    1368:	11 f1       	breq	.+68     	; 0x13ae <dvn_gpio_output+0x5e>
    136a:	82 30       	cpi	r24, 0x02	; 2
    136c:	91 05       	cpc	r25, r1
    136e:	1c f4       	brge	.+6      	; 0x1376 <dvn_gpio_output+0x26>
    1370:	89 2b       	or	r24, r25
    1372:	41 f0       	breq	.+16     	; 0x1384 <dvn_gpio_output+0x34>
    1374:	5b c0       	rjmp	.+182    	; 0x142c <dvn_gpio_output+0xdc>
    1376:	82 30       	cpi	r24, 0x02	; 2
    1378:	91 05       	cpc	r25, r1
    137a:	71 f1       	breq	.+92     	; 0x13d8 <dvn_gpio_output+0x88>
    137c:	03 97       	sbiw	r24, 0x03	; 3
    137e:	09 f4       	brne	.+2      	; 0x1382 <dvn_gpio_output+0x32>
    1380:	40 c0       	rjmp	.+128    	; 0x1402 <dvn_gpio_output+0xb2>
    1382:	54 c0       	rjmp	.+168    	; 0x142c <dvn_gpio_output+0xdc>
    1384:	8a e3       	ldi	r24, 0x3A	; 58
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	2a e3       	ldi	r18, 0x3A	; 58
    138a:	30 e0       	ldi	r19, 0x00	; 0
    138c:	f9 01       	movw	r30, r18
    138e:	20 81       	ld	r18, Z
    1390:	62 2f       	mov	r22, r18
    1392:	2a 81       	ldd	r18, Y+2	; 0x02
    1394:	42 2f       	mov	r20, r18
    1396:	50 e0       	ldi	r21, 0x00	; 0
    1398:	21 e0       	ldi	r18, 0x01	; 1
    139a:	30 e0       	ldi	r19, 0x00	; 0
    139c:	02 c0       	rjmp	.+4      	; 0x13a2 <dvn_gpio_output+0x52>
    139e:	22 0f       	add	r18, r18
    13a0:	33 1f       	adc	r19, r19
    13a2:	4a 95       	dec	r20
    13a4:	e2 f7       	brpl	.-8      	; 0x139e <dvn_gpio_output+0x4e>
    13a6:	26 2b       	or	r18, r22
    13a8:	fc 01       	movw	r30, r24
    13aa:	20 83       	st	Z, r18
    13ac:	3f c0       	rjmp	.+126    	; 0x142c <dvn_gpio_output+0xdc>
    13ae:	87 e3       	ldi	r24, 0x37	; 55
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	27 e3       	ldi	r18, 0x37	; 55
    13b4:	30 e0       	ldi	r19, 0x00	; 0
    13b6:	f9 01       	movw	r30, r18
    13b8:	20 81       	ld	r18, Z
    13ba:	62 2f       	mov	r22, r18
    13bc:	2a 81       	ldd	r18, Y+2	; 0x02
    13be:	42 2f       	mov	r20, r18
    13c0:	50 e0       	ldi	r21, 0x00	; 0
    13c2:	21 e0       	ldi	r18, 0x01	; 1
    13c4:	30 e0       	ldi	r19, 0x00	; 0
    13c6:	02 c0       	rjmp	.+4      	; 0x13cc <dvn_gpio_output+0x7c>
    13c8:	22 0f       	add	r18, r18
    13ca:	33 1f       	adc	r19, r19
    13cc:	4a 95       	dec	r20
    13ce:	e2 f7       	brpl	.-8      	; 0x13c8 <dvn_gpio_output+0x78>
    13d0:	26 2b       	or	r18, r22
    13d2:	fc 01       	movw	r30, r24
    13d4:	20 83       	st	Z, r18
    13d6:	2a c0       	rjmp	.+84     	; 0x142c <dvn_gpio_output+0xdc>
    13d8:	84 e3       	ldi	r24, 0x34	; 52
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	24 e3       	ldi	r18, 0x34	; 52
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	f9 01       	movw	r30, r18
    13e2:	20 81       	ld	r18, Z
    13e4:	62 2f       	mov	r22, r18
    13e6:	2a 81       	ldd	r18, Y+2	; 0x02
    13e8:	42 2f       	mov	r20, r18
    13ea:	50 e0       	ldi	r21, 0x00	; 0
    13ec:	21 e0       	ldi	r18, 0x01	; 1
    13ee:	30 e0       	ldi	r19, 0x00	; 0
    13f0:	02 c0       	rjmp	.+4      	; 0x13f6 <dvn_gpio_output+0xa6>
    13f2:	22 0f       	add	r18, r18
    13f4:	33 1f       	adc	r19, r19
    13f6:	4a 95       	dec	r20
    13f8:	e2 f7       	brpl	.-8      	; 0x13f2 <dvn_gpio_output+0xa2>
    13fa:	26 2b       	or	r18, r22
    13fc:	fc 01       	movw	r30, r24
    13fe:	20 83       	st	Z, r18
    1400:	15 c0       	rjmp	.+42     	; 0x142c <dvn_gpio_output+0xdc>
    1402:	81 e3       	ldi	r24, 0x31	; 49
    1404:	90 e0       	ldi	r25, 0x00	; 0
    1406:	21 e3       	ldi	r18, 0x31	; 49
    1408:	30 e0       	ldi	r19, 0x00	; 0
    140a:	f9 01       	movw	r30, r18
    140c:	20 81       	ld	r18, Z
    140e:	62 2f       	mov	r22, r18
    1410:	2a 81       	ldd	r18, Y+2	; 0x02
    1412:	42 2f       	mov	r20, r18
    1414:	50 e0       	ldi	r21, 0x00	; 0
    1416:	21 e0       	ldi	r18, 0x01	; 1
    1418:	30 e0       	ldi	r19, 0x00	; 0
    141a:	02 c0       	rjmp	.+4      	; 0x1420 <dvn_gpio_output+0xd0>
    141c:	22 0f       	add	r18, r18
    141e:	33 1f       	adc	r19, r19
    1420:	4a 95       	dec	r20
    1422:	e2 f7       	brpl	.-8      	; 0x141c <dvn_gpio_output+0xcc>
    1424:	26 2b       	or	r18, r22
    1426:	fc 01       	movw	r30, r24
    1428:	20 83       	st	Z, r18
    142a:	00 00       	nop
    142c:	00 00       	nop
    142e:	0f 90       	pop	r0
    1430:	0f 90       	pop	r0
    1432:	df 91       	pop	r29
    1434:	cf 91       	pop	r28
    1436:	08 95       	ret

00001438 <dvn_gpio_input>:
    1438:	cf 93       	push	r28
    143a:	df 93       	push	r29
    143c:	00 d0       	rcall	.+0      	; 0x143e <dvn_gpio_input+0x6>
    143e:	cd b7       	in	r28, 0x3d	; 61
    1440:	de b7       	in	r29, 0x3e	; 62
    1442:	89 83       	std	Y+1, r24	; 0x01
    1444:	6a 83       	std	Y+2, r22	; 0x02
    1446:	89 81       	ldd	r24, Y+1	; 0x01
    1448:	88 2f       	mov	r24, r24
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	81 30       	cpi	r24, 0x01	; 1
    144e:	91 05       	cpc	r25, r1
    1450:	19 f1       	breq	.+70     	; 0x1498 <dvn_gpio_input+0x60>
    1452:	82 30       	cpi	r24, 0x02	; 2
    1454:	91 05       	cpc	r25, r1
    1456:	1c f4       	brge	.+6      	; 0x145e <dvn_gpio_input+0x26>
    1458:	89 2b       	or	r24, r25
    145a:	41 f0       	breq	.+16     	; 0x146c <dvn_gpio_input+0x34>
    145c:	5f c0       	rjmp	.+190    	; 0x151c <dvn_gpio_input+0xe4>
    145e:	82 30       	cpi	r24, 0x02	; 2
    1460:	91 05       	cpc	r25, r1
    1462:	81 f1       	breq	.+96     	; 0x14c4 <dvn_gpio_input+0x8c>
    1464:	03 97       	sbiw	r24, 0x03	; 3
    1466:	09 f4       	brne	.+2      	; 0x146a <dvn_gpio_input+0x32>
    1468:	43 c0       	rjmp	.+134    	; 0x14f0 <dvn_gpio_input+0xb8>
    146a:	58 c0       	rjmp	.+176    	; 0x151c <dvn_gpio_input+0xe4>
    146c:	8a e3       	ldi	r24, 0x3A	; 58
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	2a e3       	ldi	r18, 0x3A	; 58
    1472:	30 e0       	ldi	r19, 0x00	; 0
    1474:	f9 01       	movw	r30, r18
    1476:	20 81       	ld	r18, Z
    1478:	62 2f       	mov	r22, r18
    147a:	2a 81       	ldd	r18, Y+2	; 0x02
    147c:	42 2f       	mov	r20, r18
    147e:	50 e0       	ldi	r21, 0x00	; 0
    1480:	21 e0       	ldi	r18, 0x01	; 1
    1482:	30 e0       	ldi	r19, 0x00	; 0
    1484:	02 c0       	rjmp	.+4      	; 0x148a <dvn_gpio_input+0x52>
    1486:	22 0f       	add	r18, r18
    1488:	33 1f       	adc	r19, r19
    148a:	4a 95       	dec	r20
    148c:	e2 f7       	brpl	.-8      	; 0x1486 <dvn_gpio_input+0x4e>
    148e:	20 95       	com	r18
    1490:	26 23       	and	r18, r22
    1492:	fc 01       	movw	r30, r24
    1494:	20 83       	st	Z, r18
    1496:	42 c0       	rjmp	.+132    	; 0x151c <dvn_gpio_input+0xe4>
    1498:	87 e3       	ldi	r24, 0x37	; 55
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	27 e3       	ldi	r18, 0x37	; 55
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	f9 01       	movw	r30, r18
    14a2:	20 81       	ld	r18, Z
    14a4:	62 2f       	mov	r22, r18
    14a6:	2a 81       	ldd	r18, Y+2	; 0x02
    14a8:	42 2f       	mov	r20, r18
    14aa:	50 e0       	ldi	r21, 0x00	; 0
    14ac:	21 e0       	ldi	r18, 0x01	; 1
    14ae:	30 e0       	ldi	r19, 0x00	; 0
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <dvn_gpio_input+0x7e>
    14b2:	22 0f       	add	r18, r18
    14b4:	33 1f       	adc	r19, r19
    14b6:	4a 95       	dec	r20
    14b8:	e2 f7       	brpl	.-8      	; 0x14b2 <dvn_gpio_input+0x7a>
    14ba:	20 95       	com	r18
    14bc:	26 23       	and	r18, r22
    14be:	fc 01       	movw	r30, r24
    14c0:	20 83       	st	Z, r18
    14c2:	2c c0       	rjmp	.+88     	; 0x151c <dvn_gpio_input+0xe4>
    14c4:	84 e3       	ldi	r24, 0x34	; 52
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	24 e3       	ldi	r18, 0x34	; 52
    14ca:	30 e0       	ldi	r19, 0x00	; 0
    14cc:	f9 01       	movw	r30, r18
    14ce:	20 81       	ld	r18, Z
    14d0:	62 2f       	mov	r22, r18
    14d2:	2a 81       	ldd	r18, Y+2	; 0x02
    14d4:	42 2f       	mov	r20, r18
    14d6:	50 e0       	ldi	r21, 0x00	; 0
    14d8:	21 e0       	ldi	r18, 0x01	; 1
    14da:	30 e0       	ldi	r19, 0x00	; 0
    14dc:	02 c0       	rjmp	.+4      	; 0x14e2 <dvn_gpio_input+0xaa>
    14de:	22 0f       	add	r18, r18
    14e0:	33 1f       	adc	r19, r19
    14e2:	4a 95       	dec	r20
    14e4:	e2 f7       	brpl	.-8      	; 0x14de <dvn_gpio_input+0xa6>
    14e6:	20 95       	com	r18
    14e8:	26 23       	and	r18, r22
    14ea:	fc 01       	movw	r30, r24
    14ec:	20 83       	st	Z, r18
    14ee:	16 c0       	rjmp	.+44     	; 0x151c <dvn_gpio_input+0xe4>
    14f0:	81 e3       	ldi	r24, 0x31	; 49
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	21 e3       	ldi	r18, 0x31	; 49
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	f9 01       	movw	r30, r18
    14fa:	20 81       	ld	r18, Z
    14fc:	62 2f       	mov	r22, r18
    14fe:	2a 81       	ldd	r18, Y+2	; 0x02
    1500:	42 2f       	mov	r20, r18
    1502:	50 e0       	ldi	r21, 0x00	; 0
    1504:	21 e0       	ldi	r18, 0x01	; 1
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	02 c0       	rjmp	.+4      	; 0x150e <dvn_gpio_input+0xd6>
    150a:	22 0f       	add	r18, r18
    150c:	33 1f       	adc	r19, r19
    150e:	4a 95       	dec	r20
    1510:	e2 f7       	brpl	.-8      	; 0x150a <dvn_gpio_input+0xd2>
    1512:	20 95       	com	r18
    1514:	26 23       	and	r18, r22
    1516:	fc 01       	movw	r30, r24
    1518:	20 83       	st	Z, r18
    151a:	00 00       	nop
    151c:	00 00       	nop
    151e:	0f 90       	pop	r0
    1520:	0f 90       	pop	r0
    1522:	df 91       	pop	r29
    1524:	cf 91       	pop	r28
    1526:	08 95       	ret

00001528 <dvn_gpio_write_pin>:
    1528:	cf 93       	push	r28
    152a:	df 93       	push	r29
    152c:	00 d0       	rcall	.+0      	; 0x152e <dvn_gpio_write_pin+0x6>
    152e:	1f 92       	push	r1
    1530:	cd b7       	in	r28, 0x3d	; 61
    1532:	de b7       	in	r29, 0x3e	; 62
    1534:	89 83       	std	Y+1, r24	; 0x01
    1536:	6a 83       	std	Y+2, r22	; 0x02
    1538:	4b 83       	std	Y+3, r20	; 0x03
    153a:	89 81       	ldd	r24, Y+1	; 0x01
    153c:	88 2f       	mov	r24, r24
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	81 30       	cpi	r24, 0x01	; 1
    1542:	91 05       	cpc	r25, r1
    1544:	e1 f1       	breq	.+120    	; 0x15be <dvn_gpio_write_pin+0x96>
    1546:	82 30       	cpi	r24, 0x02	; 2
    1548:	91 05       	cpc	r25, r1
    154a:	1c f4       	brge	.+6      	; 0x1552 <dvn_gpio_write_pin+0x2a>
    154c:	89 2b       	or	r24, r25
    154e:	49 f0       	breq	.+18     	; 0x1562 <dvn_gpio_write_pin+0x3a>
    1550:	c0 c0       	rjmp	.+384    	; 0x16d2 <dvn_gpio_write_pin+0x1aa>
    1552:	82 30       	cpi	r24, 0x02	; 2
    1554:	91 05       	cpc	r25, r1
    1556:	09 f4       	brne	.+2      	; 0x155a <dvn_gpio_write_pin+0x32>
    1558:	60 c0       	rjmp	.+192    	; 0x161a <dvn_gpio_write_pin+0xf2>
    155a:	03 97       	sbiw	r24, 0x03	; 3
    155c:	09 f4       	brne	.+2      	; 0x1560 <dvn_gpio_write_pin+0x38>
    155e:	8b c0       	rjmp	.+278    	; 0x1676 <dvn_gpio_write_pin+0x14e>
    1560:	b8 c0       	rjmp	.+368    	; 0x16d2 <dvn_gpio_write_pin+0x1aa>
    1562:	8b 81       	ldd	r24, Y+3	; 0x03
    1564:	88 23       	and	r24, r24
    1566:	b1 f4       	brne	.+44     	; 0x1594 <dvn_gpio_write_pin+0x6c>
    1568:	8b e3       	ldi	r24, 0x3B	; 59
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	2b e3       	ldi	r18, 0x3B	; 59
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	f9 01       	movw	r30, r18
    1572:	20 81       	ld	r18, Z
    1574:	62 2f       	mov	r22, r18
    1576:	2a 81       	ldd	r18, Y+2	; 0x02
    1578:	42 2f       	mov	r20, r18
    157a:	50 e0       	ldi	r21, 0x00	; 0
    157c:	21 e0       	ldi	r18, 0x01	; 1
    157e:	30 e0       	ldi	r19, 0x00	; 0
    1580:	02 c0       	rjmp	.+4      	; 0x1586 <dvn_gpio_write_pin+0x5e>
    1582:	22 0f       	add	r18, r18
    1584:	33 1f       	adc	r19, r19
    1586:	4a 95       	dec	r20
    1588:	e2 f7       	brpl	.-8      	; 0x1582 <dvn_gpio_write_pin+0x5a>
    158a:	20 95       	com	r18
    158c:	26 23       	and	r18, r22
    158e:	fc 01       	movw	r30, r24
    1590:	20 83       	st	Z, r18
    1592:	9f c0       	rjmp	.+318    	; 0x16d2 <dvn_gpio_write_pin+0x1aa>
    1594:	8b e3       	ldi	r24, 0x3B	; 59
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	2b e3       	ldi	r18, 0x3B	; 59
    159a:	30 e0       	ldi	r19, 0x00	; 0
    159c:	f9 01       	movw	r30, r18
    159e:	20 81       	ld	r18, Z
    15a0:	62 2f       	mov	r22, r18
    15a2:	2a 81       	ldd	r18, Y+2	; 0x02
    15a4:	42 2f       	mov	r20, r18
    15a6:	50 e0       	ldi	r21, 0x00	; 0
    15a8:	21 e0       	ldi	r18, 0x01	; 1
    15aa:	30 e0       	ldi	r19, 0x00	; 0
    15ac:	02 c0       	rjmp	.+4      	; 0x15b2 <dvn_gpio_write_pin+0x8a>
    15ae:	22 0f       	add	r18, r18
    15b0:	33 1f       	adc	r19, r19
    15b2:	4a 95       	dec	r20
    15b4:	e2 f7       	brpl	.-8      	; 0x15ae <dvn_gpio_write_pin+0x86>
    15b6:	26 2b       	or	r18, r22
    15b8:	fc 01       	movw	r30, r24
    15ba:	20 83       	st	Z, r18
    15bc:	8a c0       	rjmp	.+276    	; 0x16d2 <dvn_gpio_write_pin+0x1aa>
    15be:	8b 81       	ldd	r24, Y+3	; 0x03
    15c0:	88 23       	and	r24, r24
    15c2:	b1 f4       	brne	.+44     	; 0x15f0 <dvn_gpio_write_pin+0xc8>
    15c4:	88 e3       	ldi	r24, 0x38	; 56
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	28 e3       	ldi	r18, 0x38	; 56
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	f9 01       	movw	r30, r18
    15ce:	20 81       	ld	r18, Z
    15d0:	62 2f       	mov	r22, r18
    15d2:	2a 81       	ldd	r18, Y+2	; 0x02
    15d4:	42 2f       	mov	r20, r18
    15d6:	50 e0       	ldi	r21, 0x00	; 0
    15d8:	21 e0       	ldi	r18, 0x01	; 1
    15da:	30 e0       	ldi	r19, 0x00	; 0
    15dc:	02 c0       	rjmp	.+4      	; 0x15e2 <dvn_gpio_write_pin+0xba>
    15de:	22 0f       	add	r18, r18
    15e0:	33 1f       	adc	r19, r19
    15e2:	4a 95       	dec	r20
    15e4:	e2 f7       	brpl	.-8      	; 0x15de <dvn_gpio_write_pin+0xb6>
    15e6:	20 95       	com	r18
    15e8:	26 23       	and	r18, r22
    15ea:	fc 01       	movw	r30, r24
    15ec:	20 83       	st	Z, r18
    15ee:	71 c0       	rjmp	.+226    	; 0x16d2 <dvn_gpio_write_pin+0x1aa>
    15f0:	88 e3       	ldi	r24, 0x38	; 56
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	28 e3       	ldi	r18, 0x38	; 56
    15f6:	30 e0       	ldi	r19, 0x00	; 0
    15f8:	f9 01       	movw	r30, r18
    15fa:	20 81       	ld	r18, Z
    15fc:	62 2f       	mov	r22, r18
    15fe:	2a 81       	ldd	r18, Y+2	; 0x02
    1600:	42 2f       	mov	r20, r18
    1602:	50 e0       	ldi	r21, 0x00	; 0
    1604:	21 e0       	ldi	r18, 0x01	; 1
    1606:	30 e0       	ldi	r19, 0x00	; 0
    1608:	02 c0       	rjmp	.+4      	; 0x160e <dvn_gpio_write_pin+0xe6>
    160a:	22 0f       	add	r18, r18
    160c:	33 1f       	adc	r19, r19
    160e:	4a 95       	dec	r20
    1610:	e2 f7       	brpl	.-8      	; 0x160a <dvn_gpio_write_pin+0xe2>
    1612:	26 2b       	or	r18, r22
    1614:	fc 01       	movw	r30, r24
    1616:	20 83       	st	Z, r18
    1618:	5c c0       	rjmp	.+184    	; 0x16d2 <dvn_gpio_write_pin+0x1aa>
    161a:	8b 81       	ldd	r24, Y+3	; 0x03
    161c:	88 23       	and	r24, r24
    161e:	b1 f4       	brne	.+44     	; 0x164c <dvn_gpio_write_pin+0x124>
    1620:	85 e3       	ldi	r24, 0x35	; 53
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	25 e3       	ldi	r18, 0x35	; 53
    1626:	30 e0       	ldi	r19, 0x00	; 0
    1628:	f9 01       	movw	r30, r18
    162a:	20 81       	ld	r18, Z
    162c:	62 2f       	mov	r22, r18
    162e:	2a 81       	ldd	r18, Y+2	; 0x02
    1630:	42 2f       	mov	r20, r18
    1632:	50 e0       	ldi	r21, 0x00	; 0
    1634:	21 e0       	ldi	r18, 0x01	; 1
    1636:	30 e0       	ldi	r19, 0x00	; 0
    1638:	02 c0       	rjmp	.+4      	; 0x163e <dvn_gpio_write_pin+0x116>
    163a:	22 0f       	add	r18, r18
    163c:	33 1f       	adc	r19, r19
    163e:	4a 95       	dec	r20
    1640:	e2 f7       	brpl	.-8      	; 0x163a <dvn_gpio_write_pin+0x112>
    1642:	20 95       	com	r18
    1644:	26 23       	and	r18, r22
    1646:	fc 01       	movw	r30, r24
    1648:	20 83       	st	Z, r18
    164a:	43 c0       	rjmp	.+134    	; 0x16d2 <dvn_gpio_write_pin+0x1aa>
    164c:	85 e3       	ldi	r24, 0x35	; 53
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	25 e3       	ldi	r18, 0x35	; 53
    1652:	30 e0       	ldi	r19, 0x00	; 0
    1654:	f9 01       	movw	r30, r18
    1656:	20 81       	ld	r18, Z
    1658:	62 2f       	mov	r22, r18
    165a:	2a 81       	ldd	r18, Y+2	; 0x02
    165c:	42 2f       	mov	r20, r18
    165e:	50 e0       	ldi	r21, 0x00	; 0
    1660:	21 e0       	ldi	r18, 0x01	; 1
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	02 c0       	rjmp	.+4      	; 0x166a <dvn_gpio_write_pin+0x142>
    1666:	22 0f       	add	r18, r18
    1668:	33 1f       	adc	r19, r19
    166a:	4a 95       	dec	r20
    166c:	e2 f7       	brpl	.-8      	; 0x1666 <dvn_gpio_write_pin+0x13e>
    166e:	26 2b       	or	r18, r22
    1670:	fc 01       	movw	r30, r24
    1672:	20 83       	st	Z, r18
    1674:	2e c0       	rjmp	.+92     	; 0x16d2 <dvn_gpio_write_pin+0x1aa>
    1676:	8b 81       	ldd	r24, Y+3	; 0x03
    1678:	88 23       	and	r24, r24
    167a:	b1 f4       	brne	.+44     	; 0x16a8 <dvn_gpio_write_pin+0x180>
    167c:	82 e3       	ldi	r24, 0x32	; 50
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	22 e3       	ldi	r18, 0x32	; 50
    1682:	30 e0       	ldi	r19, 0x00	; 0
    1684:	f9 01       	movw	r30, r18
    1686:	20 81       	ld	r18, Z
    1688:	62 2f       	mov	r22, r18
    168a:	2a 81       	ldd	r18, Y+2	; 0x02
    168c:	42 2f       	mov	r20, r18
    168e:	50 e0       	ldi	r21, 0x00	; 0
    1690:	21 e0       	ldi	r18, 0x01	; 1
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	02 c0       	rjmp	.+4      	; 0x169a <dvn_gpio_write_pin+0x172>
    1696:	22 0f       	add	r18, r18
    1698:	33 1f       	adc	r19, r19
    169a:	4a 95       	dec	r20
    169c:	e2 f7       	brpl	.-8      	; 0x1696 <dvn_gpio_write_pin+0x16e>
    169e:	20 95       	com	r18
    16a0:	26 23       	and	r18, r22
    16a2:	fc 01       	movw	r30, r24
    16a4:	20 83       	st	Z, r18
    16a6:	14 c0       	rjmp	.+40     	; 0x16d0 <dvn_gpio_write_pin+0x1a8>
    16a8:	82 e3       	ldi	r24, 0x32	; 50
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	22 e3       	ldi	r18, 0x32	; 50
    16ae:	30 e0       	ldi	r19, 0x00	; 0
    16b0:	f9 01       	movw	r30, r18
    16b2:	20 81       	ld	r18, Z
    16b4:	62 2f       	mov	r22, r18
    16b6:	2a 81       	ldd	r18, Y+2	; 0x02
    16b8:	42 2f       	mov	r20, r18
    16ba:	50 e0       	ldi	r21, 0x00	; 0
    16bc:	21 e0       	ldi	r18, 0x01	; 1
    16be:	30 e0       	ldi	r19, 0x00	; 0
    16c0:	02 c0       	rjmp	.+4      	; 0x16c6 <dvn_gpio_write_pin+0x19e>
    16c2:	22 0f       	add	r18, r18
    16c4:	33 1f       	adc	r19, r19
    16c6:	4a 95       	dec	r20
    16c8:	e2 f7       	brpl	.-8      	; 0x16c2 <dvn_gpio_write_pin+0x19a>
    16ca:	26 2b       	or	r18, r22
    16cc:	fc 01       	movw	r30, r24
    16ce:	20 83       	st	Z, r18
    16d0:	00 00       	nop
    16d2:	00 00       	nop
    16d4:	0f 90       	pop	r0
    16d6:	0f 90       	pop	r0
    16d8:	0f 90       	pop	r0
    16da:	df 91       	pop	r29
    16dc:	cf 91       	pop	r28
    16de:	08 95       	ret

000016e0 <dvn_gpio_read_pin>:
    16e0:	cf 93       	push	r28
    16e2:	df 93       	push	r29
    16e4:	00 d0       	rcall	.+0      	; 0x16e6 <dvn_gpio_read_pin+0x6>
    16e6:	cd b7       	in	r28, 0x3d	; 61
    16e8:	de b7       	in	r29, 0x3e	; 62
    16ea:	89 83       	std	Y+1, r24	; 0x01
    16ec:	6a 83       	std	Y+2, r22	; 0x02
    16ee:	89 81       	ldd	r24, Y+1	; 0x01
    16f0:	88 2f       	mov	r24, r24
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	81 30       	cpi	r24, 0x01	; 1
    16f6:	91 05       	cpc	r25, r1
    16f8:	19 f1       	breq	.+70     	; 0x1740 <dvn_gpio_read_pin+0x60>
    16fa:	82 30       	cpi	r24, 0x02	; 2
    16fc:	91 05       	cpc	r25, r1
    16fe:	1c f4       	brge	.+6      	; 0x1706 <dvn_gpio_read_pin+0x26>
    1700:	89 2b       	or	r24, r25
    1702:	41 f0       	breq	.+16     	; 0x1714 <dvn_gpio_read_pin+0x34>
    1704:	5f c0       	rjmp	.+190    	; 0x17c4 <dvn_gpio_read_pin+0xe4>
    1706:	82 30       	cpi	r24, 0x02	; 2
    1708:	91 05       	cpc	r25, r1
    170a:	81 f1       	breq	.+96     	; 0x176c <dvn_gpio_read_pin+0x8c>
    170c:	03 97       	sbiw	r24, 0x03	; 3
    170e:	09 f4       	brne	.+2      	; 0x1712 <dvn_gpio_read_pin+0x32>
    1710:	43 c0       	rjmp	.+134    	; 0x1798 <dvn_gpio_read_pin+0xb8>
    1712:	58 c0       	rjmp	.+176    	; 0x17c4 <dvn_gpio_read_pin+0xe4>
    1714:	89 e3       	ldi	r24, 0x39	; 57
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	fc 01       	movw	r30, r24
    171a:	80 81       	ld	r24, Z
    171c:	88 2f       	mov	r24, r24
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	2a 81       	ldd	r18, Y+2	; 0x02
    1722:	22 2f       	mov	r18, r18
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	02 c0       	rjmp	.+4      	; 0x172c <dvn_gpio_read_pin+0x4c>
    1728:	95 95       	asr	r25
    172a:	87 95       	ror	r24
    172c:	2a 95       	dec	r18
    172e:	e2 f7       	brpl	.-8      	; 0x1728 <dvn_gpio_read_pin+0x48>
    1730:	81 70       	andi	r24, 0x01	; 1
    1732:	99 27       	eor	r25, r25
    1734:	89 2b       	or	r24, r25
    1736:	11 f4       	brne	.+4      	; 0x173c <dvn_gpio_read_pin+0x5c>
    1738:	80 e0       	ldi	r24, 0x00	; 0
    173a:	45 c0       	rjmp	.+138    	; 0x17c6 <dvn_gpio_read_pin+0xe6>
    173c:	81 e0       	ldi	r24, 0x01	; 1
    173e:	43 c0       	rjmp	.+134    	; 0x17c6 <dvn_gpio_read_pin+0xe6>
    1740:	86 e3       	ldi	r24, 0x36	; 54
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	fc 01       	movw	r30, r24
    1746:	80 81       	ld	r24, Z
    1748:	88 2f       	mov	r24, r24
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	2a 81       	ldd	r18, Y+2	; 0x02
    174e:	22 2f       	mov	r18, r18
    1750:	30 e0       	ldi	r19, 0x00	; 0
    1752:	02 c0       	rjmp	.+4      	; 0x1758 <dvn_gpio_read_pin+0x78>
    1754:	95 95       	asr	r25
    1756:	87 95       	ror	r24
    1758:	2a 95       	dec	r18
    175a:	e2 f7       	brpl	.-8      	; 0x1754 <dvn_gpio_read_pin+0x74>
    175c:	81 70       	andi	r24, 0x01	; 1
    175e:	99 27       	eor	r25, r25
    1760:	89 2b       	or	r24, r25
    1762:	11 f4       	brne	.+4      	; 0x1768 <dvn_gpio_read_pin+0x88>
    1764:	80 e0       	ldi	r24, 0x00	; 0
    1766:	2f c0       	rjmp	.+94     	; 0x17c6 <dvn_gpio_read_pin+0xe6>
    1768:	81 e0       	ldi	r24, 0x01	; 1
    176a:	2d c0       	rjmp	.+90     	; 0x17c6 <dvn_gpio_read_pin+0xe6>
    176c:	83 e3       	ldi	r24, 0x33	; 51
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	fc 01       	movw	r30, r24
    1772:	80 81       	ld	r24, Z
    1774:	88 2f       	mov	r24, r24
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	2a 81       	ldd	r18, Y+2	; 0x02
    177a:	22 2f       	mov	r18, r18
    177c:	30 e0       	ldi	r19, 0x00	; 0
    177e:	02 c0       	rjmp	.+4      	; 0x1784 <dvn_gpio_read_pin+0xa4>
    1780:	95 95       	asr	r25
    1782:	87 95       	ror	r24
    1784:	2a 95       	dec	r18
    1786:	e2 f7       	brpl	.-8      	; 0x1780 <dvn_gpio_read_pin+0xa0>
    1788:	81 70       	andi	r24, 0x01	; 1
    178a:	99 27       	eor	r25, r25
    178c:	89 2b       	or	r24, r25
    178e:	11 f4       	brne	.+4      	; 0x1794 <dvn_gpio_read_pin+0xb4>
    1790:	80 e0       	ldi	r24, 0x00	; 0
    1792:	19 c0       	rjmp	.+50     	; 0x17c6 <dvn_gpio_read_pin+0xe6>
    1794:	81 e0       	ldi	r24, 0x01	; 1
    1796:	17 c0       	rjmp	.+46     	; 0x17c6 <dvn_gpio_read_pin+0xe6>
    1798:	80 e3       	ldi	r24, 0x30	; 48
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	fc 01       	movw	r30, r24
    179e:	80 81       	ld	r24, Z
    17a0:	88 2f       	mov	r24, r24
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	2a 81       	ldd	r18, Y+2	; 0x02
    17a6:	22 2f       	mov	r18, r18
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	02 c0       	rjmp	.+4      	; 0x17b0 <dvn_gpio_read_pin+0xd0>
    17ac:	95 95       	asr	r25
    17ae:	87 95       	ror	r24
    17b0:	2a 95       	dec	r18
    17b2:	e2 f7       	brpl	.-8      	; 0x17ac <dvn_gpio_read_pin+0xcc>
    17b4:	81 70       	andi	r24, 0x01	; 1
    17b6:	99 27       	eor	r25, r25
    17b8:	89 2b       	or	r24, r25
    17ba:	11 f4       	brne	.+4      	; 0x17c0 <dvn_gpio_read_pin+0xe0>
    17bc:	80 e0       	ldi	r24, 0x00	; 0
    17be:	03 c0       	rjmp	.+6      	; 0x17c6 <dvn_gpio_read_pin+0xe6>
    17c0:	81 e0       	ldi	r24, 0x01	; 1
    17c2:	01 c0       	rjmp	.+2      	; 0x17c6 <dvn_gpio_read_pin+0xe6>
    17c4:	80 e0       	ldi	r24, 0x00	; 0
    17c6:	0f 90       	pop	r0
    17c8:	0f 90       	pop	r0
    17ca:	df 91       	pop	r29
    17cc:	cf 91       	pop	r28
    17ce:	08 95       	ret

000017d0 <twi_init>:
    17d0:	0f 93       	push	r16
    17d2:	1f 93       	push	r17
    17d4:	cf 93       	push	r28
    17d6:	df 93       	push	r29
    17d8:	cd b7       	in	r28, 0x3d	; 61
    17da:	de b7       	in	r29, 0x3e	; 62
    17dc:	a0 97       	sbiw	r28, 0x20	; 32
    17de:	0f b6       	in	r0, 0x3f	; 63
    17e0:	f8 94       	cli
    17e2:	de bf       	out	0x3e, r29	; 62
    17e4:	0f be       	out	0x3f, r0	; 63
    17e6:	cd bf       	out	0x3d, r28	; 61
    17e8:	84 e3       	ldi	r24, 0x34	; 52
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	23 e0       	ldi	r18, 0x03	; 3
    17ee:	fc 01       	movw	r30, r24
    17f0:	20 83       	st	Z, r18
    17f2:	85 e3       	ldi	r24, 0x35	; 53
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	23 e0       	ldi	r18, 0x03	; 3
    17f8:	fc 01       	movw	r30, r24
    17fa:	20 83       	st	Z, r18
    17fc:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <usart_init>
    1800:	86 e7       	ldi	r24, 0x76	; 118
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <usart_msg>
    1808:	8d e0       	ldi	r24, 0x0D	; 13
    180a:	0e 94 d2 0d 	call	0x1ba4	; 0x1ba4 <usart_tx>
    180e:	86 e5       	ldi	r24, 0x56	; 86
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	26 e5       	ldi	r18, 0x56	; 86
    1814:	30 e0       	ldi	r19, 0x00	; 0
    1816:	f9 01       	movw	r30, r18
    1818:	20 81       	ld	r18, Z
    181a:	2b 7f       	andi	r18, 0xFB	; 251
    181c:	fc 01       	movw	r30, r24
    181e:	20 83       	st	Z, r18
    1820:	00 e2       	ldi	r16, 0x20	; 32
    1822:	10 e0       	ldi	r17, 0x00	; 0
    1824:	81 e2       	ldi	r24, 0x21	; 33
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	fc 01       	movw	r30, r24
    182a:	10 82       	st	Z, r1
    182c:	80 e0       	ldi	r24, 0x00	; 0
    182e:	90 e0       	ldi	r25, 0x00	; 0
    1830:	a0 e0       	ldi	r26, 0x00	; 0
    1832:	b0 e4       	ldi	r27, 0x40	; 64
    1834:	9c 01       	movw	r18, r24
    1836:	ad 01       	movw	r20, r26
    1838:	60 e0       	ldi	r22, 0x00	; 0
    183a:	70 e0       	ldi	r23, 0x00	; 0
    183c:	80 e8       	ldi	r24, 0x80	; 128
    183e:	90 e4       	ldi	r25, 0x40	; 64
    1840:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divsf3>
    1844:	dc 01       	movw	r26, r24
    1846:	cb 01       	movw	r24, r22
    1848:	bc 01       	movw	r22, r24
    184a:	cd 01       	movw	r24, r26
    184c:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
    1850:	dc 01       	movw	r26, r24
    1852:	cb 01       	movw	r24, r22
    1854:	f8 01       	movw	r30, r16
    1856:	80 83       	st	Z, r24
    1858:	86 e5       	ldi	r24, 0x56	; 86
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	24 e0       	ldi	r18, 0x04	; 4
    185e:	fc 01       	movw	r30, r24
    1860:	20 83       	st	Z, r18
    1862:	80 e0       	ldi	r24, 0x00	; 0
    1864:	90 e0       	ldi	r25, 0x00	; 0
    1866:	a0 e2       	ldi	r26, 0x20	; 32
    1868:	b1 e4       	ldi	r27, 0x41	; 65
    186a:	89 83       	std	Y+1, r24	; 0x01
    186c:	9a 83       	std	Y+2, r25	; 0x02
    186e:	ab 83       	std	Y+3, r26	; 0x03
    1870:	bc 83       	std	Y+4, r27	; 0x04
    1872:	2b ea       	ldi	r18, 0xAB	; 171
    1874:	3a ea       	ldi	r19, 0xAA	; 170
    1876:	4a e2       	ldi	r20, 0x2A	; 42
    1878:	50 e4       	ldi	r21, 0x40	; 64
    187a:	69 81       	ldd	r22, Y+1	; 0x01
    187c:	7a 81       	ldd	r23, Y+2	; 0x02
    187e:	8b 81       	ldd	r24, Y+3	; 0x03
    1880:	9c 81       	ldd	r25, Y+4	; 0x04
    1882:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
    1886:	dc 01       	movw	r26, r24
    1888:	cb 01       	movw	r24, r22
    188a:	8d 83       	std	Y+5, r24	; 0x05
    188c:	9e 83       	std	Y+6, r25	; 0x06
    188e:	af 83       	std	Y+7, r26	; 0x07
    1890:	b8 87       	std	Y+8, r27	; 0x08
    1892:	89 81       	ldd	r24, Y+1	; 0x01
    1894:	9a 81       	ldd	r25, Y+2	; 0x02
    1896:	ab 81       	ldd	r26, Y+3	; 0x03
    1898:	bc 81       	ldd	r27, Y+4	; 0x04
    189a:	9c 01       	movw	r18, r24
    189c:	ad 01       	movw	r20, r26
    189e:	bc 01       	movw	r22, r24
    18a0:	cd 01       	movw	r24, r26
    18a2:	0e 94 80 12 	call	0x2500	; 0x2500 <__addsf3>
    18a6:	dc 01       	movw	r26, r24
    18a8:	cb 01       	movw	r24, r22
    18aa:	89 87       	std	Y+9, r24	; 0x09
    18ac:	9a 87       	std	Y+10, r25	; 0x0a
    18ae:	ab 87       	std	Y+11, r26	; 0x0b
    18b0:	bc 87       	std	Y+12, r27	; 0x0c
    18b2:	20 e0       	ldi	r18, 0x00	; 0
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	40 e8       	ldi	r20, 0x80	; 128
    18b8:	5f e3       	ldi	r21, 0x3F	; 63
    18ba:	6d 81       	ldd	r22, Y+5	; 0x05
    18bc:	7e 81       	ldd	r23, Y+6	; 0x06
    18be:	8f 81       	ldd	r24, Y+7	; 0x07
    18c0:	98 85       	ldd	r25, Y+8	; 0x08
    18c2:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
    18c6:	88 23       	and	r24, r24
    18c8:	1c f4       	brge	.+6      	; 0x18d0 <twi_init+0x100>
    18ca:	81 e0       	ldi	r24, 0x01	; 1
    18cc:	8d 87       	std	Y+13, r24	; 0x0d
    18ce:	b2 c0       	rjmp	.+356    	; 0x1a34 <twi_init+0x264>
    18d0:	20 e0       	ldi	r18, 0x00	; 0
    18d2:	3f ef       	ldi	r19, 0xFF	; 255
    18d4:	4f e7       	ldi	r20, 0x7F	; 127
    18d6:	57 e4       	ldi	r21, 0x47	; 71
    18d8:	69 85       	ldd	r22, Y+9	; 0x09
    18da:	7a 85       	ldd	r23, Y+10	; 0x0a
    18dc:	8b 85       	ldd	r24, Y+11	; 0x0b
    18de:	9c 85       	ldd	r25, Y+12	; 0x0c
    18e0:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
    18e4:	18 16       	cp	r1, r24
    18e6:	0c f0       	brlt	.+2      	; 0x18ea <twi_init+0x11a>
    18e8:	7b c0       	rjmp	.+246    	; 0x19e0 <twi_init+0x210>
    18ea:	20 e0       	ldi	r18, 0x00	; 0
    18ec:	30 e0       	ldi	r19, 0x00	; 0
    18ee:	4a e7       	ldi	r20, 0x7A	; 122
    18f0:	54 e4       	ldi	r21, 0x44	; 68
    18f2:	69 81       	ldd	r22, Y+1	; 0x01
    18f4:	7a 81       	ldd	r23, Y+2	; 0x02
    18f6:	8b 81       	ldd	r24, Y+3	; 0x03
    18f8:	9c 81       	ldd	r25, Y+4	; 0x04
    18fa:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divsf3>
    18fe:	dc 01       	movw	r26, r24
    1900:	cb 01       	movw	r24, r22
    1902:	8e 87       	std	Y+14, r24	; 0x0e
    1904:	9f 87       	std	Y+15, r25	; 0x0f
    1906:	a8 8b       	std	Y+16, r26	; 0x10
    1908:	b9 8b       	std	Y+17, r27	; 0x11
    190a:	20 e0       	ldi	r18, 0x00	; 0
    190c:	30 e0       	ldi	r19, 0x00	; 0
    190e:	4a ef       	ldi	r20, 0xFA	; 250
    1910:	54 e4       	ldi	r21, 0x44	; 68
    1912:	6e 85       	ldd	r22, Y+14	; 0x0e
    1914:	7f 85       	ldd	r23, Y+15	; 0x0f
    1916:	88 89       	ldd	r24, Y+16	; 0x10
    1918:	99 89       	ldd	r25, Y+17	; 0x11
    191a:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
    191e:	dc 01       	movw	r26, r24
    1920:	cb 01       	movw	r24, r22
    1922:	8a 8b       	std	Y+18, r24	; 0x12
    1924:	9b 8b       	std	Y+19, r25	; 0x13
    1926:	ac 8b       	std	Y+20, r26	; 0x14
    1928:	bd 8b       	std	Y+21, r27	; 0x15
    192a:	20 e0       	ldi	r18, 0x00	; 0
    192c:	30 e0       	ldi	r19, 0x00	; 0
    192e:	40 e8       	ldi	r20, 0x80	; 128
    1930:	5f e3       	ldi	r21, 0x3F	; 63
    1932:	6a 89       	ldd	r22, Y+18	; 0x12
    1934:	7b 89       	ldd	r23, Y+19	; 0x13
    1936:	8c 89       	ldd	r24, Y+20	; 0x14
    1938:	9d 89       	ldd	r25, Y+21	; 0x15
    193a:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <__cmpsf2>
    193e:	88 23       	and	r24, r24
    1940:	2c f4       	brge	.+10     	; 0x194c <twi_init+0x17c>
    1942:	81 e0       	ldi	r24, 0x01	; 1
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	9f 8b       	std	Y+23, r25	; 0x17
    1948:	8e 8b       	std	Y+22, r24	; 0x16
    194a:	3f c0       	rjmp	.+126    	; 0x19ca <twi_init+0x1fa>
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	3f ef       	ldi	r19, 0xFF	; 255
    1950:	4f e7       	ldi	r20, 0x7F	; 127
    1952:	57 e4       	ldi	r21, 0x47	; 71
    1954:	6a 89       	ldd	r22, Y+18	; 0x12
    1956:	7b 89       	ldd	r23, Y+19	; 0x13
    1958:	8c 89       	ldd	r24, Y+20	; 0x14
    195a:	9d 89       	ldd	r25, Y+21	; 0x15
    195c:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
    1960:	18 16       	cp	r1, r24
    1962:	4c f5       	brge	.+82     	; 0x19b6 <twi_init+0x1e6>
    1964:	20 e0       	ldi	r18, 0x00	; 0
    1966:	30 e0       	ldi	r19, 0x00	; 0
    1968:	40 e2       	ldi	r20, 0x20	; 32
    196a:	51 e4       	ldi	r21, 0x41	; 65
    196c:	6e 85       	ldd	r22, Y+14	; 0x0e
    196e:	7f 85       	ldd	r23, Y+15	; 0x0f
    1970:	88 89       	ldd	r24, Y+16	; 0x10
    1972:	99 89       	ldd	r25, Y+17	; 0x11
    1974:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
    1978:	dc 01       	movw	r26, r24
    197a:	cb 01       	movw	r24, r22
    197c:	bc 01       	movw	r22, r24
    197e:	cd 01       	movw	r24, r26
    1980:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
    1984:	dc 01       	movw	r26, r24
    1986:	cb 01       	movw	r24, r22
    1988:	9f 8b       	std	Y+23, r25	; 0x17
    198a:	8e 8b       	std	Y+22, r24	; 0x16
    198c:	0f c0       	rjmp	.+30     	; 0x19ac <twi_init+0x1dc>
    198e:	88 ec       	ldi	r24, 0xC8	; 200
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	99 8f       	std	Y+25, r25	; 0x19
    1994:	88 8f       	std	Y+24, r24	; 0x18
    1996:	88 8d       	ldd	r24, Y+24	; 0x18
    1998:	99 8d       	ldd	r25, Y+25	; 0x19
    199a:	01 97       	sbiw	r24, 0x01	; 1
    199c:	f1 f7       	brne	.-4      	; 0x199a <twi_init+0x1ca>
    199e:	99 8f       	std	Y+25, r25	; 0x19
    19a0:	88 8f       	std	Y+24, r24	; 0x18
    19a2:	8e 89       	ldd	r24, Y+22	; 0x16
    19a4:	9f 89       	ldd	r25, Y+23	; 0x17
    19a6:	01 97       	sbiw	r24, 0x01	; 1
    19a8:	9f 8b       	std	Y+23, r25	; 0x17
    19aa:	8e 8b       	std	Y+22, r24	; 0x16
    19ac:	8e 89       	ldd	r24, Y+22	; 0x16
    19ae:	9f 89       	ldd	r25, Y+23	; 0x17
    19b0:	89 2b       	or	r24, r25
    19b2:	69 f7       	brne	.-38     	; 0x198e <twi_init+0x1be>
    19b4:	3f c0       	rjmp	.+126    	; 0x1a34 <twi_init+0x264>
    19b6:	6a 89       	ldd	r22, Y+18	; 0x12
    19b8:	7b 89       	ldd	r23, Y+19	; 0x13
    19ba:	8c 89       	ldd	r24, Y+20	; 0x14
    19bc:	9d 89       	ldd	r25, Y+21	; 0x15
    19be:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
    19c2:	dc 01       	movw	r26, r24
    19c4:	cb 01       	movw	r24, r22
    19c6:	9f 8b       	std	Y+23, r25	; 0x17
    19c8:	8e 8b       	std	Y+22, r24	; 0x16
    19ca:	8e 89       	ldd	r24, Y+22	; 0x16
    19cc:	9f 89       	ldd	r25, Y+23	; 0x17
    19ce:	9b 8f       	std	Y+27, r25	; 0x1b
    19d0:	8a 8f       	std	Y+26, r24	; 0x1a
    19d2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    19d4:	9b 8d       	ldd	r25, Y+27	; 0x1b
    19d6:	01 97       	sbiw	r24, 0x01	; 1
    19d8:	f1 f7       	brne	.-4      	; 0x19d6 <twi_init+0x206>
    19da:	9b 8f       	std	Y+27, r25	; 0x1b
    19dc:	8a 8f       	std	Y+26, r24	; 0x1a
    19de:	2a c0       	rjmp	.+84     	; 0x1a34 <twi_init+0x264>
    19e0:	20 e0       	ldi	r18, 0x00	; 0
    19e2:	30 e0       	ldi	r19, 0x00	; 0
    19e4:	4f e7       	ldi	r20, 0x7F	; 127
    19e6:	53 e4       	ldi	r21, 0x43	; 67
    19e8:	6d 81       	ldd	r22, Y+5	; 0x05
    19ea:	7e 81       	ldd	r23, Y+6	; 0x06
    19ec:	8f 81       	ldd	r24, Y+7	; 0x07
    19ee:	98 85       	ldd	r25, Y+8	; 0x08
    19f0:	0e 94 4b 14 	call	0x2896	; 0x2896 <__gesf2>
    19f4:	18 16       	cp	r1, r24
    19f6:	ac f4       	brge	.+42     	; 0x1a22 <twi_init+0x252>
    19f8:	69 85       	ldd	r22, Y+9	; 0x09
    19fa:	7a 85       	ldd	r23, Y+10	; 0x0a
    19fc:	8b 85       	ldd	r24, Y+11	; 0x0b
    19fe:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a00:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
    1a04:	dc 01       	movw	r26, r24
    1a06:	cb 01       	movw	r24, r22
    1a08:	9d 8f       	std	Y+29, r25	; 0x1d
    1a0a:	8c 8f       	std	Y+28, r24	; 0x1c
    1a0c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1a0e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1a10:	9f 8f       	std	Y+31, r25	; 0x1f
    1a12:	8e 8f       	std	Y+30, r24	; 0x1e
    1a14:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a16:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1a18:	01 97       	sbiw	r24, 0x01	; 1
    1a1a:	f1 f7       	brne	.-4      	; 0x1a18 <twi_init+0x248>
    1a1c:	9f 8f       	std	Y+31, r25	; 0x1f
    1a1e:	8e 8f       	std	Y+30, r24	; 0x1e
    1a20:	0f c0       	rjmp	.+30     	; 0x1a40 <twi_init+0x270>
    1a22:	6d 81       	ldd	r22, Y+5	; 0x05
    1a24:	7e 81       	ldd	r23, Y+6	; 0x06
    1a26:	8f 81       	ldd	r24, Y+7	; 0x07
    1a28:	98 85       	ldd	r25, Y+8	; 0x08
    1a2a:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
    1a2e:	dc 01       	movw	r26, r24
    1a30:	cb 01       	movw	r24, r22
    1a32:	8d 87       	std	Y+13, r24	; 0x0d
    1a34:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a36:	88 a3       	std	Y+32, r24	; 0x20
    1a38:	88 a1       	ldd	r24, Y+32	; 0x20
    1a3a:	8a 95       	dec	r24
    1a3c:	f1 f7       	brne	.-4      	; 0x1a3a <twi_init+0x26a>
    1a3e:	88 a3       	std	Y+32, r24	; 0x20
    1a40:	00 00       	nop
    1a42:	a0 96       	adiw	r28, 0x20	; 32
    1a44:	0f b6       	in	r0, 0x3f	; 63
    1a46:	f8 94       	cli
    1a48:	de bf       	out	0x3e, r29	; 62
    1a4a:	0f be       	out	0x3f, r0	; 63
    1a4c:	cd bf       	out	0x3d, r28	; 61
    1a4e:	df 91       	pop	r29
    1a50:	cf 91       	pop	r28
    1a52:	1f 91       	pop	r17
    1a54:	0f 91       	pop	r16
    1a56:	08 95       	ret

00001a58 <twi_start>:
    1a58:	cf 93       	push	r28
    1a5a:	df 93       	push	r29
    1a5c:	cd b7       	in	r28, 0x3d	; 61
    1a5e:	de b7       	in	r29, 0x3e	; 62
    1a60:	86 e5       	ldi	r24, 0x56	; 86
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	24 ea       	ldi	r18, 0xA4	; 164
    1a66:	fc 01       	movw	r30, r24
    1a68:	20 83       	st	Z, r18
    1a6a:	00 00       	nop
    1a6c:	86 e5       	ldi	r24, 0x56	; 86
    1a6e:	90 e0       	ldi	r25, 0x00	; 0
    1a70:	fc 01       	movw	r30, r24
    1a72:	80 81       	ld	r24, Z
    1a74:	88 23       	and	r24, r24
    1a76:	d4 f7       	brge	.-12     	; 0x1a6c <twi_start+0x14>
    1a78:	00 00       	nop
    1a7a:	81 e2       	ldi	r24, 0x21	; 33
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	fc 01       	movw	r30, r24
    1a80:	80 81       	ld	r24, Z
    1a82:	88 2f       	mov	r24, r24
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	88 7f       	andi	r24, 0xF8	; 248
    1a88:	99 27       	eor	r25, r25
    1a8a:	08 97       	sbiw	r24, 0x08	; 8
    1a8c:	b1 f7       	brne	.-20     	; 0x1a7a <twi_start+0x22>
    1a8e:	88 e8       	ldi	r24, 0x88	; 136
    1a90:	90 e0       	ldi	r25, 0x00	; 0
    1a92:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <usart_msg>
    1a96:	8d e0       	ldi	r24, 0x0D	; 13
    1a98:	0e 94 d2 0d 	call	0x1ba4	; 0x1ba4 <usart_tx>
    1a9c:	00 00       	nop
    1a9e:	df 91       	pop	r29
    1aa0:	cf 91       	pop	r28
    1aa2:	08 95       	ret

00001aa4 <twi_write_cmd>:
    1aa4:	cf 93       	push	r28
    1aa6:	df 93       	push	r29
    1aa8:	1f 92       	push	r1
    1aaa:	cd b7       	in	r28, 0x3d	; 61
    1aac:	de b7       	in	r29, 0x3e	; 62
    1aae:	89 83       	std	Y+1, r24	; 0x01
    1ab0:	83 e2       	ldi	r24, 0x23	; 35
    1ab2:	90 e0       	ldi	r25, 0x00	; 0
    1ab4:	29 81       	ldd	r18, Y+1	; 0x01
    1ab6:	fc 01       	movw	r30, r24
    1ab8:	20 83       	st	Z, r18
    1aba:	86 e5       	ldi	r24, 0x56	; 86
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	24 e8       	ldi	r18, 0x84	; 132
    1ac0:	fc 01       	movw	r30, r24
    1ac2:	20 83       	st	Z, r18
    1ac4:	00 00       	nop
    1ac6:	86 e5       	ldi	r24, 0x56	; 86
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	fc 01       	movw	r30, r24
    1acc:	80 81       	ld	r24, Z
    1ace:	88 23       	and	r24, r24
    1ad0:	d4 f7       	brge	.-12     	; 0x1ac6 <twi_write_cmd+0x22>
    1ad2:	00 00       	nop
    1ad4:	81 e2       	ldi	r24, 0x21	; 33
    1ad6:	90 e0       	ldi	r25, 0x00	; 0
    1ad8:	fc 01       	movw	r30, r24
    1ada:	80 81       	ld	r24, Z
    1adc:	88 2f       	mov	r24, r24
    1ade:	90 e0       	ldi	r25, 0x00	; 0
    1ae0:	88 7f       	andi	r24, 0xF8	; 248
    1ae2:	99 27       	eor	r25, r25
    1ae4:	48 97       	sbiw	r24, 0x18	; 24
    1ae6:	b1 f7       	brne	.-20     	; 0x1ad4 <twi_write_cmd+0x30>
    1ae8:	88 e8       	ldi	r24, 0x88	; 136
    1aea:	90 e0       	ldi	r25, 0x00	; 0
    1aec:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <usart_msg>
    1af0:	8d e0       	ldi	r24, 0x0D	; 13
    1af2:	0e 94 d2 0d 	call	0x1ba4	; 0x1ba4 <usart_tx>
    1af6:	00 00       	nop
    1af8:	0f 90       	pop	r0
    1afa:	df 91       	pop	r29
    1afc:	cf 91       	pop	r28
    1afe:	08 95       	ret

00001b00 <twi_write_dwr>:
    1b00:	cf 93       	push	r28
    1b02:	df 93       	push	r29
    1b04:	1f 92       	push	r1
    1b06:	cd b7       	in	r28, 0x3d	; 61
    1b08:	de b7       	in	r29, 0x3e	; 62
    1b0a:	89 83       	std	Y+1, r24	; 0x01
    1b0c:	83 e2       	ldi	r24, 0x23	; 35
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	29 81       	ldd	r18, Y+1	; 0x01
    1b12:	fc 01       	movw	r30, r24
    1b14:	20 83       	st	Z, r18
    1b16:	86 e5       	ldi	r24, 0x56	; 86
    1b18:	90 e0       	ldi	r25, 0x00	; 0
    1b1a:	24 e8       	ldi	r18, 0x84	; 132
    1b1c:	fc 01       	movw	r30, r24
    1b1e:	20 83       	st	Z, r18
    1b20:	00 00       	nop
    1b22:	86 e5       	ldi	r24, 0x56	; 86
    1b24:	90 e0       	ldi	r25, 0x00	; 0
    1b26:	fc 01       	movw	r30, r24
    1b28:	80 81       	ld	r24, Z
    1b2a:	88 23       	and	r24, r24
    1b2c:	d4 f7       	brge	.-12     	; 0x1b22 <twi_write_dwr+0x22>
    1b2e:	00 00       	nop
    1b30:	81 e2       	ldi	r24, 0x21	; 33
    1b32:	90 e0       	ldi	r25, 0x00	; 0
    1b34:	fc 01       	movw	r30, r24
    1b36:	80 81       	ld	r24, Z
    1b38:	88 2f       	mov	r24, r24
    1b3a:	90 e0       	ldi	r25, 0x00	; 0
    1b3c:	88 7f       	andi	r24, 0xF8	; 248
    1b3e:	99 27       	eor	r25, r25
    1b40:	88 97       	sbiw	r24, 0x28	; 40
    1b42:	b1 f7       	brne	.-20     	; 0x1b30 <twi_write_dwr+0x30>
    1b44:	8d e0       	ldi	r24, 0x0D	; 13
    1b46:	0e 94 d2 0d 	call	0x1ba4	; 0x1ba4 <usart_tx>
    1b4a:	00 00       	nop
    1b4c:	0f 90       	pop	r0
    1b4e:	df 91       	pop	r29
    1b50:	cf 91       	pop	r28
    1b52:	08 95       	ret

00001b54 <twi_stop>:
    1b54:	cf 93       	push	r28
    1b56:	df 93       	push	r29
    1b58:	cd b7       	in	r28, 0x3d	; 61
    1b5a:	de b7       	in	r29, 0x3e	; 62
    1b5c:	86 e5       	ldi	r24, 0x56	; 86
    1b5e:	90 e0       	ldi	r25, 0x00	; 0
    1b60:	24 e9       	ldi	r18, 0x94	; 148
    1b62:	fc 01       	movw	r30, r24
    1b64:	20 83       	st	Z, r18
    1b66:	00 00       	nop
    1b68:	df 91       	pop	r29
    1b6a:	cf 91       	pop	r28
    1b6c:	08 95       	ret

00001b6e <usart_init>:
    1b6e:	cf 93       	push	r28
    1b70:	df 93       	push	r29
    1b72:	cd b7       	in	r28, 0x3d	; 61
    1b74:	de b7       	in	r29, 0x3e	; 62
    1b76:	80 e4       	ldi	r24, 0x40	; 64
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	fc 01       	movw	r30, r24
    1b7c:	10 82       	st	Z, r1
    1b7e:	89 e2       	ldi	r24, 0x29	; 41
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	28 e0       	ldi	r18, 0x08	; 8
    1b84:	fc 01       	movw	r30, r24
    1b86:	20 83       	st	Z, r18
    1b88:	80 e4       	ldi	r24, 0x40	; 64
    1b8a:	90 e0       	ldi	r25, 0x00	; 0
    1b8c:	26 e8       	ldi	r18, 0x86	; 134
    1b8e:	fc 01       	movw	r30, r24
    1b90:	20 83       	st	Z, r18
    1b92:	8a e2       	ldi	r24, 0x2A	; 42
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	28 e1       	ldi	r18, 0x18	; 24
    1b98:	fc 01       	movw	r30, r24
    1b9a:	20 83       	st	Z, r18
    1b9c:	00 00       	nop
    1b9e:	df 91       	pop	r29
    1ba0:	cf 91       	pop	r28
    1ba2:	08 95       	ret

00001ba4 <usart_tx>:
    1ba4:	cf 93       	push	r28
    1ba6:	df 93       	push	r29
    1ba8:	1f 92       	push	r1
    1baa:	cd b7       	in	r28, 0x3d	; 61
    1bac:	de b7       	in	r29, 0x3e	; 62
    1bae:	89 83       	std	Y+1, r24	; 0x01
    1bb0:	00 00       	nop
    1bb2:	8b e2       	ldi	r24, 0x2B	; 43
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	80 81       	ld	r24, Z
    1bba:	88 2f       	mov	r24, r24
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	80 72       	andi	r24, 0x20	; 32
    1bc0:	99 27       	eor	r25, r25
    1bc2:	89 2b       	or	r24, r25
    1bc4:	b1 f3       	breq	.-20     	; 0x1bb2 <usart_tx+0xe>
    1bc6:	8c e2       	ldi	r24, 0x2C	; 44
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	29 81       	ldd	r18, Y+1	; 0x01
    1bcc:	fc 01       	movw	r30, r24
    1bce:	20 83       	st	Z, r18
    1bd0:	00 00       	nop
    1bd2:	0f 90       	pop	r0
    1bd4:	df 91       	pop	r29
    1bd6:	cf 91       	pop	r28
    1bd8:	08 95       	ret

00001bda <usart_msg>:
    1bda:	cf 93       	push	r28
    1bdc:	df 93       	push	r29
    1bde:	00 d0       	rcall	.+0      	; 0x1be0 <usart_msg+0x6>
    1be0:	cd b7       	in	r28, 0x3d	; 61
    1be2:	de b7       	in	r29, 0x3e	; 62
    1be4:	9a 83       	std	Y+2, r25	; 0x02
    1be6:	89 83       	std	Y+1, r24	; 0x01
    1be8:	0b c0       	rjmp	.+22     	; 0x1c00 <usart_msg+0x26>
    1bea:	89 81       	ldd	r24, Y+1	; 0x01
    1bec:	9a 81       	ldd	r25, Y+2	; 0x02
    1bee:	9c 01       	movw	r18, r24
    1bf0:	2f 5f       	subi	r18, 0xFF	; 255
    1bf2:	3f 4f       	sbci	r19, 0xFF	; 255
    1bf4:	3a 83       	std	Y+2, r19	; 0x02
    1bf6:	29 83       	std	Y+1, r18	; 0x01
    1bf8:	fc 01       	movw	r30, r24
    1bfa:	80 81       	ld	r24, Z
    1bfc:	0e 94 d2 0d 	call	0x1ba4	; 0x1ba4 <usart_tx>
    1c00:	89 81       	ldd	r24, Y+1	; 0x01
    1c02:	9a 81       	ldd	r25, Y+2	; 0x02
    1c04:	fc 01       	movw	r30, r24
    1c06:	80 81       	ld	r24, Z
    1c08:	88 23       	and	r24, r24
    1c0a:	79 f7       	brne	.-34     	; 0x1bea <usart_msg+0x10>
    1c0c:	00 00       	nop
    1c0e:	0f 90       	pop	r0
    1c10:	0f 90       	pop	r0
    1c12:	df 91       	pop	r29
    1c14:	cf 91       	pop	r28
    1c16:	08 95       	ret

00001c18 <__vector_10>:
#include "dvn_spi.h"

ISR(SPI_STC_vect){
    1c18:	1f 92       	push	r1
    1c1a:	0f 92       	push	r0
    1c1c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1c20:	0f 92       	push	r0
    1c22:	11 24       	eor	r1, r1
    1c24:	cf 93       	push	r28
    1c26:	df 93       	push	r29
    1c28:	cd b7       	in	r28, 0x3d	; 61
    1c2a:	de b7       	in	r29, 0x3e	; 62
	//dvn_spi_receive();
}
    1c2c:	00 00       	nop
    1c2e:	df 91       	pop	r29
    1c30:	cf 91       	pop	r28
    1c32:	0f 90       	pop	r0
    1c34:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1c38:	0f 90       	pop	r0
    1c3a:	1f 90       	pop	r1
    1c3c:	18 95       	reti

00001c3e <__vector_9>:
    1c3e:	1f 92       	push	r1
    1c40:	0f 92       	push	r0
    1c42:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1c46:	0f 92       	push	r0
    1c48:	11 24       	eor	r1, r1
    1c4a:	2f 93       	push	r18
    1c4c:	8f 93       	push	r24
    1c4e:	9f 93       	push	r25
    1c50:	af 93       	push	r26
    1c52:	bf 93       	push	r27
    1c54:	ef 93       	push	r30
    1c56:	ff 93       	push	r31
    1c58:	cf 93       	push	r28
    1c5a:	df 93       	push	r29
    1c5c:	cd b7       	in	r28, 0x3d	; 61
    1c5e:	de b7       	in	r29, 0x3e	; 62
    1c60:	82 e5       	ldi	r24, 0x52	; 82
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	22 e8       	ldi	r18, 0x82	; 130
    1c66:	fc 01       	movw	r30, r24
    1c68:	20 83       	st	Z, r18
    1c6a:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <time>
    1c6e:	90 91 e2 00 	lds	r25, 0x00E2	; 0x8000e2 <time+0x1>
    1c72:	a0 91 e3 00 	lds	r26, 0x00E3	; 0x8000e3 <time+0x2>
    1c76:	b0 91 e4 00 	lds	r27, 0x00E4	; 0x8000e4 <time+0x3>
    1c7a:	01 96       	adiw	r24, 0x01	; 1
    1c7c:	a1 1d       	adc	r26, r1
    1c7e:	b1 1d       	adc	r27, r1
    1c80:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <time>
    1c84:	90 93 e2 00 	sts	0x00E2, r25	; 0x8000e2 <time+0x1>
    1c88:	a0 93 e3 00 	sts	0x00E3, r26	; 0x8000e3 <time+0x2>
    1c8c:	b0 93 e4 00 	sts	0x00E4, r27	; 0x8000e4 <time+0x3>
    1c90:	00 00       	nop
    1c92:	df 91       	pop	r29
    1c94:	cf 91       	pop	r28
    1c96:	ff 91       	pop	r31
    1c98:	ef 91       	pop	r30
    1c9a:	bf 91       	pop	r27
    1c9c:	af 91       	pop	r26
    1c9e:	9f 91       	pop	r25
    1ca0:	8f 91       	pop	r24
    1ca2:	2f 91       	pop	r18
    1ca4:	0f 90       	pop	r0
    1ca6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1caa:	0f 90       	pop	r0
    1cac:	1f 90       	pop	r1
    1cae:	18 95       	reti

00001cb0 <__vector_4>:
    1cb0:	1f 92       	push	r1
    1cb2:	0f 92       	push	r0
    1cb4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1cb8:	0f 92       	push	r0
    1cba:	11 24       	eor	r1, r1
    1cbc:	2f 93       	push	r18
    1cbe:	8f 93       	push	r24
    1cc0:	9f 93       	push	r25
    1cc2:	af 93       	push	r26
    1cc4:	bf 93       	push	r27
    1cc6:	ef 93       	push	r30
    1cc8:	ff 93       	push	r31
    1cca:	cf 93       	push	r28
    1ccc:	df 93       	push	r29
    1cce:	cd b7       	in	r28, 0x3d	; 61
    1cd0:	de b7       	in	r29, 0x3e	; 62
    1cd2:	84 e4       	ldi	r24, 0x44	; 68
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	22 e8       	ldi	r18, 0x82	; 130
    1cd8:	fc 01       	movw	r30, r24
    1cda:	20 83       	st	Z, r18
    1cdc:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <time>
    1ce0:	90 91 e2 00 	lds	r25, 0x00E2	; 0x8000e2 <time+0x1>
    1ce4:	a0 91 e3 00 	lds	r26, 0x00E3	; 0x8000e3 <time+0x2>
    1ce8:	b0 91 e4 00 	lds	r27, 0x00E4	; 0x8000e4 <time+0x3>
    1cec:	01 96       	adiw	r24, 0x01	; 1
    1cee:	a1 1d       	adc	r26, r1
    1cf0:	b1 1d       	adc	r27, r1
    1cf2:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <time>
    1cf6:	90 93 e2 00 	sts	0x00E2, r25	; 0x8000e2 <time+0x1>
    1cfa:	a0 93 e3 00 	sts	0x00E3, r26	; 0x8000e3 <time+0x2>
    1cfe:	b0 93 e4 00 	sts	0x00E4, r27	; 0x8000e4 <time+0x3>
    1d02:	00 00       	nop
    1d04:	df 91       	pop	r29
    1d06:	cf 91       	pop	r28
    1d08:	ff 91       	pop	r31
    1d0a:	ef 91       	pop	r30
    1d0c:	bf 91       	pop	r27
    1d0e:	af 91       	pop	r26
    1d10:	9f 91       	pop	r25
    1d12:	8f 91       	pop	r24
    1d14:	2f 91       	pop	r18
    1d16:	0f 90       	pop	r0
    1d18:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1d1c:	0f 90       	pop	r0
    1d1e:	1f 90       	pop	r1
    1d20:	18 95       	reti

00001d22 <dvn_timer_normal_enable>:
    1d22:	cf 93       	push	r28
    1d24:	df 93       	push	r29
    1d26:	00 d0       	rcall	.+0      	; 0x1d28 <dvn_timer_normal_enable+0x6>
    1d28:	cd b7       	in	r28, 0x3d	; 61
    1d2a:	de b7       	in	r29, 0x3e	; 62
    1d2c:	89 83       	std	Y+1, r24	; 0x01
    1d2e:	6a 83       	std	Y+2, r22	; 0x02
    1d30:	89 81       	ldd	r24, Y+1	; 0x01
    1d32:	88 2f       	mov	r24, r24
    1d34:	90 e0       	ldi	r25, 0x00	; 0
    1d36:	00 97       	sbiw	r24, 0x00	; 0
    1d38:	21 f0       	breq	.+8      	; 0x1d42 <dvn_timer_normal_enable+0x20>
    1d3a:	01 97       	sbiw	r24, 0x01	; 1
    1d3c:	09 f4       	brne	.+2      	; 0x1d40 <dvn_timer_normal_enable+0x1e>
    1d3e:	49 c0       	rjmp	.+146    	; 0x1dd2 <dvn_timer_normal_enable+0xb0>
    1d40:	92 c0       	rjmp	.+292    	; 0x1e66 <dvn_timer_normal_enable+0x144>
    1d42:	83 e5       	ldi	r24, 0x53	; 83
    1d44:	90 e0       	ldi	r25, 0x00	; 0
    1d46:	23 e5       	ldi	r18, 0x53	; 83
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	f9 01       	movw	r30, r18
    1d4c:	20 81       	ld	r18, Z
    1d4e:	27 7f       	andi	r18, 0xF7	; 247
    1d50:	fc 01       	movw	r30, r24
    1d52:	20 83       	st	Z, r18
    1d54:	83 e5       	ldi	r24, 0x53	; 83
    1d56:	90 e0       	ldi	r25, 0x00	; 0
    1d58:	23 e5       	ldi	r18, 0x53	; 83
    1d5a:	30 e0       	ldi	r19, 0x00	; 0
    1d5c:	f9 01       	movw	r30, r18
    1d5e:	20 81       	ld	r18, Z
    1d60:	2f 7b       	andi	r18, 0xBF	; 191
    1d62:	fc 01       	movw	r30, r24
    1d64:	20 83       	st	Z, r18
    1d66:	83 e5       	ldi	r24, 0x53	; 83
    1d68:	90 e0       	ldi	r25, 0x00	; 0
    1d6a:	23 e5       	ldi	r18, 0x53	; 83
    1d6c:	30 e0       	ldi	r19, 0x00	; 0
    1d6e:	f9 01       	movw	r30, r18
    1d70:	20 81       	ld	r18, Z
    1d72:	28 7f       	andi	r18, 0xF8	; 248
    1d74:	fc 01       	movw	r30, r24
    1d76:	20 83       	st	Z, r18
    1d78:	8a 81       	ldd	r24, Y+2	; 0x02
    1d7a:	88 23       	and	r24, r24
    1d7c:	c1 f4       	brne	.+48     	; 0x1dae <dvn_timer_normal_enable+0x8c>
    1d7e:	83 e5       	ldi	r24, 0x53	; 83
    1d80:	90 e0       	ldi	r25, 0x00	; 0
    1d82:	23 e5       	ldi	r18, 0x53	; 83
    1d84:	30 e0       	ldi	r19, 0x00	; 0
    1d86:	f9 01       	movw	r30, r18
    1d88:	20 81       	ld	r18, Z
    1d8a:	23 60       	ori	r18, 0x03	; 3
    1d8c:	fc 01       	movw	r30, r24
    1d8e:	20 83       	st	Z, r18
    1d90:	82 e5       	ldi	r24, 0x52	; 82
    1d92:	90 e0       	ldi	r25, 0x00	; 0
    1d94:	22 e8       	ldi	r18, 0x82	; 130
    1d96:	fc 01       	movw	r30, r24
    1d98:	20 83       	st	Z, r18
    1d9a:	89 e5       	ldi	r24, 0x59	; 89
    1d9c:	90 e0       	ldi	r25, 0x00	; 0
    1d9e:	29 e5       	ldi	r18, 0x59	; 89
    1da0:	30 e0       	ldi	r19, 0x00	; 0
    1da2:	f9 01       	movw	r30, r18
    1da4:	20 81       	ld	r18, Z
    1da6:	21 60       	ori	r18, 0x01	; 1
    1da8:	fc 01       	movw	r30, r24
    1daa:	20 83       	st	Z, r18
    1dac:	78 94       	sei
    1dae:	8a 81       	ldd	r24, Y+2	; 0x02
    1db0:	81 30       	cpi	r24, 0x01	; 1
    1db2:	09 f0       	breq	.+2      	; 0x1db6 <dvn_timer_normal_enable+0x94>
    1db4:	55 c0       	rjmp	.+170    	; 0x1e60 <dvn_timer_normal_enable+0x13e>
    1db6:	83 e5       	ldi	r24, 0x53	; 83
    1db8:	90 e0       	ldi	r25, 0x00	; 0
    1dba:	23 e5       	ldi	r18, 0x53	; 83
    1dbc:	30 e0       	ldi	r19, 0x00	; 0
    1dbe:	f9 01       	movw	r30, r18
    1dc0:	20 81       	ld	r18, Z
    1dc2:	22 60       	ori	r18, 0x02	; 2
    1dc4:	fc 01       	movw	r30, r24
    1dc6:	20 83       	st	Z, r18
    1dc8:	82 e5       	ldi	r24, 0x52	; 82
    1dca:	90 e0       	ldi	r25, 0x00	; 0
    1dcc:	fc 01       	movw	r30, r24
    1dce:	10 82       	st	Z, r1
    1dd0:	47 c0       	rjmp	.+142    	; 0x1e60 <dvn_timer_normal_enable+0x13e>
    1dd2:	85 e4       	ldi	r24, 0x45	; 69
    1dd4:	90 e0       	ldi	r25, 0x00	; 0
    1dd6:	25 e4       	ldi	r18, 0x45	; 69
    1dd8:	30 e0       	ldi	r19, 0x00	; 0
    1dda:	f9 01       	movw	r30, r18
    1ddc:	20 81       	ld	r18, Z
    1dde:	27 7f       	andi	r18, 0xF7	; 247
    1de0:	fc 01       	movw	r30, r24
    1de2:	20 83       	st	Z, r18
    1de4:	85 e4       	ldi	r24, 0x45	; 69
    1de6:	90 e0       	ldi	r25, 0x00	; 0
    1de8:	25 e4       	ldi	r18, 0x45	; 69
    1dea:	30 e0       	ldi	r19, 0x00	; 0
    1dec:	f9 01       	movw	r30, r18
    1dee:	20 81       	ld	r18, Z
    1df0:	2f 7b       	andi	r18, 0xBF	; 191
    1df2:	fc 01       	movw	r30, r24
    1df4:	20 83       	st	Z, r18
    1df6:	85 e4       	ldi	r24, 0x45	; 69
    1df8:	90 e0       	ldi	r25, 0x00	; 0
    1dfa:	25 e4       	ldi	r18, 0x45	; 69
    1dfc:	30 e0       	ldi	r19, 0x00	; 0
    1dfe:	f9 01       	movw	r30, r18
    1e00:	20 81       	ld	r18, Z
    1e02:	28 7f       	andi	r18, 0xF8	; 248
    1e04:	fc 01       	movw	r30, r24
    1e06:	20 83       	st	Z, r18
    1e08:	8a 81       	ldd	r24, Y+2	; 0x02
    1e0a:	88 23       	and	r24, r24
    1e0c:	c1 f4       	brne	.+48     	; 0x1e3e <dvn_timer_normal_enable+0x11c>
    1e0e:	85 e4       	ldi	r24, 0x45	; 69
    1e10:	90 e0       	ldi	r25, 0x00	; 0
    1e12:	25 e4       	ldi	r18, 0x45	; 69
    1e14:	30 e0       	ldi	r19, 0x00	; 0
    1e16:	f9 01       	movw	r30, r18
    1e18:	20 81       	ld	r18, Z
    1e1a:	23 60       	ori	r18, 0x03	; 3
    1e1c:	fc 01       	movw	r30, r24
    1e1e:	20 83       	st	Z, r18
    1e20:	84 e4       	ldi	r24, 0x44	; 68
    1e22:	90 e0       	ldi	r25, 0x00	; 0
    1e24:	22 e8       	ldi	r18, 0x82	; 130
    1e26:	fc 01       	movw	r30, r24
    1e28:	20 83       	st	Z, r18
    1e2a:	89 e5       	ldi	r24, 0x59	; 89
    1e2c:	90 e0       	ldi	r25, 0x00	; 0
    1e2e:	29 e5       	ldi	r18, 0x59	; 89
    1e30:	30 e0       	ldi	r19, 0x00	; 0
    1e32:	f9 01       	movw	r30, r18
    1e34:	20 81       	ld	r18, Z
    1e36:	20 64       	ori	r18, 0x40	; 64
    1e38:	fc 01       	movw	r30, r24
    1e3a:	20 83       	st	Z, r18
    1e3c:	78 94       	sei
    1e3e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e40:	81 30       	cpi	r24, 0x01	; 1
    1e42:	81 f4       	brne	.+32     	; 0x1e64 <dvn_timer_normal_enable+0x142>
    1e44:	85 e4       	ldi	r24, 0x45	; 69
    1e46:	90 e0       	ldi	r25, 0x00	; 0
    1e48:	25 e4       	ldi	r18, 0x45	; 69
    1e4a:	30 e0       	ldi	r19, 0x00	; 0
    1e4c:	f9 01       	movw	r30, r18
    1e4e:	20 81       	ld	r18, Z
    1e50:	22 60       	ori	r18, 0x02	; 2
    1e52:	fc 01       	movw	r30, r24
    1e54:	20 83       	st	Z, r18
    1e56:	84 e4       	ldi	r24, 0x44	; 68
    1e58:	90 e0       	ldi	r25, 0x00	; 0
    1e5a:	fc 01       	movw	r30, r24
    1e5c:	10 82       	st	Z, r1
    1e5e:	02 c0       	rjmp	.+4      	; 0x1e64 <dvn_timer_normal_enable+0x142>
    1e60:	00 00       	nop
    1e62:	01 c0       	rjmp	.+2      	; 0x1e66 <dvn_timer_normal_enable+0x144>
    1e64:	00 00       	nop
    1e66:	00 00       	nop
    1e68:	0f 90       	pop	r0
    1e6a:	0f 90       	pop	r0
    1e6c:	df 91       	pop	r29
    1e6e:	cf 91       	pop	r28
    1e70:	08 95       	ret

00001e72 <dvn_timer_normal_disable>:
    1e72:	cf 93       	push	r28
    1e74:	df 93       	push	r29
    1e76:	1f 92       	push	r1
    1e78:	cd b7       	in	r28, 0x3d	; 61
    1e7a:	de b7       	in	r29, 0x3e	; 62
    1e7c:	89 83       	std	Y+1, r24	; 0x01
    1e7e:	89 81       	ldd	r24, Y+1	; 0x01
    1e80:	88 2f       	mov	r24, r24
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	00 97       	sbiw	r24, 0x00	; 0
    1e86:	19 f0       	breq	.+6      	; 0x1e8e <dvn_timer_normal_disable+0x1c>
    1e88:	01 97       	sbiw	r24, 0x01	; 1
    1e8a:	31 f0       	breq	.+12     	; 0x1e98 <dvn_timer_normal_disable+0x26>
    1e8c:	0a c0       	rjmp	.+20     	; 0x1ea2 <dvn_timer_normal_disable+0x30>
    1e8e:	83 e5       	ldi	r24, 0x53	; 83
    1e90:	90 e0       	ldi	r25, 0x00	; 0
    1e92:	fc 01       	movw	r30, r24
    1e94:	10 82       	st	Z, r1
    1e96:	05 c0       	rjmp	.+10     	; 0x1ea2 <dvn_timer_normal_disable+0x30>
    1e98:	85 e4       	ldi	r24, 0x45	; 69
    1e9a:	90 e0       	ldi	r25, 0x00	; 0
    1e9c:	fc 01       	movw	r30, r24
    1e9e:	10 82       	st	Z, r1
    1ea0:	00 00       	nop
    1ea2:	00 00       	nop
    1ea4:	0f 90       	pop	r0
    1ea6:	df 91       	pop	r29
    1ea8:	cf 91       	pop	r28
    1eaa:	08 95       	ret

00001eac <dvn_timer_delay_ms>:
    1eac:	cf 93       	push	r28
    1eae:	df 93       	push	r29
    1eb0:	00 d0       	rcall	.+0      	; 0x1eb2 <dvn_timer_delay_ms+0x6>
    1eb2:	00 d0       	rcall	.+0      	; 0x1eb4 <dvn_timer_delay_ms+0x8>
    1eb4:	1f 92       	push	r1
    1eb6:	cd b7       	in	r28, 0x3d	; 61
    1eb8:	de b7       	in	r29, 0x3e	; 62
    1eba:	89 83       	std	Y+1, r24	; 0x01
    1ebc:	4a 83       	std	Y+2, r20	; 0x02
    1ebe:	5b 83       	std	Y+3, r21	; 0x03
    1ec0:	6c 83       	std	Y+4, r22	; 0x04
    1ec2:	7d 83       	std	Y+5, r23	; 0x05
    1ec4:	89 81       	ldd	r24, Y+1	; 0x01
    1ec6:	88 2f       	mov	r24, r24
    1ec8:	90 e0       	ldi	r25, 0x00	; 0
    1eca:	00 97       	sbiw	r24, 0x00	; 0
    1ecc:	19 f0       	breq	.+6      	; 0x1ed4 <dvn_timer_delay_ms+0x28>
    1ece:	01 97       	sbiw	r24, 0x01	; 1
    1ed0:	19 f1       	breq	.+70     	; 0x1f18 <dvn_timer_delay_ms+0x6c>
    1ed2:	43 c0       	rjmp	.+134    	; 0x1f5a <dvn_timer_delay_ms+0xae>
    1ed4:	60 e0       	ldi	r22, 0x00	; 0
    1ed6:	80 e0       	ldi	r24, 0x00	; 0
    1ed8:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <dvn_timer_normal_enable>
    1edc:	00 00       	nop
    1ede:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <time>
    1ee2:	90 91 e2 00 	lds	r25, 0x00E2	; 0x8000e2 <time+0x1>
    1ee6:	a0 91 e3 00 	lds	r26, 0x00E3	; 0x8000e3 <time+0x2>
    1eea:	b0 91 e4 00 	lds	r27, 0x00E4	; 0x8000e4 <time+0x3>
    1eee:	2a 81       	ldd	r18, Y+2	; 0x02
    1ef0:	3b 81       	ldd	r19, Y+3	; 0x03
    1ef2:	4c 81       	ldd	r20, Y+4	; 0x04
    1ef4:	5d 81       	ldd	r21, Y+5	; 0x05
    1ef6:	82 17       	cp	r24, r18
    1ef8:	93 07       	cpc	r25, r19
    1efa:	a4 07       	cpc	r26, r20
    1efc:	b5 07       	cpc	r27, r21
    1efe:	78 f3       	brcs	.-34     	; 0x1ede <dvn_timer_delay_ms+0x32>
    1f00:	10 92 e1 00 	sts	0x00E1, r1	; 0x8000e1 <time>
    1f04:	10 92 e2 00 	sts	0x00E2, r1	; 0x8000e2 <time+0x1>
    1f08:	10 92 e3 00 	sts	0x00E3, r1	; 0x8000e3 <time+0x2>
    1f0c:	10 92 e4 00 	sts	0x00E4, r1	; 0x8000e4 <time+0x3>
    1f10:	80 e0       	ldi	r24, 0x00	; 0
    1f12:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <dvn_timer_normal_disable>
    1f16:	22 c0       	rjmp	.+68     	; 0x1f5c <dvn_timer_delay_ms+0xb0>
    1f18:	60 e0       	ldi	r22, 0x00	; 0
    1f1a:	81 e0       	ldi	r24, 0x01	; 1
    1f1c:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <dvn_timer_normal_enable>
    1f20:	00 00       	nop
    1f22:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <time>
    1f26:	90 91 e2 00 	lds	r25, 0x00E2	; 0x8000e2 <time+0x1>
    1f2a:	a0 91 e3 00 	lds	r26, 0x00E3	; 0x8000e3 <time+0x2>
    1f2e:	b0 91 e4 00 	lds	r27, 0x00E4	; 0x8000e4 <time+0x3>
    1f32:	2a 81       	ldd	r18, Y+2	; 0x02
    1f34:	3b 81       	ldd	r19, Y+3	; 0x03
    1f36:	4c 81       	ldd	r20, Y+4	; 0x04
    1f38:	5d 81       	ldd	r21, Y+5	; 0x05
    1f3a:	82 17       	cp	r24, r18
    1f3c:	93 07       	cpc	r25, r19
    1f3e:	a4 07       	cpc	r26, r20
    1f40:	b5 07       	cpc	r27, r21
    1f42:	78 f3       	brcs	.-34     	; 0x1f22 <dvn_timer_delay_ms+0x76>
    1f44:	10 92 e1 00 	sts	0x00E1, r1	; 0x8000e1 <time>
    1f48:	10 92 e2 00 	sts	0x00E2, r1	; 0x8000e2 <time+0x1>
    1f4c:	10 92 e3 00 	sts	0x00E3, r1	; 0x8000e3 <time+0x2>
    1f50:	10 92 e4 00 	sts	0x00E4, r1	; 0x8000e4 <time+0x3>
    1f54:	81 e0       	ldi	r24, 0x01	; 1
    1f56:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <dvn_timer_normal_disable>
    1f5a:	00 00       	nop
    1f5c:	00 00       	nop
    1f5e:	0f 90       	pop	r0
    1f60:	0f 90       	pop	r0
    1f62:	0f 90       	pop	r0
    1f64:	0f 90       	pop	r0
    1f66:	0f 90       	pop	r0
    1f68:	df 91       	pop	r29
    1f6a:	cf 91       	pop	r28
    1f6c:	08 95       	ret

00001f6e <dvn_timer_start_count>:
    1f6e:	cf 93       	push	r28
    1f70:	df 93       	push	r29
    1f72:	cd b7       	in	r28, 0x3d	; 61
    1f74:	de b7       	in	r29, 0x3e	; 62
    1f76:	8f e4       	ldi	r24, 0x4F	; 79
    1f78:	90 e0       	ldi	r25, 0x00	; 0
    1f7a:	2f e4       	ldi	r18, 0x4F	; 79
    1f7c:	30 e0       	ldi	r19, 0x00	; 0
    1f7e:	f9 01       	movw	r30, r18
    1f80:	20 81       	ld	r18, Z
    1f82:	20 68       	ori	r18, 0x80	; 128
    1f84:	fc 01       	movw	r30, r24
    1f86:	20 83       	st	Z, r18
    1f88:	8f e4       	ldi	r24, 0x4F	; 79
    1f8a:	90 e0       	ldi	r25, 0x00	; 0
    1f8c:	2f e4       	ldi	r18, 0x4F	; 79
    1f8e:	30 e0       	ldi	r19, 0x00	; 0
    1f90:	f9 01       	movw	r30, r18
    1f92:	20 81       	ld	r18, Z
    1f94:	20 62       	ori	r18, 0x20	; 32
    1f96:	fc 01       	movw	r30, r24
    1f98:	20 83       	st	Z, r18
    1f9a:	8f e4       	ldi	r24, 0x4F	; 79
    1f9c:	90 e0       	ldi	r25, 0x00	; 0
    1f9e:	2f e4       	ldi	r18, 0x4F	; 79
    1fa0:	30 e0       	ldi	r19, 0x00	; 0
    1fa2:	f9 01       	movw	r30, r18
    1fa4:	20 81       	ld	r18, Z
    1fa6:	2f 7b       	andi	r18, 0xBF	; 191
    1fa8:	fc 01       	movw	r30, r24
    1faa:	20 83       	st	Z, r18
    1fac:	8f e4       	ldi	r24, 0x4F	; 79
    1fae:	90 e0       	ldi	r25, 0x00	; 0
    1fb0:	2f e4       	ldi	r18, 0x4F	; 79
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	f9 01       	movw	r30, r18
    1fb6:	20 81       	ld	r18, Z
    1fb8:	2f 7e       	andi	r18, 0xEF	; 239
    1fba:	fc 01       	movw	r30, r24
    1fbc:	20 83       	st	Z, r18
    1fbe:	8e e4       	ldi	r24, 0x4E	; 78
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	2e e4       	ldi	r18, 0x4E	; 78
    1fc4:	30 e0       	ldi	r19, 0x00	; 0
    1fc6:	f9 01       	movw	r30, r18
    1fc8:	20 81       	ld	r18, Z
    1fca:	2f 7e       	andi	r18, 0xEF	; 239
    1fcc:	fc 01       	movw	r30, r24
    1fce:	20 83       	st	Z, r18
    1fd0:	8e e4       	ldi	r24, 0x4E	; 78
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	2e e4       	ldi	r18, 0x4E	; 78
    1fd6:	30 e0       	ldi	r19, 0x00	; 0
    1fd8:	f9 01       	movw	r30, r18
    1fda:	20 81       	ld	r18, Z
    1fdc:	27 7f       	andi	r18, 0xF7	; 247
    1fde:	fc 01       	movw	r30, r24
    1fe0:	20 83       	st	Z, r18
    1fe2:	8f e4       	ldi	r24, 0x4F	; 79
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	2f e4       	ldi	r18, 0x4F	; 79
    1fe8:	30 e0       	ldi	r19, 0x00	; 0
    1fea:	f9 01       	movw	r30, r18
    1fec:	20 81       	ld	r18, Z
    1fee:	2d 7f       	andi	r18, 0xFD	; 253
    1ff0:	fc 01       	movw	r30, r24
    1ff2:	20 83       	st	Z, r18
    1ff4:	8f e4       	ldi	r24, 0x4F	; 79
    1ff6:	90 e0       	ldi	r25, 0x00	; 0
    1ff8:	2f e4       	ldi	r18, 0x4F	; 79
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	f9 01       	movw	r30, r18
    1ffe:	20 81       	ld	r18, Z
    2000:	2e 7f       	andi	r18, 0xFE	; 254
    2002:	fc 01       	movw	r30, r24
    2004:	20 83       	st	Z, r18
    2006:	8e e4       	ldi	r24, 0x4E	; 78
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	2e e4       	ldi	r18, 0x4E	; 78
    200c:	30 e0       	ldi	r19, 0x00	; 0
    200e:	f9 01       	movw	r30, r18
    2010:	20 81       	ld	r18, Z
    2012:	2e 7f       	andi	r18, 0xFE	; 254
    2014:	fc 01       	movw	r30, r24
    2016:	20 83       	st	Z, r18
    2018:	8e e4       	ldi	r24, 0x4E	; 78
    201a:	90 e0       	ldi	r25, 0x00	; 0
    201c:	2e e4       	ldi	r18, 0x4E	; 78
    201e:	30 e0       	ldi	r19, 0x00	; 0
    2020:	f9 01       	movw	r30, r18
    2022:	20 81       	ld	r18, Z
    2024:	22 60       	ori	r18, 0x02	; 2
    2026:	fc 01       	movw	r30, r24
    2028:	20 83       	st	Z, r18
    202a:	8e e4       	ldi	r24, 0x4E	; 78
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	2e e4       	ldi	r18, 0x4E	; 78
    2030:	30 e0       	ldi	r19, 0x00	; 0
    2032:	f9 01       	movw	r30, r18
    2034:	20 81       	ld	r18, Z
    2036:	2b 7f       	andi	r18, 0xFB	; 251
    2038:	fc 01       	movw	r30, r24
    203a:	20 83       	st	Z, r18
    203c:	8c e4       	ldi	r24, 0x4C	; 76
    203e:	90 e0       	ldi	r25, 0x00	; 0
    2040:	fc 01       	movw	r30, r24
    2042:	11 82       	std	Z+1, r1	; 0x01
    2044:	10 82       	st	Z, r1
    2046:	00 00       	nop
    2048:	df 91       	pop	r29
    204a:	cf 91       	pop	r28
    204c:	08 95       	ret

0000204e <dvn_timer_stop_count>:
    204e:	cf 93       	push	r28
    2050:	df 93       	push	r29
    2052:	cd b7       	in	r28, 0x3d	; 61
    2054:	de b7       	in	r29, 0x3e	; 62
    2056:	8e e4       	ldi	r24, 0x4E	; 78
    2058:	90 e0       	ldi	r25, 0x00	; 0
    205a:	2e e4       	ldi	r18, 0x4E	; 78
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	f9 01       	movw	r30, r18
    2060:	20 81       	ld	r18, Z
    2062:	2e 7f       	andi	r18, 0xFE	; 254
    2064:	fc 01       	movw	r30, r24
    2066:	20 83       	st	Z, r18
    2068:	8e e4       	ldi	r24, 0x4E	; 78
    206a:	90 e0       	ldi	r25, 0x00	; 0
    206c:	2e e4       	ldi	r18, 0x4E	; 78
    206e:	30 e0       	ldi	r19, 0x00	; 0
    2070:	f9 01       	movw	r30, r18
    2072:	20 81       	ld	r18, Z
    2074:	2d 7f       	andi	r18, 0xFD	; 253
    2076:	fc 01       	movw	r30, r24
    2078:	20 83       	st	Z, r18
    207a:	8e e4       	ldi	r24, 0x4E	; 78
    207c:	90 e0       	ldi	r25, 0x00	; 0
    207e:	2e e4       	ldi	r18, 0x4E	; 78
    2080:	30 e0       	ldi	r19, 0x00	; 0
    2082:	f9 01       	movw	r30, r18
    2084:	20 81       	ld	r18, Z
    2086:	2b 7f       	andi	r18, 0xFB	; 251
    2088:	fc 01       	movw	r30, r24
    208a:	20 83       	st	Z, r18
    208c:	8c e4       	ldi	r24, 0x4C	; 76
    208e:	90 e0       	ldi	r25, 0x00	; 0
    2090:	fc 01       	movw	r30, r24
    2092:	11 82       	std	Z+1, r1	; 0x01
    2094:	10 82       	st	Z, r1
    2096:	00 00       	nop
    2098:	df 91       	pop	r29
    209a:	cf 91       	pop	r28
    209c:	08 95       	ret

0000209e <dvn_timer_get_count>:
    209e:	cf 93       	push	r28
    20a0:	df 93       	push	r29
    20a2:	cd b7       	in	r28, 0x3d	; 61
    20a4:	de b7       	in	r29, 0x3e	; 62
    20a6:	8c e4       	ldi	r24, 0x4C	; 76
    20a8:	90 e0       	ldi	r25, 0x00	; 0
    20aa:	fc 01       	movw	r30, r24
    20ac:	80 81       	ld	r24, Z
    20ae:	91 81       	ldd	r25, Z+1	; 0x01
    20b0:	df 91       	pop	r29
    20b2:	cf 91       	pop	r28
    20b4:	08 95       	ret

000020b6 <sr04_init>:
    20b6:	cf 93       	push	r28
    20b8:	df 93       	push	r29
    20ba:	cd b7       	in	r28, 0x3d	; 61
    20bc:	de b7       	in	r29, 0x3e	; 62
    20be:	60 e0       	ldi	r22, 0x00	; 0
    20c0:	80 e0       	ldi	r24, 0x00	; 0
    20c2:	0e 94 a8 09 	call	0x1350	; 0x1350 <dvn_gpio_output>
    20c6:	61 e0       	ldi	r22, 0x01	; 1
    20c8:	80 e0       	ldi	r24, 0x00	; 0
    20ca:	0e 94 1c 0a 	call	0x1438	; 0x1438 <dvn_gpio_input>
    20ce:	00 00       	nop
    20d0:	df 91       	pop	r29
    20d2:	cf 91       	pop	r28
    20d4:	08 95       	ret

000020d6 <sr04_handle>:
    20d6:	cf 93       	push	r28
    20d8:	df 93       	push	r29
    20da:	cd b7       	in	r28, 0x3d	; 61
    20dc:	de b7       	in	r29, 0x3e	; 62
    20de:	40 e0       	ldi	r20, 0x00	; 0
    20e0:	60 e0       	ldi	r22, 0x00	; 0
    20e2:	80 e0       	ldi	r24, 0x00	; 0
    20e4:	0e 94 94 0a 	call	0x1528	; 0x1528 <dvn_gpio_write_pin>
    20e8:	41 e0       	ldi	r20, 0x01	; 1
    20ea:	60 e0       	ldi	r22, 0x00	; 0
    20ec:	80 e0       	ldi	r24, 0x00	; 0
    20ee:	0e 94 94 0a 	call	0x1528	; 0x1528 <dvn_gpio_write_pin>
    20f2:	41 e0       	ldi	r20, 0x01	; 1
    20f4:	50 e0       	ldi	r21, 0x00	; 0
    20f6:	60 e0       	ldi	r22, 0x00	; 0
    20f8:	70 e0       	ldi	r23, 0x00	; 0
    20fa:	80 e0       	ldi	r24, 0x00	; 0
    20fc:	0e 94 56 0f 	call	0x1eac	; 0x1eac <dvn_timer_delay_ms>
    2100:	40 e0       	ldi	r20, 0x00	; 0
    2102:	60 e0       	ldi	r22, 0x00	; 0
    2104:	80 e0       	ldi	r24, 0x00	; 0
    2106:	0e 94 94 0a 	call	0x1528	; 0x1528 <dvn_gpio_write_pin>
    210a:	00 00       	nop
    210c:	61 e0       	ldi	r22, 0x01	; 1
    210e:	80 e0       	ldi	r24, 0x00	; 0
    2110:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <dvn_gpio_read_pin>
    2114:	88 23       	and	r24, r24
    2116:	d1 f3       	breq	.-12     	; 0x210c <sr04_handle+0x36>
    2118:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <dvn_timer_start_count>
    211c:	00 00       	nop
    211e:	61 e0       	ldi	r22, 0x01	; 1
    2120:	80 e0       	ldi	r24, 0x00	; 0
    2122:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <dvn_gpio_read_pin>
    2126:	81 30       	cpi	r24, 0x01	; 1
    2128:	d1 f3       	breq	.-12     	; 0x211e <sr04_handle+0x48>
    212a:	0e 94 4f 10 	call	0x209e	; 0x209e <dvn_timer_get_count>
    212e:	cc 01       	movw	r24, r24
    2130:	a0 e0       	ldi	r26, 0x00	; 0
    2132:	b0 e0       	ldi	r27, 0x00	; 0
    2134:	bc 01       	movw	r22, r24
    2136:	cd 01       	movw	r24, r26
    2138:	0e 94 99 13 	call	0x2732	; 0x2732 <__floatunsisf>
    213c:	dc 01       	movw	r26, r24
    213e:	cb 01       	movw	r24, r22
    2140:	26 e9       	ldi	r18, 0x96	; 150
    2142:	33 e4       	ldi	r19, 0x43	; 67
    2144:	4b e8       	ldi	r20, 0x8B	; 139
    2146:	5c e3       	ldi	r21, 0x3C	; 60
    2148:	bc 01       	movw	r22, r24
    214a:	cd 01       	movw	r24, r26
    214c:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__mulsf3>
    2150:	dc 01       	movw	r26, r24
    2152:	cb 01       	movw	r24, r22
    2154:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <kc>
    2158:	90 93 ef 00 	sts	0x00EF, r25	; 0x8000ef <kc+0x1>
    215c:	a0 93 f0 00 	sts	0x00F0, r26	; 0x8000f0 <kc+0x2>
    2160:	b0 93 f1 00 	sts	0x00F1, r27	; 0x8000f1 <kc+0x3>
    2164:	0e 94 27 10 	call	0x204e	; 0x204e <dvn_timer_stop_count>
    2168:	00 00       	nop
    216a:	df 91       	pop	r29
    216c:	cf 91       	pop	r28
    216e:	08 95       	ret

00002170 <__iCliRetVal>:
/**
 * calibration step 2 of 2, set the scale
 */
void hx711_calibrate2setscale(double weight) {
	hx711_setscale((hx711_readaverage(HX711_CALIBRATIONREADTIMES)-hx711_offset)/weight);
}
    2170:	cf 93       	push	r28
    2172:	df 93       	push	r29
    2174:	cd b7       	in	r28, 0x3d	; 61
    2176:	de b7       	in	r29, 0x3e	; 62
    2178:	f8 94       	cli
    217a:	81 e0       	ldi	r24, 0x01	; 1
    217c:	df 91       	pop	r29
    217e:	cf 91       	pop	r28
    2180:	08 95       	ret

00002182 <__iSeiParam>:
    2182:	cf 93       	push	r28
    2184:	df 93       	push	r29
    2186:	00 d0       	rcall	.+0      	; 0x2188 <__iSeiParam+0x6>
    2188:	cd b7       	in	r28, 0x3d	; 61
    218a:	de b7       	in	r29, 0x3e	; 62
    218c:	9a 83       	std	Y+2, r25	; 0x02
    218e:	89 83       	std	Y+1, r24	; 0x01
    2190:	78 94       	sei
    2192:	00 00       	nop
    2194:	0f 90       	pop	r0
    2196:	0f 90       	pop	r0
    2198:	df 91       	pop	r29
    219a:	cf 91       	pop	r28
    219c:	08 95       	ret

0000219e <hx711_read>:
    219e:	cf 93       	push	r28
    21a0:	df 93       	push	r29
    21a2:	cd b7       	in	r28, 0x3d	; 61
    21a4:	de b7       	in	r29, 0x3e	; 62
    21a6:	27 97       	sbiw	r28, 0x07	; 7
    21a8:	0f b6       	in	r0, 0x3f	; 63
    21aa:	f8 94       	cli
    21ac:	de bf       	out	0x3e, r29	; 62
    21ae:	0f be       	out	0x3f, r0	; 63
    21b0:	cd bf       	out	0x3d, r28	; 61
    21b2:	19 82       	std	Y+1, r1	; 0x01
    21b4:	1a 82       	std	Y+2, r1	; 0x02
    21b6:	1b 82       	std	Y+3, r1	; 0x03
    21b8:	1c 82       	std	Y+4, r1	; 0x04
    21ba:	1d 82       	std	Y+5, r1	; 0x05
    21bc:	00 00       	nop
    21be:	86 e3       	ldi	r24, 0x36	; 54
    21c0:	90 e0       	ldi	r25, 0x00	; 0
    21c2:	fc 01       	movw	r30, r24
    21c4:	80 81       	ld	r24, Z
    21c6:	88 2f       	mov	r24, r24
    21c8:	90 e0       	ldi	r25, 0x00	; 0
    21ca:	81 70       	andi	r24, 0x01	; 1
    21cc:	99 27       	eor	r25, r25
    21ce:	89 2b       	or	r24, r25
    21d0:	b1 f7       	brne	.-20     	; 0x21be <hx711_read+0x20>
    21d2:	1f 82       	std	Y+7, r1	; 0x07
    21d4:	0e 94 b8 10 	call	0x2170	; 0x2170 <__iCliRetVal>
    21d8:	8e 83       	std	Y+6, r24	; 0x06
    21da:	64 c0       	rjmp	.+200    	; 0x22a4 <hx711_read+0x106>
    21dc:	1d 82       	std	Y+5, r1	; 0x05
    21de:	38 c0       	rjmp	.+112    	; 0x2250 <hx711_read+0xb2>
    21e0:	88 e3       	ldi	r24, 0x38	; 56
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	28 e3       	ldi	r18, 0x38	; 56
    21e6:	30 e0       	ldi	r19, 0x00	; 0
    21e8:	f9 01       	movw	r30, r18
    21ea:	20 81       	ld	r18, Z
    21ec:	22 60       	ori	r18, 0x02	; 2
    21ee:	fc 01       	movw	r30, r24
    21f0:	20 83       	st	Z, r18
    21f2:	00 00       	nop
    21f4:	89 81       	ldd	r24, Y+1	; 0x01
    21f6:	9a 81       	ldd	r25, Y+2	; 0x02
    21f8:	ab 81       	ldd	r26, Y+3	; 0x03
    21fa:	bc 81       	ldd	r27, Y+4	; 0x04
    21fc:	88 0f       	add	r24, r24
    21fe:	99 1f       	adc	r25, r25
    2200:	aa 1f       	adc	r26, r26
    2202:	bb 1f       	adc	r27, r27
    2204:	89 83       	std	Y+1, r24	; 0x01
    2206:	9a 83       	std	Y+2, r25	; 0x02
    2208:	ab 83       	std	Y+3, r26	; 0x03
    220a:	bc 83       	std	Y+4, r27	; 0x04
    220c:	88 e3       	ldi	r24, 0x38	; 56
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	28 e3       	ldi	r18, 0x38	; 56
    2212:	30 e0       	ldi	r19, 0x00	; 0
    2214:	f9 01       	movw	r30, r18
    2216:	20 81       	ld	r18, Z
    2218:	2d 7f       	andi	r18, 0xFD	; 253
    221a:	fc 01       	movw	r30, r24
    221c:	20 83       	st	Z, r18
    221e:	00 00       	nop
    2220:	86 e3       	ldi	r24, 0x36	; 54
    2222:	90 e0       	ldi	r25, 0x00	; 0
    2224:	fc 01       	movw	r30, r24
    2226:	80 81       	ld	r24, Z
    2228:	88 2f       	mov	r24, r24
    222a:	90 e0       	ldi	r25, 0x00	; 0
    222c:	81 70       	andi	r24, 0x01	; 1
    222e:	99 27       	eor	r25, r25
    2230:	89 2b       	or	r24, r25
    2232:	59 f0       	breq	.+22     	; 0x224a <hx711_read+0xac>
    2234:	89 81       	ldd	r24, Y+1	; 0x01
    2236:	9a 81       	ldd	r25, Y+2	; 0x02
    2238:	ab 81       	ldd	r26, Y+3	; 0x03
    223a:	bc 81       	ldd	r27, Y+4	; 0x04
    223c:	01 96       	adiw	r24, 0x01	; 1
    223e:	a1 1d       	adc	r26, r1
    2240:	b1 1d       	adc	r27, r1
    2242:	89 83       	std	Y+1, r24	; 0x01
    2244:	9a 83       	std	Y+2, r25	; 0x02
    2246:	ab 83       	std	Y+3, r26	; 0x03
    2248:	bc 83       	std	Y+4, r27	; 0x04
    224a:	8d 81       	ldd	r24, Y+5	; 0x05
    224c:	8f 5f       	subi	r24, 0xFF	; 255
    224e:	8d 83       	std	Y+5, r24	; 0x05
    2250:	8d 81       	ldd	r24, Y+5	; 0x05
    2252:	88 31       	cpi	r24, 0x18	; 24
    2254:	28 f2       	brcs	.-118    	; 0x21e0 <hx711_read+0x42>
    2256:	89 81       	ldd	r24, Y+1	; 0x01
    2258:	9a 81       	ldd	r25, Y+2	; 0x02
    225a:	ab 81       	ldd	r26, Y+3	; 0x03
    225c:	bc 81       	ldd	r27, Y+4	; 0x04
    225e:	a0 58       	subi	r26, 0x80	; 128
    2260:	89 83       	std	Y+1, r24	; 0x01
    2262:	9a 83       	std	Y+2, r25	; 0x02
    2264:	ab 83       	std	Y+3, r26	; 0x03
    2266:	bc 83       	std	Y+4, r27	; 0x04
    2268:	1d 82       	std	Y+5, r1	; 0x05
    226a:	16 c0       	rjmp	.+44     	; 0x2298 <hx711_read+0xfa>
    226c:	88 e3       	ldi	r24, 0x38	; 56
    226e:	90 e0       	ldi	r25, 0x00	; 0
    2270:	28 e3       	ldi	r18, 0x38	; 56
    2272:	30 e0       	ldi	r19, 0x00	; 0
    2274:	f9 01       	movw	r30, r18
    2276:	20 81       	ld	r18, Z
    2278:	22 60       	ori	r18, 0x02	; 2
    227a:	fc 01       	movw	r30, r24
    227c:	20 83       	st	Z, r18
    227e:	00 00       	nop
    2280:	88 e3       	ldi	r24, 0x38	; 56
    2282:	90 e0       	ldi	r25, 0x00	; 0
    2284:	28 e3       	ldi	r18, 0x38	; 56
    2286:	30 e0       	ldi	r19, 0x00	; 0
    2288:	f9 01       	movw	r30, r18
    228a:	20 81       	ld	r18, Z
    228c:	2d 7f       	andi	r18, 0xFD	; 253
    228e:	fc 01       	movw	r30, r24
    2290:	20 83       	st	Z, r18
    2292:	8d 81       	ldd	r24, Y+5	; 0x05
    2294:	8f 5f       	subi	r24, 0xFF	; 255
    2296:	8d 83       	std	Y+5, r24	; 0x05
    2298:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <hx711_gain>
    229c:	9d 81       	ldd	r25, Y+5	; 0x05
    229e:	98 17       	cp	r25, r24
    22a0:	28 f3       	brcs	.-54     	; 0x226c <hx711_read+0xce>
    22a2:	1e 82       	std	Y+6, r1	; 0x06
    22a4:	8e 81       	ldd	r24, Y+6	; 0x06
    22a6:	88 23       	and	r24, r24
    22a8:	09 f0       	breq	.+2      	; 0x22ac <hx711_read+0x10e>
    22aa:	98 cf       	rjmp	.-208    	; 0x21dc <hx711_read+0x3e>
    22ac:	ce 01       	movw	r24, r28
    22ae:	07 96       	adiw	r24, 0x07	; 7
    22b0:	0e 94 c1 10 	call	0x2182	; 0x2182 <__iSeiParam>
    22b4:	89 81       	ldd	r24, Y+1	; 0x01
    22b6:	9a 81       	ldd	r25, Y+2	; 0x02
    22b8:	ab 81       	ldd	r26, Y+3	; 0x03
    22ba:	bc 81       	ldd	r27, Y+4	; 0x04
    22bc:	bc 01       	movw	r22, r24
    22be:	cd 01       	movw	r24, r26
    22c0:	27 96       	adiw	r28, 0x07	; 7
    22c2:	0f b6       	in	r0, 0x3f	; 63
    22c4:	f8 94       	cli
    22c6:	de bf       	out	0x3e, r29	; 62
    22c8:	0f be       	out	0x3f, r0	; 63
    22ca:	cd bf       	out	0x3d, r28	; 61
    22cc:	df 91       	pop	r29
    22ce:	cf 91       	pop	r28
    22d0:	08 95       	ret

000022d2 <hx711_readwithtare>:
    22d2:	cf 92       	push	r12
    22d4:	df 92       	push	r13
    22d6:	ef 92       	push	r14
    22d8:	ff 92       	push	r15
    22da:	cf 93       	push	r28
    22dc:	df 93       	push	r29
    22de:	cd b7       	in	r28, 0x3d	; 61
    22e0:	de b7       	in	r29, 0x3e	; 62
    22e2:	0e 94 cf 10 	call	0x219e	; 0x219e <hx711_read>
    22e6:	dc 01       	movw	r26, r24
    22e8:	cb 01       	movw	r24, r22
    22ea:	bc 01       	movw	r22, r24
    22ec:	cd 01       	movw	r24, r26
    22ee:	0e 94 9b 13 	call	0x2736	; 0x2736 <__floatsisf>
    22f2:	6b 01       	movw	r12, r22
    22f4:	7c 01       	movw	r14, r24
    22f6:	80 91 ea 00 	lds	r24, 0x00EA	; 0x8000ea <hx711_offset>
    22fa:	90 91 eb 00 	lds	r25, 0x00EB	; 0x8000eb <hx711_offset+0x1>
    22fe:	a0 91 ec 00 	lds	r26, 0x00EC	; 0x8000ec <hx711_offset+0x2>
    2302:	b0 91 ed 00 	lds	r27, 0x00ED	; 0x8000ed <hx711_offset+0x3>
    2306:	bc 01       	movw	r22, r24
    2308:	cd 01       	movw	r24, r26
    230a:	0e 94 9b 13 	call	0x2736	; 0x2736 <__floatsisf>
    230e:	dc 01       	movw	r26, r24
    2310:	cb 01       	movw	r24, r22
    2312:	9c 01       	movw	r18, r24
    2314:	ad 01       	movw	r20, r26
    2316:	c7 01       	movw	r24, r14
    2318:	b6 01       	movw	r22, r12
    231a:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__subsf3>
    231e:	dc 01       	movw	r26, r24
    2320:	cb 01       	movw	r24, r22
    2322:	bc 01       	movw	r22, r24
    2324:	cd 01       	movw	r24, r26
    2326:	df 91       	pop	r29
    2328:	cf 91       	pop	r28
    232a:	ff 90       	pop	r15
    232c:	ef 90       	pop	r14
    232e:	df 90       	pop	r13
    2330:	cf 90       	pop	r12
    2332:	08 95       	ret

00002334 <hx711_getweight>:
    2334:	ef 92       	push	r14
    2336:	ff 92       	push	r15
    2338:	0f 93       	push	r16
    233a:	1f 93       	push	r17
    233c:	cf 93       	push	r28
    233e:	df 93       	push	r29
    2340:	cd b7       	in	r28, 0x3d	; 61
    2342:	de b7       	in	r29, 0x3e	; 62
    2344:	0e 94 69 11 	call	0x22d2	; 0x22d2 <hx711_readwithtare>
    2348:	7b 01       	movw	r14, r22
    234a:	8c 01       	movw	r16, r24
    234c:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <hx711_scale>
    2350:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <hx711_scale+0x1>
    2354:	a0 91 e8 00 	lds	r26, 0x00E8	; 0x8000e8 <hx711_scale+0x2>
    2358:	b0 91 e9 00 	lds	r27, 0x00E9	; 0x8000e9 <hx711_scale+0x3>
    235c:	9c 01       	movw	r18, r24
    235e:	ad 01       	movw	r20, r26
    2360:	c8 01       	movw	r24, r16
    2362:	b7 01       	movw	r22, r14
    2364:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divsf3>
    2368:	dc 01       	movw	r26, r24
    236a:	cb 01       	movw	r24, r22
    236c:	bc 01       	movw	r22, r24
    236e:	cd 01       	movw	r24, r26
    2370:	df 91       	pop	r29
    2372:	cf 91       	pop	r28
    2374:	1f 91       	pop	r17
    2376:	0f 91       	pop	r16
    2378:	ff 90       	pop	r15
    237a:	ef 90       	pop	r14
    237c:	08 95       	ret

0000237e <hx711_setgain>:
    237e:	cf 93       	push	r28
    2380:	df 93       	push	r29
    2382:	00 d0       	rcall	.+0      	; 0x2384 <hx711_setgain+0x6>
    2384:	cd b7       	in	r28, 0x3d	; 61
    2386:	de b7       	in	r29, 0x3e	; 62
    2388:	9a 83       	std	Y+2, r25	; 0x02
    238a:	89 83       	std	Y+1, r24	; 0x01
    238c:	89 81       	ldd	r24, Y+1	; 0x01
    238e:	9a 81       	ldd	r25, Y+2	; 0x02
    2390:	01 97       	sbiw	r24, 0x01	; 1
    2392:	21 f4       	brne	.+8      	; 0x239c <hx711_setgain+0x1e>
    2394:	81 e0       	ldi	r24, 0x01	; 1
    2396:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <hx711_gain>
    239a:	13 c0       	rjmp	.+38     	; 0x23c2 <hx711_setgain+0x44>
    239c:	89 81       	ldd	r24, Y+1	; 0x01
    239e:	9a 81       	ldd	r25, Y+2	; 0x02
    23a0:	03 97       	sbiw	r24, 0x03	; 3
    23a2:	21 f4       	brne	.+8      	; 0x23ac <hx711_setgain+0x2e>
    23a4:	83 e0       	ldi	r24, 0x03	; 3
    23a6:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <hx711_gain>
    23aa:	0b c0       	rjmp	.+22     	; 0x23c2 <hx711_setgain+0x44>
    23ac:	89 81       	ldd	r24, Y+1	; 0x01
    23ae:	9a 81       	ldd	r25, Y+2	; 0x02
    23b0:	02 97       	sbiw	r24, 0x02	; 2
    23b2:	21 f4       	brne	.+8      	; 0x23bc <hx711_setgain+0x3e>
    23b4:	82 e0       	ldi	r24, 0x02	; 2
    23b6:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <hx711_gain>
    23ba:	03 c0       	rjmp	.+6      	; 0x23c2 <hx711_setgain+0x44>
    23bc:	81 e0       	ldi	r24, 0x01	; 1
    23be:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <hx711_gain>
    23c2:	88 e3       	ldi	r24, 0x38	; 56
    23c4:	90 e0       	ldi	r25, 0x00	; 0
    23c6:	28 e3       	ldi	r18, 0x38	; 56
    23c8:	30 e0       	ldi	r19, 0x00	; 0
    23ca:	f9 01       	movw	r30, r18
    23cc:	20 81       	ld	r18, Z
    23ce:	2d 7f       	andi	r18, 0xFD	; 253
    23d0:	fc 01       	movw	r30, r24
    23d2:	20 83       	st	Z, r18
    23d4:	0e 94 cf 10 	call	0x219e	; 0x219e <hx711_read>
    23d8:	00 00       	nop
    23da:	0f 90       	pop	r0
    23dc:	0f 90       	pop	r0
    23de:	df 91       	pop	r29
    23e0:	cf 91       	pop	r28
    23e2:	08 95       	ret

000023e4 <hx711_setscale>:
    23e4:	cf 93       	push	r28
    23e6:	df 93       	push	r29
    23e8:	00 d0       	rcall	.+0      	; 0x23ea <hx711_setscale+0x6>
    23ea:	00 d0       	rcall	.+0      	; 0x23ec <hx711_setscale+0x8>
    23ec:	cd b7       	in	r28, 0x3d	; 61
    23ee:	de b7       	in	r29, 0x3e	; 62
    23f0:	69 83       	std	Y+1, r22	; 0x01
    23f2:	7a 83       	std	Y+2, r23	; 0x02
    23f4:	8b 83       	std	Y+3, r24	; 0x03
    23f6:	9c 83       	std	Y+4, r25	; 0x04
    23f8:	89 81       	ldd	r24, Y+1	; 0x01
    23fa:	9a 81       	ldd	r25, Y+2	; 0x02
    23fc:	ab 81       	ldd	r26, Y+3	; 0x03
    23fe:	bc 81       	ldd	r27, Y+4	; 0x04
    2400:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <hx711_scale>
    2404:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <hx711_scale+0x1>
    2408:	a0 93 e8 00 	sts	0x00E8, r26	; 0x8000e8 <hx711_scale+0x2>
    240c:	b0 93 e9 00 	sts	0x00E9, r27	; 0x8000e9 <hx711_scale+0x3>
    2410:	00 00       	nop
    2412:	0f 90       	pop	r0
    2414:	0f 90       	pop	r0
    2416:	0f 90       	pop	r0
    2418:	0f 90       	pop	r0
    241a:	df 91       	pop	r29
    241c:	cf 91       	pop	r28
    241e:	08 95       	ret

00002420 <hx711_setoffset>:
    2420:	cf 93       	push	r28
    2422:	df 93       	push	r29
    2424:	00 d0       	rcall	.+0      	; 0x2426 <hx711_setoffset+0x6>
    2426:	00 d0       	rcall	.+0      	; 0x2428 <hx711_setoffset+0x8>
    2428:	cd b7       	in	r28, 0x3d	; 61
    242a:	de b7       	in	r29, 0x3e	; 62
    242c:	69 83       	std	Y+1, r22	; 0x01
    242e:	7a 83       	std	Y+2, r23	; 0x02
    2430:	8b 83       	std	Y+3, r24	; 0x03
    2432:	9c 83       	std	Y+4, r25	; 0x04
    2434:	89 81       	ldd	r24, Y+1	; 0x01
    2436:	9a 81       	ldd	r25, Y+2	; 0x02
    2438:	ab 81       	ldd	r26, Y+3	; 0x03
    243a:	bc 81       	ldd	r27, Y+4	; 0x04
    243c:	80 93 ea 00 	sts	0x00EA, r24	; 0x8000ea <hx711_offset>
    2440:	90 93 eb 00 	sts	0x00EB, r25	; 0x8000eb <hx711_offset+0x1>
    2444:	a0 93 ec 00 	sts	0x00EC, r26	; 0x8000ec <hx711_offset+0x2>
    2448:	b0 93 ed 00 	sts	0x00ED, r27	; 0x8000ed <hx711_offset+0x3>
    244c:	00 00       	nop
    244e:	0f 90       	pop	r0
    2450:	0f 90       	pop	r0
    2452:	0f 90       	pop	r0
    2454:	0f 90       	pop	r0
    2456:	df 91       	pop	r29
    2458:	cf 91       	pop	r28
    245a:	08 95       	ret

0000245c <hx711_init>:

/**
 * initialize chip
 */
void hx711_init(uint8_t gain, double scale, int32_t offset) {
    245c:	0f 93       	push	r16
    245e:	1f 93       	push	r17
    2460:	cf 93       	push	r28
    2462:	df 93       	push	r29
    2464:	cd b7       	in	r28, 0x3d	; 61
    2466:	de b7       	in	r29, 0x3e	; 62
    2468:	29 97       	sbiw	r28, 0x09	; 9
    246a:	0f b6       	in	r0, 0x3f	; 63
    246c:	f8 94       	cli
    246e:	de bf       	out	0x3e, r29	; 62
    2470:	0f be       	out	0x3f, r0	; 63
    2472:	cd bf       	out	0x3d, r28	; 61
    2474:	89 83       	std	Y+1, r24	; 0x01
    2476:	4a 83       	std	Y+2, r20	; 0x02
    2478:	5b 83       	std	Y+3, r21	; 0x03
    247a:	6c 83       	std	Y+4, r22	; 0x04
    247c:	7d 83       	std	Y+5, r23	; 0x05
    247e:	0e 83       	std	Y+6, r16	; 0x06
    2480:	1f 83       	std	Y+7, r17	; 0x07
    2482:	28 87       	std	Y+8, r18	; 0x08
    2484:	39 87       	std	Y+9, r19	; 0x09
	//set sck as output
	HX711_SCKDDR |= (1<<HX711_SCKPINNUM);
    2486:	87 e3       	ldi	r24, 0x37	; 55
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	27 e3       	ldi	r18, 0x37	; 55
    248c:	30 e0       	ldi	r19, 0x00	; 0
    248e:	f9 01       	movw	r30, r18
    2490:	20 81       	ld	r18, Z
    2492:	22 60       	ori	r18, 0x02	; 2
    2494:	fc 01       	movw	r30, r24
    2496:	20 83       	st	Z, r18
	HX711_SCKPORT &= ~(1<<HX711_SCKPINNUM);
    2498:	88 e3       	ldi	r24, 0x38	; 56
    249a:	90 e0       	ldi	r25, 0x00	; 0
    249c:	28 e3       	ldi	r18, 0x38	; 56
    249e:	30 e0       	ldi	r19, 0x00	; 0
    24a0:	f9 01       	movw	r30, r18
    24a2:	20 81       	ld	r18, Z
    24a4:	2d 7f       	andi	r18, 0xFD	; 253
    24a6:	fc 01       	movw	r30, r24
    24a8:	20 83       	st	Z, r18
	//set dt as input
	HX711_DTDDR &=~ (1<<HX711_DTPINNUM);
    24aa:	87 e3       	ldi	r24, 0x37	; 55
    24ac:	90 e0       	ldi	r25, 0x00	; 0
    24ae:	27 e3       	ldi	r18, 0x37	; 55
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	f9 01       	movw	r30, r18
    24b4:	20 81       	ld	r18, Z
    24b6:	2e 7f       	andi	r18, 0xFE	; 254
    24b8:	fc 01       	movw	r30, r24
    24ba:	20 83       	st	Z, r18

	//set gain
	hx711_setgain(gain);
    24bc:	89 81       	ldd	r24, Y+1	; 0x01
    24be:	88 2f       	mov	r24, r24
    24c0:	90 e0       	ldi	r25, 0x00	; 0
    24c2:	0e 94 bf 11 	call	0x237e	; 0x237e <hx711_setgain>
	//set scale
	hx711_setscale(scale);
    24c6:	8a 81       	ldd	r24, Y+2	; 0x02
    24c8:	9b 81       	ldd	r25, Y+3	; 0x03
    24ca:	ac 81       	ldd	r26, Y+4	; 0x04
    24cc:	bd 81       	ldd	r27, Y+5	; 0x05
    24ce:	bc 01       	movw	r22, r24
    24d0:	cd 01       	movw	r24, r26
    24d2:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <hx711_setscale>
	//set offset
	hx711_setoffset(offset);
    24d6:	8e 81       	ldd	r24, Y+6	; 0x06
    24d8:	9f 81       	ldd	r25, Y+7	; 0x07
    24da:	a8 85       	ldd	r26, Y+8	; 0x08
    24dc:	b9 85       	ldd	r27, Y+9	; 0x09
    24de:	bc 01       	movw	r22, r24
    24e0:	cd 01       	movw	r24, r26
    24e2:	0e 94 10 12 	call	0x2420	; 0x2420 <hx711_setoffset>
    24e6:	00 00       	nop
    24e8:	29 96       	adiw	r28, 0x09	; 9
    24ea:	0f b6       	in	r0, 0x3f	; 63
    24ec:	f8 94       	cli
    24ee:	de bf       	out	0x3e, r29	; 62
    24f0:	0f be       	out	0x3f, r0	; 63
    24f2:	cd bf       	out	0x3d, r28	; 61
    24f4:	df 91       	pop	r29
    24f6:	cf 91       	pop	r28
    24f8:	1f 91       	pop	r17
    24fa:	0f 91       	pop	r16
    24fc:	08 95       	ret

000024fe <__subsf3>:
    24fe:	50 58       	subi	r21, 0x80	; 128

00002500 <__addsf3>:
    2500:	bb 27       	eor	r27, r27
    2502:	aa 27       	eor	r26, r26
    2504:	0e 94 97 12 	call	0x252e	; 0x252e <__addsf3x>
    2508:	0c 94 11 14 	jmp	0x2822	; 0x2822 <__fp_round>
    250c:	0e 94 03 14 	call	0x2806	; 0x2806 <__fp_pscA>
    2510:	38 f0       	brcs	.+14     	; 0x2520 <__addsf3+0x20>
    2512:	0e 94 0a 14 	call	0x2814	; 0x2814 <__fp_pscB>
    2516:	20 f0       	brcs	.+8      	; 0x2520 <__addsf3+0x20>
    2518:	39 f4       	brne	.+14     	; 0x2528 <__addsf3+0x28>
    251a:	9f 3f       	cpi	r25, 0xFF	; 255
    251c:	19 f4       	brne	.+6      	; 0x2524 <__addsf3+0x24>
    251e:	26 f4       	brtc	.+8      	; 0x2528 <__addsf3+0x28>
    2520:	0c 94 00 14 	jmp	0x2800	; 0x2800 <__fp_nan>
    2524:	0e f4       	brtc	.+2      	; 0x2528 <__addsf3+0x28>
    2526:	e0 95       	com	r30
    2528:	e7 fb       	bst	r30, 7
    252a:	0c 94 fa 13 	jmp	0x27f4	; 0x27f4 <__fp_inf>

0000252e <__addsf3x>:
    252e:	e9 2f       	mov	r30, r25
    2530:	0e 94 22 14 	call	0x2844	; 0x2844 <__fp_split3>
    2534:	58 f3       	brcs	.-42     	; 0x250c <__addsf3+0xc>
    2536:	ba 17       	cp	r27, r26
    2538:	62 07       	cpc	r22, r18
    253a:	73 07       	cpc	r23, r19
    253c:	84 07       	cpc	r24, r20
    253e:	95 07       	cpc	r25, r21
    2540:	20 f0       	brcs	.+8      	; 0x254a <__addsf3x+0x1c>
    2542:	79 f4       	brne	.+30     	; 0x2562 <__addsf3x+0x34>
    2544:	a6 f5       	brtc	.+104    	; 0x25ae <__addsf3x+0x80>
    2546:	0c 94 44 14 	jmp	0x2888	; 0x2888 <__fp_zero>
    254a:	0e f4       	brtc	.+2      	; 0x254e <__addsf3x+0x20>
    254c:	e0 95       	com	r30
    254e:	0b 2e       	mov	r0, r27
    2550:	ba 2f       	mov	r27, r26
    2552:	a0 2d       	mov	r26, r0
    2554:	0b 01       	movw	r0, r22
    2556:	b9 01       	movw	r22, r18
    2558:	90 01       	movw	r18, r0
    255a:	0c 01       	movw	r0, r24
    255c:	ca 01       	movw	r24, r20
    255e:	a0 01       	movw	r20, r0
    2560:	11 24       	eor	r1, r1
    2562:	ff 27       	eor	r31, r31
    2564:	59 1b       	sub	r21, r25
    2566:	99 f0       	breq	.+38     	; 0x258e <__addsf3x+0x60>
    2568:	59 3f       	cpi	r21, 0xF9	; 249
    256a:	50 f4       	brcc	.+20     	; 0x2580 <__addsf3x+0x52>
    256c:	50 3e       	cpi	r21, 0xE0	; 224
    256e:	68 f1       	brcs	.+90     	; 0x25ca <__addsf3x+0x9c>
    2570:	1a 16       	cp	r1, r26
    2572:	f0 40       	sbci	r31, 0x00	; 0
    2574:	a2 2f       	mov	r26, r18
    2576:	23 2f       	mov	r18, r19
    2578:	34 2f       	mov	r19, r20
    257a:	44 27       	eor	r20, r20
    257c:	58 5f       	subi	r21, 0xF8	; 248
    257e:	f3 cf       	rjmp	.-26     	; 0x2566 <__addsf3x+0x38>
    2580:	46 95       	lsr	r20
    2582:	37 95       	ror	r19
    2584:	27 95       	ror	r18
    2586:	a7 95       	ror	r26
    2588:	f0 40       	sbci	r31, 0x00	; 0
    258a:	53 95       	inc	r21
    258c:	c9 f7       	brne	.-14     	; 0x2580 <__addsf3x+0x52>
    258e:	7e f4       	brtc	.+30     	; 0x25ae <__addsf3x+0x80>
    2590:	1f 16       	cp	r1, r31
    2592:	ba 0b       	sbc	r27, r26
    2594:	62 0b       	sbc	r22, r18
    2596:	73 0b       	sbc	r23, r19
    2598:	84 0b       	sbc	r24, r20
    259a:	ba f0       	brmi	.+46     	; 0x25ca <__addsf3x+0x9c>
    259c:	91 50       	subi	r25, 0x01	; 1
    259e:	a1 f0       	breq	.+40     	; 0x25c8 <__addsf3x+0x9a>
    25a0:	ff 0f       	add	r31, r31
    25a2:	bb 1f       	adc	r27, r27
    25a4:	66 1f       	adc	r22, r22
    25a6:	77 1f       	adc	r23, r23
    25a8:	88 1f       	adc	r24, r24
    25aa:	c2 f7       	brpl	.-16     	; 0x259c <__addsf3x+0x6e>
    25ac:	0e c0       	rjmp	.+28     	; 0x25ca <__addsf3x+0x9c>
    25ae:	ba 0f       	add	r27, r26
    25b0:	62 1f       	adc	r22, r18
    25b2:	73 1f       	adc	r23, r19
    25b4:	84 1f       	adc	r24, r20
    25b6:	48 f4       	brcc	.+18     	; 0x25ca <__addsf3x+0x9c>
    25b8:	87 95       	ror	r24
    25ba:	77 95       	ror	r23
    25bc:	67 95       	ror	r22
    25be:	b7 95       	ror	r27
    25c0:	f7 95       	ror	r31
    25c2:	9e 3f       	cpi	r25, 0xFE	; 254
    25c4:	08 f0       	brcs	.+2      	; 0x25c8 <__addsf3x+0x9a>
    25c6:	b0 cf       	rjmp	.-160    	; 0x2528 <__addsf3+0x28>
    25c8:	93 95       	inc	r25
    25ca:	88 0f       	add	r24, r24
    25cc:	08 f0       	brcs	.+2      	; 0x25d0 <__addsf3x+0xa2>
    25ce:	99 27       	eor	r25, r25
    25d0:	ee 0f       	add	r30, r30
    25d2:	97 95       	ror	r25
    25d4:	87 95       	ror	r24
    25d6:	08 95       	ret

000025d8 <__cmpsf2>:
    25d8:	0e 94 d6 13 	call	0x27ac	; 0x27ac <__fp_cmp>
    25dc:	08 f4       	brcc	.+2      	; 0x25e0 <__cmpsf2+0x8>
    25de:	81 e0       	ldi	r24, 0x01	; 1
    25e0:	08 95       	ret

000025e2 <__divsf3>:
    25e2:	0e 94 05 13 	call	0x260a	; 0x260a <__divsf3x>
    25e6:	0c 94 11 14 	jmp	0x2822	; 0x2822 <__fp_round>
    25ea:	0e 94 0a 14 	call	0x2814	; 0x2814 <__fp_pscB>
    25ee:	58 f0       	brcs	.+22     	; 0x2606 <__divsf3+0x24>
    25f0:	0e 94 03 14 	call	0x2806	; 0x2806 <__fp_pscA>
    25f4:	40 f0       	brcs	.+16     	; 0x2606 <__divsf3+0x24>
    25f6:	29 f4       	brne	.+10     	; 0x2602 <__divsf3+0x20>
    25f8:	5f 3f       	cpi	r21, 0xFF	; 255
    25fa:	29 f0       	breq	.+10     	; 0x2606 <__divsf3+0x24>
    25fc:	0c 94 fa 13 	jmp	0x27f4	; 0x27f4 <__fp_inf>
    2600:	51 11       	cpse	r21, r1
    2602:	0c 94 45 14 	jmp	0x288a	; 0x288a <__fp_szero>
    2606:	0c 94 00 14 	jmp	0x2800	; 0x2800 <__fp_nan>

0000260a <__divsf3x>:
    260a:	0e 94 22 14 	call	0x2844	; 0x2844 <__fp_split3>
    260e:	68 f3       	brcs	.-38     	; 0x25ea <__divsf3+0x8>

00002610 <__divsf3_pse>:
    2610:	99 23       	and	r25, r25
    2612:	b1 f3       	breq	.-20     	; 0x2600 <__divsf3+0x1e>
    2614:	55 23       	and	r21, r21
    2616:	91 f3       	breq	.-28     	; 0x25fc <__divsf3+0x1a>
    2618:	95 1b       	sub	r25, r21
    261a:	55 0b       	sbc	r21, r21
    261c:	bb 27       	eor	r27, r27
    261e:	aa 27       	eor	r26, r26
    2620:	62 17       	cp	r22, r18
    2622:	73 07       	cpc	r23, r19
    2624:	84 07       	cpc	r24, r20
    2626:	38 f0       	brcs	.+14     	; 0x2636 <__divsf3_pse+0x26>
    2628:	9f 5f       	subi	r25, 0xFF	; 255
    262a:	5f 4f       	sbci	r21, 0xFF	; 255
    262c:	22 0f       	add	r18, r18
    262e:	33 1f       	adc	r19, r19
    2630:	44 1f       	adc	r20, r20
    2632:	aa 1f       	adc	r26, r26
    2634:	a9 f3       	breq	.-22     	; 0x2620 <__divsf3_pse+0x10>
    2636:	35 d0       	rcall	.+106    	; 0x26a2 <__divsf3_pse+0x92>
    2638:	0e 2e       	mov	r0, r30
    263a:	3a f0       	brmi	.+14     	; 0x264a <__divsf3_pse+0x3a>
    263c:	e0 e8       	ldi	r30, 0x80	; 128
    263e:	32 d0       	rcall	.+100    	; 0x26a4 <__divsf3_pse+0x94>
    2640:	91 50       	subi	r25, 0x01	; 1
    2642:	50 40       	sbci	r21, 0x00	; 0
    2644:	e6 95       	lsr	r30
    2646:	00 1c       	adc	r0, r0
    2648:	ca f7       	brpl	.-14     	; 0x263c <__divsf3_pse+0x2c>
    264a:	2b d0       	rcall	.+86     	; 0x26a2 <__divsf3_pse+0x92>
    264c:	fe 2f       	mov	r31, r30
    264e:	29 d0       	rcall	.+82     	; 0x26a2 <__divsf3_pse+0x92>
    2650:	66 0f       	add	r22, r22
    2652:	77 1f       	adc	r23, r23
    2654:	88 1f       	adc	r24, r24
    2656:	bb 1f       	adc	r27, r27
    2658:	26 17       	cp	r18, r22
    265a:	37 07       	cpc	r19, r23
    265c:	48 07       	cpc	r20, r24
    265e:	ab 07       	cpc	r26, r27
    2660:	b0 e8       	ldi	r27, 0x80	; 128
    2662:	09 f0       	breq	.+2      	; 0x2666 <__divsf3_pse+0x56>
    2664:	bb 0b       	sbc	r27, r27
    2666:	80 2d       	mov	r24, r0
    2668:	bf 01       	movw	r22, r30
    266a:	ff 27       	eor	r31, r31
    266c:	93 58       	subi	r25, 0x83	; 131
    266e:	5f 4f       	sbci	r21, 0xFF	; 255
    2670:	3a f0       	brmi	.+14     	; 0x2680 <__divsf3_pse+0x70>
    2672:	9e 3f       	cpi	r25, 0xFE	; 254
    2674:	51 05       	cpc	r21, r1
    2676:	78 f0       	brcs	.+30     	; 0x2696 <__divsf3_pse+0x86>
    2678:	0c 94 fa 13 	jmp	0x27f4	; 0x27f4 <__fp_inf>
    267c:	0c 94 45 14 	jmp	0x288a	; 0x288a <__fp_szero>
    2680:	5f 3f       	cpi	r21, 0xFF	; 255
    2682:	e4 f3       	brlt	.-8      	; 0x267c <__divsf3_pse+0x6c>
    2684:	98 3e       	cpi	r25, 0xE8	; 232
    2686:	d4 f3       	brlt	.-12     	; 0x267c <__divsf3_pse+0x6c>
    2688:	86 95       	lsr	r24
    268a:	77 95       	ror	r23
    268c:	67 95       	ror	r22
    268e:	b7 95       	ror	r27
    2690:	f7 95       	ror	r31
    2692:	9f 5f       	subi	r25, 0xFF	; 255
    2694:	c9 f7       	brne	.-14     	; 0x2688 <__divsf3_pse+0x78>
    2696:	88 0f       	add	r24, r24
    2698:	91 1d       	adc	r25, r1
    269a:	96 95       	lsr	r25
    269c:	87 95       	ror	r24
    269e:	97 f9       	bld	r25, 7
    26a0:	08 95       	ret
    26a2:	e1 e0       	ldi	r30, 0x01	; 1
    26a4:	66 0f       	add	r22, r22
    26a6:	77 1f       	adc	r23, r23
    26a8:	88 1f       	adc	r24, r24
    26aa:	bb 1f       	adc	r27, r27
    26ac:	62 17       	cp	r22, r18
    26ae:	73 07       	cpc	r23, r19
    26b0:	84 07       	cpc	r24, r20
    26b2:	ba 07       	cpc	r27, r26
    26b4:	20 f0       	brcs	.+8      	; 0x26be <__divsf3_pse+0xae>
    26b6:	62 1b       	sub	r22, r18
    26b8:	73 0b       	sbc	r23, r19
    26ba:	84 0b       	sbc	r24, r20
    26bc:	ba 0b       	sbc	r27, r26
    26be:	ee 1f       	adc	r30, r30
    26c0:	88 f7       	brcc	.-30     	; 0x26a4 <__divsf3_pse+0x94>
    26c2:	e0 95       	com	r30
    26c4:	08 95       	ret

000026c6 <__fixsfsi>:
    26c6:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fixunssfsi>
    26ca:	68 94       	set
    26cc:	b1 11       	cpse	r27, r1
    26ce:	0c 94 45 14 	jmp	0x288a	; 0x288a <__fp_szero>
    26d2:	08 95       	ret

000026d4 <__fixunssfsi>:
    26d4:	0e 94 2a 14 	call	0x2854	; 0x2854 <__fp_splitA>
    26d8:	88 f0       	brcs	.+34     	; 0x26fc <__fixunssfsi+0x28>
    26da:	9f 57       	subi	r25, 0x7F	; 127
    26dc:	98 f0       	brcs	.+38     	; 0x2704 <__fixunssfsi+0x30>
    26de:	b9 2f       	mov	r27, r25
    26e0:	99 27       	eor	r25, r25
    26e2:	b7 51       	subi	r27, 0x17	; 23
    26e4:	b0 f0       	brcs	.+44     	; 0x2712 <__fixunssfsi+0x3e>
    26e6:	e1 f0       	breq	.+56     	; 0x2720 <__fixunssfsi+0x4c>
    26e8:	66 0f       	add	r22, r22
    26ea:	77 1f       	adc	r23, r23
    26ec:	88 1f       	adc	r24, r24
    26ee:	99 1f       	adc	r25, r25
    26f0:	1a f0       	brmi	.+6      	; 0x26f8 <__fixunssfsi+0x24>
    26f2:	ba 95       	dec	r27
    26f4:	c9 f7       	brne	.-14     	; 0x26e8 <__fixunssfsi+0x14>
    26f6:	14 c0       	rjmp	.+40     	; 0x2720 <__fixunssfsi+0x4c>
    26f8:	b1 30       	cpi	r27, 0x01	; 1
    26fa:	91 f0       	breq	.+36     	; 0x2720 <__fixunssfsi+0x4c>
    26fc:	0e 94 44 14 	call	0x2888	; 0x2888 <__fp_zero>
    2700:	b1 e0       	ldi	r27, 0x01	; 1
    2702:	08 95       	ret
    2704:	0c 94 44 14 	jmp	0x2888	; 0x2888 <__fp_zero>
    2708:	67 2f       	mov	r22, r23
    270a:	78 2f       	mov	r23, r24
    270c:	88 27       	eor	r24, r24
    270e:	b8 5f       	subi	r27, 0xF8	; 248
    2710:	39 f0       	breq	.+14     	; 0x2720 <__fixunssfsi+0x4c>
    2712:	b9 3f       	cpi	r27, 0xF9	; 249
    2714:	cc f3       	brlt	.-14     	; 0x2708 <__fixunssfsi+0x34>
    2716:	86 95       	lsr	r24
    2718:	77 95       	ror	r23
    271a:	67 95       	ror	r22
    271c:	b3 95       	inc	r27
    271e:	d9 f7       	brne	.-10     	; 0x2716 <__fixunssfsi+0x42>
    2720:	3e f4       	brtc	.+14     	; 0x2730 <__fixunssfsi+0x5c>
    2722:	90 95       	com	r25
    2724:	80 95       	com	r24
    2726:	70 95       	com	r23
    2728:	61 95       	neg	r22
    272a:	7f 4f       	sbci	r23, 0xFF	; 255
    272c:	8f 4f       	sbci	r24, 0xFF	; 255
    272e:	9f 4f       	sbci	r25, 0xFF	; 255
    2730:	08 95       	ret

00002732 <__floatunsisf>:
    2732:	e8 94       	clt
    2734:	09 c0       	rjmp	.+18     	; 0x2748 <__floatsisf+0x12>

00002736 <__floatsisf>:
    2736:	97 fb       	bst	r25, 7
    2738:	3e f4       	brtc	.+14     	; 0x2748 <__floatsisf+0x12>
    273a:	90 95       	com	r25
    273c:	80 95       	com	r24
    273e:	70 95       	com	r23
    2740:	61 95       	neg	r22
    2742:	7f 4f       	sbci	r23, 0xFF	; 255
    2744:	8f 4f       	sbci	r24, 0xFF	; 255
    2746:	9f 4f       	sbci	r25, 0xFF	; 255
    2748:	99 23       	and	r25, r25
    274a:	a9 f0       	breq	.+42     	; 0x2776 <__floatsisf+0x40>
    274c:	f9 2f       	mov	r31, r25
    274e:	96 e9       	ldi	r25, 0x96	; 150
    2750:	bb 27       	eor	r27, r27
    2752:	93 95       	inc	r25
    2754:	f6 95       	lsr	r31
    2756:	87 95       	ror	r24
    2758:	77 95       	ror	r23
    275a:	67 95       	ror	r22
    275c:	b7 95       	ror	r27
    275e:	f1 11       	cpse	r31, r1
    2760:	f8 cf       	rjmp	.-16     	; 0x2752 <__floatsisf+0x1c>
    2762:	fa f4       	brpl	.+62     	; 0x27a2 <__floatsisf+0x6c>
    2764:	bb 0f       	add	r27, r27
    2766:	11 f4       	brne	.+4      	; 0x276c <__floatsisf+0x36>
    2768:	60 ff       	sbrs	r22, 0
    276a:	1b c0       	rjmp	.+54     	; 0x27a2 <__floatsisf+0x6c>
    276c:	6f 5f       	subi	r22, 0xFF	; 255
    276e:	7f 4f       	sbci	r23, 0xFF	; 255
    2770:	8f 4f       	sbci	r24, 0xFF	; 255
    2772:	9f 4f       	sbci	r25, 0xFF	; 255
    2774:	16 c0       	rjmp	.+44     	; 0x27a2 <__floatsisf+0x6c>
    2776:	88 23       	and	r24, r24
    2778:	11 f0       	breq	.+4      	; 0x277e <__floatsisf+0x48>
    277a:	96 e9       	ldi	r25, 0x96	; 150
    277c:	11 c0       	rjmp	.+34     	; 0x27a0 <__floatsisf+0x6a>
    277e:	77 23       	and	r23, r23
    2780:	21 f0       	breq	.+8      	; 0x278a <__floatsisf+0x54>
    2782:	9e e8       	ldi	r25, 0x8E	; 142
    2784:	87 2f       	mov	r24, r23
    2786:	76 2f       	mov	r23, r22
    2788:	05 c0       	rjmp	.+10     	; 0x2794 <__floatsisf+0x5e>
    278a:	66 23       	and	r22, r22
    278c:	71 f0       	breq	.+28     	; 0x27aa <__floatsisf+0x74>
    278e:	96 e8       	ldi	r25, 0x86	; 134
    2790:	86 2f       	mov	r24, r22
    2792:	70 e0       	ldi	r23, 0x00	; 0
    2794:	60 e0       	ldi	r22, 0x00	; 0
    2796:	2a f0       	brmi	.+10     	; 0x27a2 <__floatsisf+0x6c>
    2798:	9a 95       	dec	r25
    279a:	66 0f       	add	r22, r22
    279c:	77 1f       	adc	r23, r23
    279e:	88 1f       	adc	r24, r24
    27a0:	da f7       	brpl	.-10     	; 0x2798 <__floatsisf+0x62>
    27a2:	88 0f       	add	r24, r24
    27a4:	96 95       	lsr	r25
    27a6:	87 95       	ror	r24
    27a8:	97 f9       	bld	r25, 7
    27aa:	08 95       	ret

000027ac <__fp_cmp>:
    27ac:	99 0f       	add	r25, r25
    27ae:	00 08       	sbc	r0, r0
    27b0:	55 0f       	add	r21, r21
    27b2:	aa 0b       	sbc	r26, r26
    27b4:	e0 e8       	ldi	r30, 0x80	; 128
    27b6:	fe ef       	ldi	r31, 0xFE	; 254
    27b8:	16 16       	cp	r1, r22
    27ba:	17 06       	cpc	r1, r23
    27bc:	e8 07       	cpc	r30, r24
    27be:	f9 07       	cpc	r31, r25
    27c0:	c0 f0       	brcs	.+48     	; 0x27f2 <__fp_cmp+0x46>
    27c2:	12 16       	cp	r1, r18
    27c4:	13 06       	cpc	r1, r19
    27c6:	e4 07       	cpc	r30, r20
    27c8:	f5 07       	cpc	r31, r21
    27ca:	98 f0       	brcs	.+38     	; 0x27f2 <__fp_cmp+0x46>
    27cc:	62 1b       	sub	r22, r18
    27ce:	73 0b       	sbc	r23, r19
    27d0:	84 0b       	sbc	r24, r20
    27d2:	95 0b       	sbc	r25, r21
    27d4:	39 f4       	brne	.+14     	; 0x27e4 <__fp_cmp+0x38>
    27d6:	0a 26       	eor	r0, r26
    27d8:	61 f0       	breq	.+24     	; 0x27f2 <__fp_cmp+0x46>
    27da:	23 2b       	or	r18, r19
    27dc:	24 2b       	or	r18, r20
    27de:	25 2b       	or	r18, r21
    27e0:	21 f4       	brne	.+8      	; 0x27ea <__fp_cmp+0x3e>
    27e2:	08 95       	ret
    27e4:	0a 26       	eor	r0, r26
    27e6:	09 f4       	brne	.+2      	; 0x27ea <__fp_cmp+0x3e>
    27e8:	a1 40       	sbci	r26, 0x01	; 1
    27ea:	a6 95       	lsr	r26
    27ec:	8f ef       	ldi	r24, 0xFF	; 255
    27ee:	81 1d       	adc	r24, r1
    27f0:	81 1d       	adc	r24, r1
    27f2:	08 95       	ret

000027f4 <__fp_inf>:
    27f4:	97 f9       	bld	r25, 7
    27f6:	9f 67       	ori	r25, 0x7F	; 127
    27f8:	80 e8       	ldi	r24, 0x80	; 128
    27fa:	70 e0       	ldi	r23, 0x00	; 0
    27fc:	60 e0       	ldi	r22, 0x00	; 0
    27fe:	08 95       	ret

00002800 <__fp_nan>:
    2800:	9f ef       	ldi	r25, 0xFF	; 255
    2802:	80 ec       	ldi	r24, 0xC0	; 192
    2804:	08 95       	ret

00002806 <__fp_pscA>:
    2806:	00 24       	eor	r0, r0
    2808:	0a 94       	dec	r0
    280a:	16 16       	cp	r1, r22
    280c:	17 06       	cpc	r1, r23
    280e:	18 06       	cpc	r1, r24
    2810:	09 06       	cpc	r0, r25
    2812:	08 95       	ret

00002814 <__fp_pscB>:
    2814:	00 24       	eor	r0, r0
    2816:	0a 94       	dec	r0
    2818:	12 16       	cp	r1, r18
    281a:	13 06       	cpc	r1, r19
    281c:	14 06       	cpc	r1, r20
    281e:	05 06       	cpc	r0, r21
    2820:	08 95       	ret

00002822 <__fp_round>:
    2822:	09 2e       	mov	r0, r25
    2824:	03 94       	inc	r0
    2826:	00 0c       	add	r0, r0
    2828:	11 f4       	brne	.+4      	; 0x282e <__fp_round+0xc>
    282a:	88 23       	and	r24, r24
    282c:	52 f0       	brmi	.+20     	; 0x2842 <__fp_round+0x20>
    282e:	bb 0f       	add	r27, r27
    2830:	40 f4       	brcc	.+16     	; 0x2842 <__fp_round+0x20>
    2832:	bf 2b       	or	r27, r31
    2834:	11 f4       	brne	.+4      	; 0x283a <__fp_round+0x18>
    2836:	60 ff       	sbrs	r22, 0
    2838:	04 c0       	rjmp	.+8      	; 0x2842 <__fp_round+0x20>
    283a:	6f 5f       	subi	r22, 0xFF	; 255
    283c:	7f 4f       	sbci	r23, 0xFF	; 255
    283e:	8f 4f       	sbci	r24, 0xFF	; 255
    2840:	9f 4f       	sbci	r25, 0xFF	; 255
    2842:	08 95       	ret

00002844 <__fp_split3>:
    2844:	57 fd       	sbrc	r21, 7
    2846:	90 58       	subi	r25, 0x80	; 128
    2848:	44 0f       	add	r20, r20
    284a:	55 1f       	adc	r21, r21
    284c:	59 f0       	breq	.+22     	; 0x2864 <__fp_splitA+0x10>
    284e:	5f 3f       	cpi	r21, 0xFF	; 255
    2850:	71 f0       	breq	.+28     	; 0x286e <__fp_splitA+0x1a>
    2852:	47 95       	ror	r20

00002854 <__fp_splitA>:
    2854:	88 0f       	add	r24, r24
    2856:	97 fb       	bst	r25, 7
    2858:	99 1f       	adc	r25, r25
    285a:	61 f0       	breq	.+24     	; 0x2874 <__fp_splitA+0x20>
    285c:	9f 3f       	cpi	r25, 0xFF	; 255
    285e:	79 f0       	breq	.+30     	; 0x287e <__fp_splitA+0x2a>
    2860:	87 95       	ror	r24
    2862:	08 95       	ret
    2864:	12 16       	cp	r1, r18
    2866:	13 06       	cpc	r1, r19
    2868:	14 06       	cpc	r1, r20
    286a:	55 1f       	adc	r21, r21
    286c:	f2 cf       	rjmp	.-28     	; 0x2852 <__fp_split3+0xe>
    286e:	46 95       	lsr	r20
    2870:	f1 df       	rcall	.-30     	; 0x2854 <__fp_splitA>
    2872:	08 c0       	rjmp	.+16     	; 0x2884 <__fp_splitA+0x30>
    2874:	16 16       	cp	r1, r22
    2876:	17 06       	cpc	r1, r23
    2878:	18 06       	cpc	r1, r24
    287a:	99 1f       	adc	r25, r25
    287c:	f1 cf       	rjmp	.-30     	; 0x2860 <__fp_splitA+0xc>
    287e:	86 95       	lsr	r24
    2880:	71 05       	cpc	r23, r1
    2882:	61 05       	cpc	r22, r1
    2884:	08 94       	sec
    2886:	08 95       	ret

00002888 <__fp_zero>:
    2888:	e8 94       	clt

0000288a <__fp_szero>:
    288a:	bb 27       	eor	r27, r27
    288c:	66 27       	eor	r22, r22
    288e:	77 27       	eor	r23, r23
    2890:	cb 01       	movw	r24, r22
    2892:	97 f9       	bld	r25, 7
    2894:	08 95       	ret

00002896 <__gesf2>:
    2896:	0e 94 d6 13 	call	0x27ac	; 0x27ac <__fp_cmp>
    289a:	08 f4       	brcc	.+2      	; 0x289e <__gesf2+0x8>
    289c:	8f ef       	ldi	r24, 0xFF	; 255
    289e:	08 95       	ret

000028a0 <__mulsf3>:
    28a0:	0e 94 63 14 	call	0x28c6	; 0x28c6 <__mulsf3x>
    28a4:	0c 94 11 14 	jmp	0x2822	; 0x2822 <__fp_round>
    28a8:	0e 94 03 14 	call	0x2806	; 0x2806 <__fp_pscA>
    28ac:	38 f0       	brcs	.+14     	; 0x28bc <__mulsf3+0x1c>
    28ae:	0e 94 0a 14 	call	0x2814	; 0x2814 <__fp_pscB>
    28b2:	20 f0       	brcs	.+8      	; 0x28bc <__mulsf3+0x1c>
    28b4:	95 23       	and	r25, r21
    28b6:	11 f0       	breq	.+4      	; 0x28bc <__mulsf3+0x1c>
    28b8:	0c 94 fa 13 	jmp	0x27f4	; 0x27f4 <__fp_inf>
    28bc:	0c 94 00 14 	jmp	0x2800	; 0x2800 <__fp_nan>
    28c0:	11 24       	eor	r1, r1
    28c2:	0c 94 45 14 	jmp	0x288a	; 0x288a <__fp_szero>

000028c6 <__mulsf3x>:
    28c6:	0e 94 22 14 	call	0x2844	; 0x2844 <__fp_split3>
    28ca:	70 f3       	brcs	.-36     	; 0x28a8 <__mulsf3+0x8>

000028cc <__mulsf3_pse>:
    28cc:	95 9f       	mul	r25, r21
    28ce:	c1 f3       	breq	.-16     	; 0x28c0 <__mulsf3+0x20>
    28d0:	95 0f       	add	r25, r21
    28d2:	50 e0       	ldi	r21, 0x00	; 0
    28d4:	55 1f       	adc	r21, r21
    28d6:	62 9f       	mul	r22, r18
    28d8:	f0 01       	movw	r30, r0
    28da:	72 9f       	mul	r23, r18
    28dc:	bb 27       	eor	r27, r27
    28de:	f0 0d       	add	r31, r0
    28e0:	b1 1d       	adc	r27, r1
    28e2:	63 9f       	mul	r22, r19
    28e4:	aa 27       	eor	r26, r26
    28e6:	f0 0d       	add	r31, r0
    28e8:	b1 1d       	adc	r27, r1
    28ea:	aa 1f       	adc	r26, r26
    28ec:	64 9f       	mul	r22, r20
    28ee:	66 27       	eor	r22, r22
    28f0:	b0 0d       	add	r27, r0
    28f2:	a1 1d       	adc	r26, r1
    28f4:	66 1f       	adc	r22, r22
    28f6:	82 9f       	mul	r24, r18
    28f8:	22 27       	eor	r18, r18
    28fa:	b0 0d       	add	r27, r0
    28fc:	a1 1d       	adc	r26, r1
    28fe:	62 1f       	adc	r22, r18
    2900:	73 9f       	mul	r23, r19
    2902:	b0 0d       	add	r27, r0
    2904:	a1 1d       	adc	r26, r1
    2906:	62 1f       	adc	r22, r18
    2908:	83 9f       	mul	r24, r19
    290a:	a0 0d       	add	r26, r0
    290c:	61 1d       	adc	r22, r1
    290e:	22 1f       	adc	r18, r18
    2910:	74 9f       	mul	r23, r20
    2912:	33 27       	eor	r19, r19
    2914:	a0 0d       	add	r26, r0
    2916:	61 1d       	adc	r22, r1
    2918:	23 1f       	adc	r18, r19
    291a:	84 9f       	mul	r24, r20
    291c:	60 0d       	add	r22, r0
    291e:	21 1d       	adc	r18, r1
    2920:	82 2f       	mov	r24, r18
    2922:	76 2f       	mov	r23, r22
    2924:	6a 2f       	mov	r22, r26
    2926:	11 24       	eor	r1, r1
    2928:	9f 57       	subi	r25, 0x7F	; 127
    292a:	50 40       	sbci	r21, 0x00	; 0
    292c:	9a f0       	brmi	.+38     	; 0x2954 <__mulsf3_pse+0x88>
    292e:	f1 f0       	breq	.+60     	; 0x296c <__mulsf3_pse+0xa0>
    2930:	88 23       	and	r24, r24
    2932:	4a f0       	brmi	.+18     	; 0x2946 <__mulsf3_pse+0x7a>
    2934:	ee 0f       	add	r30, r30
    2936:	ff 1f       	adc	r31, r31
    2938:	bb 1f       	adc	r27, r27
    293a:	66 1f       	adc	r22, r22
    293c:	77 1f       	adc	r23, r23
    293e:	88 1f       	adc	r24, r24
    2940:	91 50       	subi	r25, 0x01	; 1
    2942:	50 40       	sbci	r21, 0x00	; 0
    2944:	a9 f7       	brne	.-22     	; 0x2930 <__mulsf3_pse+0x64>
    2946:	9e 3f       	cpi	r25, 0xFE	; 254
    2948:	51 05       	cpc	r21, r1
    294a:	80 f0       	brcs	.+32     	; 0x296c <__mulsf3_pse+0xa0>
    294c:	0c 94 fa 13 	jmp	0x27f4	; 0x27f4 <__fp_inf>
    2950:	0c 94 45 14 	jmp	0x288a	; 0x288a <__fp_szero>
    2954:	5f 3f       	cpi	r21, 0xFF	; 255
    2956:	e4 f3       	brlt	.-8      	; 0x2950 <__mulsf3_pse+0x84>
    2958:	98 3e       	cpi	r25, 0xE8	; 232
    295a:	d4 f3       	brlt	.-12     	; 0x2950 <__mulsf3_pse+0x84>
    295c:	86 95       	lsr	r24
    295e:	77 95       	ror	r23
    2960:	67 95       	ror	r22
    2962:	b7 95       	ror	r27
    2964:	f7 95       	ror	r31
    2966:	e7 95       	ror	r30
    2968:	9f 5f       	subi	r25, 0xFF	; 255
    296a:	c1 f7       	brne	.-16     	; 0x295c <__mulsf3_pse+0x90>
    296c:	fe 2b       	or	r31, r30
    296e:	88 0f       	add	r24, r24
    2970:	91 1d       	adc	r25, r1
    2972:	96 95       	lsr	r25
    2974:	87 95       	ror	r24
    2976:	97 f9       	bld	r25, 7
    2978:	08 95       	ret

0000297a <sprintf>:
    297a:	ae e0       	ldi	r26, 0x0E	; 14
    297c:	b0 e0       	ldi	r27, 0x00	; 0
    297e:	e3 ec       	ldi	r30, 0xC3	; 195
    2980:	f4 e1       	ldi	r31, 0x14	; 20
    2982:	0c 94 7e 17 	jmp	0x2efc	; 0x2efc <__prologue_saves__+0x1c>
    2986:	0d 89       	ldd	r16, Y+21	; 0x15
    2988:	1e 89       	ldd	r17, Y+22	; 0x16
    298a:	86 e0       	ldi	r24, 0x06	; 6
    298c:	8c 83       	std	Y+4, r24	; 0x04
    298e:	1a 83       	std	Y+2, r17	; 0x02
    2990:	09 83       	std	Y+1, r16	; 0x01
    2992:	8f ef       	ldi	r24, 0xFF	; 255
    2994:	9f e7       	ldi	r25, 0x7F	; 127
    2996:	9e 83       	std	Y+6, r25	; 0x06
    2998:	8d 83       	std	Y+5, r24	; 0x05
    299a:	ae 01       	movw	r20, r28
    299c:	47 5e       	subi	r20, 0xE7	; 231
    299e:	5f 4f       	sbci	r21, 0xFF	; 255
    29a0:	6f 89       	ldd	r22, Y+23	; 0x17
    29a2:	78 8d       	ldd	r23, Y+24	; 0x18
    29a4:	ce 01       	movw	r24, r28
    29a6:	01 96       	adiw	r24, 0x01	; 1
    29a8:	0e 94 df 14 	call	0x29be	; 0x29be <vfprintf>
    29ac:	ef 81       	ldd	r30, Y+7	; 0x07
    29ae:	f8 85       	ldd	r31, Y+8	; 0x08
    29b0:	e0 0f       	add	r30, r16
    29b2:	f1 1f       	adc	r31, r17
    29b4:	10 82       	st	Z, r1
    29b6:	2e 96       	adiw	r28, 0x0e	; 14
    29b8:	e4 e0       	ldi	r30, 0x04	; 4
    29ba:	0c 94 9a 17 	jmp	0x2f34	; 0x2f34 <__epilogue_restores__+0x1c>

000029be <vfprintf>:
    29be:	ab e0       	ldi	r26, 0x0B	; 11
    29c0:	b0 e0       	ldi	r27, 0x00	; 0
    29c2:	e5 ee       	ldi	r30, 0xE5	; 229
    29c4:	f4 e1       	ldi	r31, 0x14	; 20
    29c6:	0c 94 70 17 	jmp	0x2ee0	; 0x2ee0 <__prologue_saves__>
    29ca:	6c 01       	movw	r12, r24
    29cc:	7b 01       	movw	r14, r22
    29ce:	8a 01       	movw	r16, r20
    29d0:	fc 01       	movw	r30, r24
    29d2:	17 82       	std	Z+7, r1	; 0x07
    29d4:	16 82       	std	Z+6, r1	; 0x06
    29d6:	83 81       	ldd	r24, Z+3	; 0x03
    29d8:	81 ff       	sbrs	r24, 1
    29da:	cc c1       	rjmp	.+920    	; 0x2d74 <vfprintf+0x3b6>
    29dc:	ce 01       	movw	r24, r28
    29de:	01 96       	adiw	r24, 0x01	; 1
    29e0:	3c 01       	movw	r6, r24
    29e2:	f6 01       	movw	r30, r12
    29e4:	93 81       	ldd	r25, Z+3	; 0x03
    29e6:	f7 01       	movw	r30, r14
    29e8:	93 fd       	sbrc	r25, 3
    29ea:	85 91       	lpm	r24, Z+
    29ec:	93 ff       	sbrs	r25, 3
    29ee:	81 91       	ld	r24, Z+
    29f0:	7f 01       	movw	r14, r30
    29f2:	88 23       	and	r24, r24
    29f4:	09 f4       	brne	.+2      	; 0x29f8 <vfprintf+0x3a>
    29f6:	ba c1       	rjmp	.+884    	; 0x2d6c <vfprintf+0x3ae>
    29f8:	85 32       	cpi	r24, 0x25	; 37
    29fa:	39 f4       	brne	.+14     	; 0x2a0a <vfprintf+0x4c>
    29fc:	93 fd       	sbrc	r25, 3
    29fe:	85 91       	lpm	r24, Z+
    2a00:	93 ff       	sbrs	r25, 3
    2a02:	81 91       	ld	r24, Z+
    2a04:	7f 01       	movw	r14, r30
    2a06:	85 32       	cpi	r24, 0x25	; 37
    2a08:	29 f4       	brne	.+10     	; 0x2a14 <vfprintf+0x56>
    2a0a:	b6 01       	movw	r22, r12
    2a0c:	90 e0       	ldi	r25, 0x00	; 0
    2a0e:	0e 94 d6 16 	call	0x2dac	; 0x2dac <fputc>
    2a12:	e7 cf       	rjmp	.-50     	; 0x29e2 <vfprintf+0x24>
    2a14:	91 2c       	mov	r9, r1
    2a16:	21 2c       	mov	r2, r1
    2a18:	31 2c       	mov	r3, r1
    2a1a:	ff e1       	ldi	r31, 0x1F	; 31
    2a1c:	f3 15       	cp	r31, r3
    2a1e:	d8 f0       	brcs	.+54     	; 0x2a56 <vfprintf+0x98>
    2a20:	8b 32       	cpi	r24, 0x2B	; 43
    2a22:	79 f0       	breq	.+30     	; 0x2a42 <vfprintf+0x84>
    2a24:	38 f4       	brcc	.+14     	; 0x2a34 <vfprintf+0x76>
    2a26:	80 32       	cpi	r24, 0x20	; 32
    2a28:	79 f0       	breq	.+30     	; 0x2a48 <vfprintf+0x8a>
    2a2a:	83 32       	cpi	r24, 0x23	; 35
    2a2c:	a1 f4       	brne	.+40     	; 0x2a56 <vfprintf+0x98>
    2a2e:	23 2d       	mov	r18, r3
    2a30:	20 61       	ori	r18, 0x10	; 16
    2a32:	1d c0       	rjmp	.+58     	; 0x2a6e <vfprintf+0xb0>
    2a34:	8d 32       	cpi	r24, 0x2D	; 45
    2a36:	61 f0       	breq	.+24     	; 0x2a50 <vfprintf+0x92>
    2a38:	80 33       	cpi	r24, 0x30	; 48
    2a3a:	69 f4       	brne	.+26     	; 0x2a56 <vfprintf+0x98>
    2a3c:	23 2d       	mov	r18, r3
    2a3e:	21 60       	ori	r18, 0x01	; 1
    2a40:	16 c0       	rjmp	.+44     	; 0x2a6e <vfprintf+0xb0>
    2a42:	83 2d       	mov	r24, r3
    2a44:	82 60       	ori	r24, 0x02	; 2
    2a46:	38 2e       	mov	r3, r24
    2a48:	e3 2d       	mov	r30, r3
    2a4a:	e4 60       	ori	r30, 0x04	; 4
    2a4c:	3e 2e       	mov	r3, r30
    2a4e:	2a c0       	rjmp	.+84     	; 0x2aa4 <vfprintf+0xe6>
    2a50:	f3 2d       	mov	r31, r3
    2a52:	f8 60       	ori	r31, 0x08	; 8
    2a54:	1d c0       	rjmp	.+58     	; 0x2a90 <vfprintf+0xd2>
    2a56:	37 fc       	sbrc	r3, 7
    2a58:	2d c0       	rjmp	.+90     	; 0x2ab4 <vfprintf+0xf6>
    2a5a:	20 ed       	ldi	r18, 0xD0	; 208
    2a5c:	28 0f       	add	r18, r24
    2a5e:	2a 30       	cpi	r18, 0x0A	; 10
    2a60:	40 f0       	brcs	.+16     	; 0x2a72 <vfprintf+0xb4>
    2a62:	8e 32       	cpi	r24, 0x2E	; 46
    2a64:	b9 f4       	brne	.+46     	; 0x2a94 <vfprintf+0xd6>
    2a66:	36 fc       	sbrc	r3, 6
    2a68:	81 c1       	rjmp	.+770    	; 0x2d6c <vfprintf+0x3ae>
    2a6a:	23 2d       	mov	r18, r3
    2a6c:	20 64       	ori	r18, 0x40	; 64
    2a6e:	32 2e       	mov	r3, r18
    2a70:	19 c0       	rjmp	.+50     	; 0x2aa4 <vfprintf+0xe6>
    2a72:	36 fe       	sbrs	r3, 6
    2a74:	06 c0       	rjmp	.+12     	; 0x2a82 <vfprintf+0xc4>
    2a76:	8a e0       	ldi	r24, 0x0A	; 10
    2a78:	98 9e       	mul	r9, r24
    2a7a:	20 0d       	add	r18, r0
    2a7c:	11 24       	eor	r1, r1
    2a7e:	92 2e       	mov	r9, r18
    2a80:	11 c0       	rjmp	.+34     	; 0x2aa4 <vfprintf+0xe6>
    2a82:	ea e0       	ldi	r30, 0x0A	; 10
    2a84:	2e 9e       	mul	r2, r30
    2a86:	20 0d       	add	r18, r0
    2a88:	11 24       	eor	r1, r1
    2a8a:	22 2e       	mov	r2, r18
    2a8c:	f3 2d       	mov	r31, r3
    2a8e:	f0 62       	ori	r31, 0x20	; 32
    2a90:	3f 2e       	mov	r3, r31
    2a92:	08 c0       	rjmp	.+16     	; 0x2aa4 <vfprintf+0xe6>
    2a94:	8c 36       	cpi	r24, 0x6C	; 108
    2a96:	21 f4       	brne	.+8      	; 0x2aa0 <vfprintf+0xe2>
    2a98:	83 2d       	mov	r24, r3
    2a9a:	80 68       	ori	r24, 0x80	; 128
    2a9c:	38 2e       	mov	r3, r24
    2a9e:	02 c0       	rjmp	.+4      	; 0x2aa4 <vfprintf+0xe6>
    2aa0:	88 36       	cpi	r24, 0x68	; 104
    2aa2:	41 f4       	brne	.+16     	; 0x2ab4 <vfprintf+0xf6>
    2aa4:	f7 01       	movw	r30, r14
    2aa6:	93 fd       	sbrc	r25, 3
    2aa8:	85 91       	lpm	r24, Z+
    2aaa:	93 ff       	sbrs	r25, 3
    2aac:	81 91       	ld	r24, Z+
    2aae:	7f 01       	movw	r14, r30
    2ab0:	81 11       	cpse	r24, r1
    2ab2:	b3 cf       	rjmp	.-154    	; 0x2a1a <vfprintf+0x5c>
    2ab4:	98 2f       	mov	r25, r24
    2ab6:	9f 7d       	andi	r25, 0xDF	; 223
    2ab8:	95 54       	subi	r25, 0x45	; 69
    2aba:	93 30       	cpi	r25, 0x03	; 3
    2abc:	28 f4       	brcc	.+10     	; 0x2ac8 <vfprintf+0x10a>
    2abe:	0c 5f       	subi	r16, 0xFC	; 252
    2ac0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ac2:	9f e3       	ldi	r25, 0x3F	; 63
    2ac4:	99 83       	std	Y+1, r25	; 0x01
    2ac6:	0d c0       	rjmp	.+26     	; 0x2ae2 <vfprintf+0x124>
    2ac8:	83 36       	cpi	r24, 0x63	; 99
    2aca:	31 f0       	breq	.+12     	; 0x2ad8 <vfprintf+0x11a>
    2acc:	83 37       	cpi	r24, 0x73	; 115
    2ace:	71 f0       	breq	.+28     	; 0x2aec <vfprintf+0x12e>
    2ad0:	83 35       	cpi	r24, 0x53	; 83
    2ad2:	09 f0       	breq	.+2      	; 0x2ad6 <vfprintf+0x118>
    2ad4:	59 c0       	rjmp	.+178    	; 0x2b88 <vfprintf+0x1ca>
    2ad6:	21 c0       	rjmp	.+66     	; 0x2b1a <vfprintf+0x15c>
    2ad8:	f8 01       	movw	r30, r16
    2ada:	80 81       	ld	r24, Z
    2adc:	89 83       	std	Y+1, r24	; 0x01
    2ade:	0e 5f       	subi	r16, 0xFE	; 254
    2ae0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ae2:	88 24       	eor	r8, r8
    2ae4:	83 94       	inc	r8
    2ae6:	91 2c       	mov	r9, r1
    2ae8:	53 01       	movw	r10, r6
    2aea:	13 c0       	rjmp	.+38     	; 0x2b12 <vfprintf+0x154>
    2aec:	28 01       	movw	r4, r16
    2aee:	f2 e0       	ldi	r31, 0x02	; 2
    2af0:	4f 0e       	add	r4, r31
    2af2:	51 1c       	adc	r5, r1
    2af4:	f8 01       	movw	r30, r16
    2af6:	a0 80       	ld	r10, Z
    2af8:	b1 80       	ldd	r11, Z+1	; 0x01
    2afa:	36 fe       	sbrs	r3, 6
    2afc:	03 c0       	rjmp	.+6      	; 0x2b04 <vfprintf+0x146>
    2afe:	69 2d       	mov	r22, r9
    2b00:	70 e0       	ldi	r23, 0x00	; 0
    2b02:	02 c0       	rjmp	.+4      	; 0x2b08 <vfprintf+0x14a>
    2b04:	6f ef       	ldi	r22, 0xFF	; 255
    2b06:	7f ef       	ldi	r23, 0xFF	; 255
    2b08:	c5 01       	movw	r24, r10
    2b0a:	0e 94 cb 16 	call	0x2d96	; 0x2d96 <strnlen>
    2b0e:	4c 01       	movw	r8, r24
    2b10:	82 01       	movw	r16, r4
    2b12:	f3 2d       	mov	r31, r3
    2b14:	ff 77       	andi	r31, 0x7F	; 127
    2b16:	3f 2e       	mov	r3, r31
    2b18:	16 c0       	rjmp	.+44     	; 0x2b46 <vfprintf+0x188>
    2b1a:	28 01       	movw	r4, r16
    2b1c:	22 e0       	ldi	r18, 0x02	; 2
    2b1e:	42 0e       	add	r4, r18
    2b20:	51 1c       	adc	r5, r1
    2b22:	f8 01       	movw	r30, r16
    2b24:	a0 80       	ld	r10, Z
    2b26:	b1 80       	ldd	r11, Z+1	; 0x01
    2b28:	36 fe       	sbrs	r3, 6
    2b2a:	03 c0       	rjmp	.+6      	; 0x2b32 <vfprintf+0x174>
    2b2c:	69 2d       	mov	r22, r9
    2b2e:	70 e0       	ldi	r23, 0x00	; 0
    2b30:	02 c0       	rjmp	.+4      	; 0x2b36 <vfprintf+0x178>
    2b32:	6f ef       	ldi	r22, 0xFF	; 255
    2b34:	7f ef       	ldi	r23, 0xFF	; 255
    2b36:	c5 01       	movw	r24, r10
    2b38:	0e 94 c0 16 	call	0x2d80	; 0x2d80 <strnlen_P>
    2b3c:	4c 01       	movw	r8, r24
    2b3e:	f3 2d       	mov	r31, r3
    2b40:	f0 68       	ori	r31, 0x80	; 128
    2b42:	3f 2e       	mov	r3, r31
    2b44:	82 01       	movw	r16, r4
    2b46:	33 fc       	sbrc	r3, 3
    2b48:	1b c0       	rjmp	.+54     	; 0x2b80 <vfprintf+0x1c2>
    2b4a:	82 2d       	mov	r24, r2
    2b4c:	90 e0       	ldi	r25, 0x00	; 0
    2b4e:	88 16       	cp	r8, r24
    2b50:	99 06       	cpc	r9, r25
    2b52:	b0 f4       	brcc	.+44     	; 0x2b80 <vfprintf+0x1c2>
    2b54:	b6 01       	movw	r22, r12
    2b56:	80 e2       	ldi	r24, 0x20	; 32
    2b58:	90 e0       	ldi	r25, 0x00	; 0
    2b5a:	0e 94 d6 16 	call	0x2dac	; 0x2dac <fputc>
    2b5e:	2a 94       	dec	r2
    2b60:	f4 cf       	rjmp	.-24     	; 0x2b4a <vfprintf+0x18c>
    2b62:	f5 01       	movw	r30, r10
    2b64:	37 fc       	sbrc	r3, 7
    2b66:	85 91       	lpm	r24, Z+
    2b68:	37 fe       	sbrs	r3, 7
    2b6a:	81 91       	ld	r24, Z+
    2b6c:	5f 01       	movw	r10, r30
    2b6e:	b6 01       	movw	r22, r12
    2b70:	90 e0       	ldi	r25, 0x00	; 0
    2b72:	0e 94 d6 16 	call	0x2dac	; 0x2dac <fputc>
    2b76:	21 10       	cpse	r2, r1
    2b78:	2a 94       	dec	r2
    2b7a:	21 e0       	ldi	r18, 0x01	; 1
    2b7c:	82 1a       	sub	r8, r18
    2b7e:	91 08       	sbc	r9, r1
    2b80:	81 14       	cp	r8, r1
    2b82:	91 04       	cpc	r9, r1
    2b84:	71 f7       	brne	.-36     	; 0x2b62 <vfprintf+0x1a4>
    2b86:	e8 c0       	rjmp	.+464    	; 0x2d58 <vfprintf+0x39a>
    2b88:	84 36       	cpi	r24, 0x64	; 100
    2b8a:	11 f0       	breq	.+4      	; 0x2b90 <vfprintf+0x1d2>
    2b8c:	89 36       	cpi	r24, 0x69	; 105
    2b8e:	41 f5       	brne	.+80     	; 0x2be0 <vfprintf+0x222>
    2b90:	f8 01       	movw	r30, r16
    2b92:	37 fe       	sbrs	r3, 7
    2b94:	07 c0       	rjmp	.+14     	; 0x2ba4 <vfprintf+0x1e6>
    2b96:	60 81       	ld	r22, Z
    2b98:	71 81       	ldd	r23, Z+1	; 0x01
    2b9a:	82 81       	ldd	r24, Z+2	; 0x02
    2b9c:	93 81       	ldd	r25, Z+3	; 0x03
    2b9e:	0c 5f       	subi	r16, 0xFC	; 252
    2ba0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ba2:	08 c0       	rjmp	.+16     	; 0x2bb4 <vfprintf+0x1f6>
    2ba4:	60 81       	ld	r22, Z
    2ba6:	71 81       	ldd	r23, Z+1	; 0x01
    2ba8:	07 2e       	mov	r0, r23
    2baa:	00 0c       	add	r0, r0
    2bac:	88 0b       	sbc	r24, r24
    2bae:	99 0b       	sbc	r25, r25
    2bb0:	0e 5f       	subi	r16, 0xFE	; 254
    2bb2:	1f 4f       	sbci	r17, 0xFF	; 255
    2bb4:	f3 2d       	mov	r31, r3
    2bb6:	ff 76       	andi	r31, 0x6F	; 111
    2bb8:	3f 2e       	mov	r3, r31
    2bba:	97 ff       	sbrs	r25, 7
    2bbc:	09 c0       	rjmp	.+18     	; 0x2bd0 <vfprintf+0x212>
    2bbe:	90 95       	com	r25
    2bc0:	80 95       	com	r24
    2bc2:	70 95       	com	r23
    2bc4:	61 95       	neg	r22
    2bc6:	7f 4f       	sbci	r23, 0xFF	; 255
    2bc8:	8f 4f       	sbci	r24, 0xFF	; 255
    2bca:	9f 4f       	sbci	r25, 0xFF	; 255
    2bcc:	f0 68       	ori	r31, 0x80	; 128
    2bce:	3f 2e       	mov	r3, r31
    2bd0:	2a e0       	ldi	r18, 0x0A	; 10
    2bd2:	30 e0       	ldi	r19, 0x00	; 0
    2bd4:	a3 01       	movw	r20, r6
    2bd6:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__ultoa_invert>
    2bda:	88 2e       	mov	r8, r24
    2bdc:	86 18       	sub	r8, r6
    2bde:	45 c0       	rjmp	.+138    	; 0x2c6a <vfprintf+0x2ac>
    2be0:	85 37       	cpi	r24, 0x75	; 117
    2be2:	31 f4       	brne	.+12     	; 0x2bf0 <vfprintf+0x232>
    2be4:	23 2d       	mov	r18, r3
    2be6:	2f 7e       	andi	r18, 0xEF	; 239
    2be8:	b2 2e       	mov	r11, r18
    2bea:	2a e0       	ldi	r18, 0x0A	; 10
    2bec:	30 e0       	ldi	r19, 0x00	; 0
    2bee:	25 c0       	rjmp	.+74     	; 0x2c3a <vfprintf+0x27c>
    2bf0:	93 2d       	mov	r25, r3
    2bf2:	99 7f       	andi	r25, 0xF9	; 249
    2bf4:	b9 2e       	mov	r11, r25
    2bf6:	8f 36       	cpi	r24, 0x6F	; 111
    2bf8:	c1 f0       	breq	.+48     	; 0x2c2a <vfprintf+0x26c>
    2bfa:	18 f4       	brcc	.+6      	; 0x2c02 <vfprintf+0x244>
    2bfc:	88 35       	cpi	r24, 0x58	; 88
    2bfe:	79 f0       	breq	.+30     	; 0x2c1e <vfprintf+0x260>
    2c00:	b5 c0       	rjmp	.+362    	; 0x2d6c <vfprintf+0x3ae>
    2c02:	80 37       	cpi	r24, 0x70	; 112
    2c04:	19 f0       	breq	.+6      	; 0x2c0c <vfprintf+0x24e>
    2c06:	88 37       	cpi	r24, 0x78	; 120
    2c08:	21 f0       	breq	.+8      	; 0x2c12 <vfprintf+0x254>
    2c0a:	b0 c0       	rjmp	.+352    	; 0x2d6c <vfprintf+0x3ae>
    2c0c:	e9 2f       	mov	r30, r25
    2c0e:	e0 61       	ori	r30, 0x10	; 16
    2c10:	be 2e       	mov	r11, r30
    2c12:	b4 fe       	sbrs	r11, 4
    2c14:	0d c0       	rjmp	.+26     	; 0x2c30 <vfprintf+0x272>
    2c16:	fb 2d       	mov	r31, r11
    2c18:	f4 60       	ori	r31, 0x04	; 4
    2c1a:	bf 2e       	mov	r11, r31
    2c1c:	09 c0       	rjmp	.+18     	; 0x2c30 <vfprintf+0x272>
    2c1e:	34 fe       	sbrs	r3, 4
    2c20:	0a c0       	rjmp	.+20     	; 0x2c36 <vfprintf+0x278>
    2c22:	29 2f       	mov	r18, r25
    2c24:	26 60       	ori	r18, 0x06	; 6
    2c26:	b2 2e       	mov	r11, r18
    2c28:	06 c0       	rjmp	.+12     	; 0x2c36 <vfprintf+0x278>
    2c2a:	28 e0       	ldi	r18, 0x08	; 8
    2c2c:	30 e0       	ldi	r19, 0x00	; 0
    2c2e:	05 c0       	rjmp	.+10     	; 0x2c3a <vfprintf+0x27c>
    2c30:	20 e1       	ldi	r18, 0x10	; 16
    2c32:	30 e0       	ldi	r19, 0x00	; 0
    2c34:	02 c0       	rjmp	.+4      	; 0x2c3a <vfprintf+0x27c>
    2c36:	20 e1       	ldi	r18, 0x10	; 16
    2c38:	32 e0       	ldi	r19, 0x02	; 2
    2c3a:	f8 01       	movw	r30, r16
    2c3c:	b7 fe       	sbrs	r11, 7
    2c3e:	07 c0       	rjmp	.+14     	; 0x2c4e <vfprintf+0x290>
    2c40:	60 81       	ld	r22, Z
    2c42:	71 81       	ldd	r23, Z+1	; 0x01
    2c44:	82 81       	ldd	r24, Z+2	; 0x02
    2c46:	93 81       	ldd	r25, Z+3	; 0x03
    2c48:	0c 5f       	subi	r16, 0xFC	; 252
    2c4a:	1f 4f       	sbci	r17, 0xFF	; 255
    2c4c:	06 c0       	rjmp	.+12     	; 0x2c5a <vfprintf+0x29c>
    2c4e:	60 81       	ld	r22, Z
    2c50:	71 81       	ldd	r23, Z+1	; 0x01
    2c52:	80 e0       	ldi	r24, 0x00	; 0
    2c54:	90 e0       	ldi	r25, 0x00	; 0
    2c56:	0e 5f       	subi	r16, 0xFE	; 254
    2c58:	1f 4f       	sbci	r17, 0xFF	; 255
    2c5a:	a3 01       	movw	r20, r6
    2c5c:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__ultoa_invert>
    2c60:	88 2e       	mov	r8, r24
    2c62:	86 18       	sub	r8, r6
    2c64:	fb 2d       	mov	r31, r11
    2c66:	ff 77       	andi	r31, 0x7F	; 127
    2c68:	3f 2e       	mov	r3, r31
    2c6a:	36 fe       	sbrs	r3, 6
    2c6c:	0d c0       	rjmp	.+26     	; 0x2c88 <vfprintf+0x2ca>
    2c6e:	23 2d       	mov	r18, r3
    2c70:	2e 7f       	andi	r18, 0xFE	; 254
    2c72:	a2 2e       	mov	r10, r18
    2c74:	89 14       	cp	r8, r9
    2c76:	58 f4       	brcc	.+22     	; 0x2c8e <vfprintf+0x2d0>
    2c78:	34 fe       	sbrs	r3, 4
    2c7a:	0b c0       	rjmp	.+22     	; 0x2c92 <vfprintf+0x2d4>
    2c7c:	32 fc       	sbrc	r3, 2
    2c7e:	09 c0       	rjmp	.+18     	; 0x2c92 <vfprintf+0x2d4>
    2c80:	83 2d       	mov	r24, r3
    2c82:	8e 7e       	andi	r24, 0xEE	; 238
    2c84:	a8 2e       	mov	r10, r24
    2c86:	05 c0       	rjmp	.+10     	; 0x2c92 <vfprintf+0x2d4>
    2c88:	b8 2c       	mov	r11, r8
    2c8a:	a3 2c       	mov	r10, r3
    2c8c:	03 c0       	rjmp	.+6      	; 0x2c94 <vfprintf+0x2d6>
    2c8e:	b8 2c       	mov	r11, r8
    2c90:	01 c0       	rjmp	.+2      	; 0x2c94 <vfprintf+0x2d6>
    2c92:	b9 2c       	mov	r11, r9
    2c94:	a4 fe       	sbrs	r10, 4
    2c96:	0f c0       	rjmp	.+30     	; 0x2cb6 <vfprintf+0x2f8>
    2c98:	fe 01       	movw	r30, r28
    2c9a:	e8 0d       	add	r30, r8
    2c9c:	f1 1d       	adc	r31, r1
    2c9e:	80 81       	ld	r24, Z
    2ca0:	80 33       	cpi	r24, 0x30	; 48
    2ca2:	21 f4       	brne	.+8      	; 0x2cac <vfprintf+0x2ee>
    2ca4:	9a 2d       	mov	r25, r10
    2ca6:	99 7e       	andi	r25, 0xE9	; 233
    2ca8:	a9 2e       	mov	r10, r25
    2caa:	09 c0       	rjmp	.+18     	; 0x2cbe <vfprintf+0x300>
    2cac:	a2 fe       	sbrs	r10, 2
    2cae:	06 c0       	rjmp	.+12     	; 0x2cbc <vfprintf+0x2fe>
    2cb0:	b3 94       	inc	r11
    2cb2:	b3 94       	inc	r11
    2cb4:	04 c0       	rjmp	.+8      	; 0x2cbe <vfprintf+0x300>
    2cb6:	8a 2d       	mov	r24, r10
    2cb8:	86 78       	andi	r24, 0x86	; 134
    2cba:	09 f0       	breq	.+2      	; 0x2cbe <vfprintf+0x300>
    2cbc:	b3 94       	inc	r11
    2cbe:	a3 fc       	sbrc	r10, 3
    2cc0:	11 c0       	rjmp	.+34     	; 0x2ce4 <vfprintf+0x326>
    2cc2:	a0 fe       	sbrs	r10, 0
    2cc4:	06 c0       	rjmp	.+12     	; 0x2cd2 <vfprintf+0x314>
    2cc6:	b2 14       	cp	r11, r2
    2cc8:	88 f4       	brcc	.+34     	; 0x2cec <vfprintf+0x32e>
    2cca:	28 0c       	add	r2, r8
    2ccc:	92 2c       	mov	r9, r2
    2cce:	9b 18       	sub	r9, r11
    2cd0:	0e c0       	rjmp	.+28     	; 0x2cee <vfprintf+0x330>
    2cd2:	b2 14       	cp	r11, r2
    2cd4:	60 f4       	brcc	.+24     	; 0x2cee <vfprintf+0x330>
    2cd6:	b6 01       	movw	r22, r12
    2cd8:	80 e2       	ldi	r24, 0x20	; 32
    2cda:	90 e0       	ldi	r25, 0x00	; 0
    2cdc:	0e 94 d6 16 	call	0x2dac	; 0x2dac <fputc>
    2ce0:	b3 94       	inc	r11
    2ce2:	f7 cf       	rjmp	.-18     	; 0x2cd2 <vfprintf+0x314>
    2ce4:	b2 14       	cp	r11, r2
    2ce6:	18 f4       	brcc	.+6      	; 0x2cee <vfprintf+0x330>
    2ce8:	2b 18       	sub	r2, r11
    2cea:	02 c0       	rjmp	.+4      	; 0x2cf0 <vfprintf+0x332>
    2cec:	98 2c       	mov	r9, r8
    2cee:	21 2c       	mov	r2, r1
    2cf0:	a4 fe       	sbrs	r10, 4
    2cf2:	10 c0       	rjmp	.+32     	; 0x2d14 <vfprintf+0x356>
    2cf4:	b6 01       	movw	r22, r12
    2cf6:	80 e3       	ldi	r24, 0x30	; 48
    2cf8:	90 e0       	ldi	r25, 0x00	; 0
    2cfa:	0e 94 d6 16 	call	0x2dac	; 0x2dac <fputc>
    2cfe:	a2 fe       	sbrs	r10, 2
    2d00:	17 c0       	rjmp	.+46     	; 0x2d30 <vfprintf+0x372>
    2d02:	a1 fc       	sbrc	r10, 1
    2d04:	03 c0       	rjmp	.+6      	; 0x2d0c <vfprintf+0x34e>
    2d06:	88 e7       	ldi	r24, 0x78	; 120
    2d08:	90 e0       	ldi	r25, 0x00	; 0
    2d0a:	02 c0       	rjmp	.+4      	; 0x2d10 <vfprintf+0x352>
    2d0c:	88 e5       	ldi	r24, 0x58	; 88
    2d0e:	90 e0       	ldi	r25, 0x00	; 0
    2d10:	b6 01       	movw	r22, r12
    2d12:	0c c0       	rjmp	.+24     	; 0x2d2c <vfprintf+0x36e>
    2d14:	8a 2d       	mov	r24, r10
    2d16:	86 78       	andi	r24, 0x86	; 134
    2d18:	59 f0       	breq	.+22     	; 0x2d30 <vfprintf+0x372>
    2d1a:	a1 fe       	sbrs	r10, 1
    2d1c:	02 c0       	rjmp	.+4      	; 0x2d22 <vfprintf+0x364>
    2d1e:	8b e2       	ldi	r24, 0x2B	; 43
    2d20:	01 c0       	rjmp	.+2      	; 0x2d24 <vfprintf+0x366>
    2d22:	80 e2       	ldi	r24, 0x20	; 32
    2d24:	a7 fc       	sbrc	r10, 7
    2d26:	8d e2       	ldi	r24, 0x2D	; 45
    2d28:	b6 01       	movw	r22, r12
    2d2a:	90 e0       	ldi	r25, 0x00	; 0
    2d2c:	0e 94 d6 16 	call	0x2dac	; 0x2dac <fputc>
    2d30:	89 14       	cp	r8, r9
    2d32:	38 f4       	brcc	.+14     	; 0x2d42 <vfprintf+0x384>
    2d34:	b6 01       	movw	r22, r12
    2d36:	80 e3       	ldi	r24, 0x30	; 48
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	0e 94 d6 16 	call	0x2dac	; 0x2dac <fputc>
    2d3e:	9a 94       	dec	r9
    2d40:	f7 cf       	rjmp	.-18     	; 0x2d30 <vfprintf+0x372>
    2d42:	8a 94       	dec	r8
    2d44:	f3 01       	movw	r30, r6
    2d46:	e8 0d       	add	r30, r8
    2d48:	f1 1d       	adc	r31, r1
    2d4a:	80 81       	ld	r24, Z
    2d4c:	b6 01       	movw	r22, r12
    2d4e:	90 e0       	ldi	r25, 0x00	; 0
    2d50:	0e 94 d6 16 	call	0x2dac	; 0x2dac <fputc>
    2d54:	81 10       	cpse	r8, r1
    2d56:	f5 cf       	rjmp	.-22     	; 0x2d42 <vfprintf+0x384>
    2d58:	22 20       	and	r2, r2
    2d5a:	09 f4       	brne	.+2      	; 0x2d5e <vfprintf+0x3a0>
    2d5c:	42 ce       	rjmp	.-892    	; 0x29e2 <vfprintf+0x24>
    2d5e:	b6 01       	movw	r22, r12
    2d60:	80 e2       	ldi	r24, 0x20	; 32
    2d62:	90 e0       	ldi	r25, 0x00	; 0
    2d64:	0e 94 d6 16 	call	0x2dac	; 0x2dac <fputc>
    2d68:	2a 94       	dec	r2
    2d6a:	f6 cf       	rjmp	.-20     	; 0x2d58 <vfprintf+0x39a>
    2d6c:	f6 01       	movw	r30, r12
    2d6e:	86 81       	ldd	r24, Z+6	; 0x06
    2d70:	97 81       	ldd	r25, Z+7	; 0x07
    2d72:	02 c0       	rjmp	.+4      	; 0x2d78 <vfprintf+0x3ba>
    2d74:	8f ef       	ldi	r24, 0xFF	; 255
    2d76:	9f ef       	ldi	r25, 0xFF	; 255
    2d78:	2b 96       	adiw	r28, 0x0b	; 11
    2d7a:	e2 e1       	ldi	r30, 0x12	; 18
    2d7c:	0c 94 8c 17 	jmp	0x2f18	; 0x2f18 <__epilogue_restores__>

00002d80 <strnlen_P>:
    2d80:	fc 01       	movw	r30, r24
    2d82:	05 90       	lpm	r0, Z+
    2d84:	61 50       	subi	r22, 0x01	; 1
    2d86:	70 40       	sbci	r23, 0x00	; 0
    2d88:	01 10       	cpse	r0, r1
    2d8a:	d8 f7       	brcc	.-10     	; 0x2d82 <strnlen_P+0x2>
    2d8c:	80 95       	com	r24
    2d8e:	90 95       	com	r25
    2d90:	8e 0f       	add	r24, r30
    2d92:	9f 1f       	adc	r25, r31
    2d94:	08 95       	ret

00002d96 <strnlen>:
    2d96:	fc 01       	movw	r30, r24
    2d98:	61 50       	subi	r22, 0x01	; 1
    2d9a:	70 40       	sbci	r23, 0x00	; 0
    2d9c:	01 90       	ld	r0, Z+
    2d9e:	01 10       	cpse	r0, r1
    2da0:	d8 f7       	brcc	.-10     	; 0x2d98 <strnlen+0x2>
    2da2:	80 95       	com	r24
    2da4:	90 95       	com	r25
    2da6:	8e 0f       	add	r24, r30
    2da8:	9f 1f       	adc	r25, r31
    2daa:	08 95       	ret

00002dac <fputc>:
    2dac:	0f 93       	push	r16
    2dae:	1f 93       	push	r17
    2db0:	cf 93       	push	r28
    2db2:	df 93       	push	r29
    2db4:	fb 01       	movw	r30, r22
    2db6:	23 81       	ldd	r18, Z+3	; 0x03
    2db8:	21 fd       	sbrc	r18, 1
    2dba:	03 c0       	rjmp	.+6      	; 0x2dc2 <fputc+0x16>
    2dbc:	8f ef       	ldi	r24, 0xFF	; 255
    2dbe:	9f ef       	ldi	r25, 0xFF	; 255
    2dc0:	2c c0       	rjmp	.+88     	; 0x2e1a <fputc+0x6e>
    2dc2:	22 ff       	sbrs	r18, 2
    2dc4:	16 c0       	rjmp	.+44     	; 0x2df2 <fputc+0x46>
    2dc6:	46 81       	ldd	r20, Z+6	; 0x06
    2dc8:	57 81       	ldd	r21, Z+7	; 0x07
    2dca:	24 81       	ldd	r18, Z+4	; 0x04
    2dcc:	35 81       	ldd	r19, Z+5	; 0x05
    2dce:	42 17       	cp	r20, r18
    2dd0:	53 07       	cpc	r21, r19
    2dd2:	44 f4       	brge	.+16     	; 0x2de4 <fputc+0x38>
    2dd4:	a0 81       	ld	r26, Z
    2dd6:	b1 81       	ldd	r27, Z+1	; 0x01
    2dd8:	9d 01       	movw	r18, r26
    2dda:	2f 5f       	subi	r18, 0xFF	; 255
    2ddc:	3f 4f       	sbci	r19, 0xFF	; 255
    2dde:	31 83       	std	Z+1, r19	; 0x01
    2de0:	20 83       	st	Z, r18
    2de2:	8c 93       	st	X, r24
    2de4:	26 81       	ldd	r18, Z+6	; 0x06
    2de6:	37 81       	ldd	r19, Z+7	; 0x07
    2de8:	2f 5f       	subi	r18, 0xFF	; 255
    2dea:	3f 4f       	sbci	r19, 0xFF	; 255
    2dec:	37 83       	std	Z+7, r19	; 0x07
    2dee:	26 83       	std	Z+6, r18	; 0x06
    2df0:	14 c0       	rjmp	.+40     	; 0x2e1a <fputc+0x6e>
    2df2:	8b 01       	movw	r16, r22
    2df4:	ec 01       	movw	r28, r24
    2df6:	fb 01       	movw	r30, r22
    2df8:	00 84       	ldd	r0, Z+8	; 0x08
    2dfa:	f1 85       	ldd	r31, Z+9	; 0x09
    2dfc:	e0 2d       	mov	r30, r0
    2dfe:	09 95       	icall
    2e00:	89 2b       	or	r24, r25
    2e02:	e1 f6       	brne	.-72     	; 0x2dbc <fputc+0x10>
    2e04:	d8 01       	movw	r26, r16
    2e06:	16 96       	adiw	r26, 0x06	; 6
    2e08:	8d 91       	ld	r24, X+
    2e0a:	9c 91       	ld	r25, X
    2e0c:	17 97       	sbiw	r26, 0x07	; 7
    2e0e:	01 96       	adiw	r24, 0x01	; 1
    2e10:	17 96       	adiw	r26, 0x07	; 7
    2e12:	9c 93       	st	X, r25
    2e14:	8e 93       	st	-X, r24
    2e16:	16 97       	sbiw	r26, 0x06	; 6
    2e18:	ce 01       	movw	r24, r28
    2e1a:	df 91       	pop	r29
    2e1c:	cf 91       	pop	r28
    2e1e:	1f 91       	pop	r17
    2e20:	0f 91       	pop	r16
    2e22:	08 95       	ret

00002e24 <__ultoa_invert>:
    2e24:	fa 01       	movw	r30, r20
    2e26:	aa 27       	eor	r26, r26
    2e28:	28 30       	cpi	r18, 0x08	; 8
    2e2a:	51 f1       	breq	.+84     	; 0x2e80 <__ultoa_invert+0x5c>
    2e2c:	20 31       	cpi	r18, 0x10	; 16
    2e2e:	81 f1       	breq	.+96     	; 0x2e90 <__ultoa_invert+0x6c>
    2e30:	e8 94       	clt
    2e32:	6f 93       	push	r22
    2e34:	6e 7f       	andi	r22, 0xFE	; 254
    2e36:	6e 5f       	subi	r22, 0xFE	; 254
    2e38:	7f 4f       	sbci	r23, 0xFF	; 255
    2e3a:	8f 4f       	sbci	r24, 0xFF	; 255
    2e3c:	9f 4f       	sbci	r25, 0xFF	; 255
    2e3e:	af 4f       	sbci	r26, 0xFF	; 255
    2e40:	b1 e0       	ldi	r27, 0x01	; 1
    2e42:	3e d0       	rcall	.+124    	; 0x2ec0 <__ultoa_invert+0x9c>
    2e44:	b4 e0       	ldi	r27, 0x04	; 4
    2e46:	3c d0       	rcall	.+120    	; 0x2ec0 <__ultoa_invert+0x9c>
    2e48:	67 0f       	add	r22, r23
    2e4a:	78 1f       	adc	r23, r24
    2e4c:	89 1f       	adc	r24, r25
    2e4e:	9a 1f       	adc	r25, r26
    2e50:	a1 1d       	adc	r26, r1
    2e52:	68 0f       	add	r22, r24
    2e54:	79 1f       	adc	r23, r25
    2e56:	8a 1f       	adc	r24, r26
    2e58:	91 1d       	adc	r25, r1
    2e5a:	a1 1d       	adc	r26, r1
    2e5c:	6a 0f       	add	r22, r26
    2e5e:	71 1d       	adc	r23, r1
    2e60:	81 1d       	adc	r24, r1
    2e62:	91 1d       	adc	r25, r1
    2e64:	a1 1d       	adc	r26, r1
    2e66:	20 d0       	rcall	.+64     	; 0x2ea8 <__ultoa_invert+0x84>
    2e68:	09 f4       	brne	.+2      	; 0x2e6c <__ultoa_invert+0x48>
    2e6a:	68 94       	set
    2e6c:	3f 91       	pop	r19
    2e6e:	2a e0       	ldi	r18, 0x0A	; 10
    2e70:	26 9f       	mul	r18, r22
    2e72:	11 24       	eor	r1, r1
    2e74:	30 19       	sub	r19, r0
    2e76:	30 5d       	subi	r19, 0xD0	; 208
    2e78:	31 93       	st	Z+, r19
    2e7a:	de f6       	brtc	.-74     	; 0x2e32 <__ultoa_invert+0xe>
    2e7c:	cf 01       	movw	r24, r30
    2e7e:	08 95       	ret
    2e80:	46 2f       	mov	r20, r22
    2e82:	47 70       	andi	r20, 0x07	; 7
    2e84:	40 5d       	subi	r20, 0xD0	; 208
    2e86:	41 93       	st	Z+, r20
    2e88:	b3 e0       	ldi	r27, 0x03	; 3
    2e8a:	0f d0       	rcall	.+30     	; 0x2eaa <__ultoa_invert+0x86>
    2e8c:	c9 f7       	brne	.-14     	; 0x2e80 <__ultoa_invert+0x5c>
    2e8e:	f6 cf       	rjmp	.-20     	; 0x2e7c <__ultoa_invert+0x58>
    2e90:	46 2f       	mov	r20, r22
    2e92:	4f 70       	andi	r20, 0x0F	; 15
    2e94:	40 5d       	subi	r20, 0xD0	; 208
    2e96:	4a 33       	cpi	r20, 0x3A	; 58
    2e98:	18 f0       	brcs	.+6      	; 0x2ea0 <__ultoa_invert+0x7c>
    2e9a:	49 5d       	subi	r20, 0xD9	; 217
    2e9c:	31 fd       	sbrc	r19, 1
    2e9e:	40 52       	subi	r20, 0x20	; 32
    2ea0:	41 93       	st	Z+, r20
    2ea2:	02 d0       	rcall	.+4      	; 0x2ea8 <__ultoa_invert+0x84>
    2ea4:	a9 f7       	brne	.-22     	; 0x2e90 <__ultoa_invert+0x6c>
    2ea6:	ea cf       	rjmp	.-44     	; 0x2e7c <__ultoa_invert+0x58>
    2ea8:	b4 e0       	ldi	r27, 0x04	; 4
    2eaa:	a6 95       	lsr	r26
    2eac:	97 95       	ror	r25
    2eae:	87 95       	ror	r24
    2eb0:	77 95       	ror	r23
    2eb2:	67 95       	ror	r22
    2eb4:	ba 95       	dec	r27
    2eb6:	c9 f7       	brne	.-14     	; 0x2eaa <__ultoa_invert+0x86>
    2eb8:	00 97       	sbiw	r24, 0x00	; 0
    2eba:	61 05       	cpc	r22, r1
    2ebc:	71 05       	cpc	r23, r1
    2ebe:	08 95       	ret
    2ec0:	9b 01       	movw	r18, r22
    2ec2:	ac 01       	movw	r20, r24
    2ec4:	0a 2e       	mov	r0, r26
    2ec6:	06 94       	lsr	r0
    2ec8:	57 95       	ror	r21
    2eca:	47 95       	ror	r20
    2ecc:	37 95       	ror	r19
    2ece:	27 95       	ror	r18
    2ed0:	ba 95       	dec	r27
    2ed2:	c9 f7       	brne	.-14     	; 0x2ec6 <__ultoa_invert+0xa2>
    2ed4:	62 0f       	add	r22, r18
    2ed6:	73 1f       	adc	r23, r19
    2ed8:	84 1f       	adc	r24, r20
    2eda:	95 1f       	adc	r25, r21
    2edc:	a0 1d       	adc	r26, r0
    2ede:	08 95       	ret

00002ee0 <__prologue_saves__>:
    2ee0:	2f 92       	push	r2
    2ee2:	3f 92       	push	r3
    2ee4:	4f 92       	push	r4
    2ee6:	5f 92       	push	r5
    2ee8:	6f 92       	push	r6
    2eea:	7f 92       	push	r7
    2eec:	8f 92       	push	r8
    2eee:	9f 92       	push	r9
    2ef0:	af 92       	push	r10
    2ef2:	bf 92       	push	r11
    2ef4:	cf 92       	push	r12
    2ef6:	df 92       	push	r13
    2ef8:	ef 92       	push	r14
    2efa:	ff 92       	push	r15
    2efc:	0f 93       	push	r16
    2efe:	1f 93       	push	r17
    2f00:	cf 93       	push	r28
    2f02:	df 93       	push	r29
    2f04:	cd b7       	in	r28, 0x3d	; 61
    2f06:	de b7       	in	r29, 0x3e	; 62
    2f08:	ca 1b       	sub	r28, r26
    2f0a:	db 0b       	sbc	r29, r27
    2f0c:	0f b6       	in	r0, 0x3f	; 63
    2f0e:	f8 94       	cli
    2f10:	de bf       	out	0x3e, r29	; 62
    2f12:	0f be       	out	0x3f, r0	; 63
    2f14:	cd bf       	out	0x3d, r28	; 61
    2f16:	09 94       	ijmp

00002f18 <__epilogue_restores__>:
    2f18:	2a 88       	ldd	r2, Y+18	; 0x12
    2f1a:	39 88       	ldd	r3, Y+17	; 0x11
    2f1c:	48 88       	ldd	r4, Y+16	; 0x10
    2f1e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2f20:	6e 84       	ldd	r6, Y+14	; 0x0e
    2f22:	7d 84       	ldd	r7, Y+13	; 0x0d
    2f24:	8c 84       	ldd	r8, Y+12	; 0x0c
    2f26:	9b 84       	ldd	r9, Y+11	; 0x0b
    2f28:	aa 84       	ldd	r10, Y+10	; 0x0a
    2f2a:	b9 84       	ldd	r11, Y+9	; 0x09
    2f2c:	c8 84       	ldd	r12, Y+8	; 0x08
    2f2e:	df 80       	ldd	r13, Y+7	; 0x07
    2f30:	ee 80       	ldd	r14, Y+6	; 0x06
    2f32:	fd 80       	ldd	r15, Y+5	; 0x05
    2f34:	0c 81       	ldd	r16, Y+4	; 0x04
    2f36:	1b 81       	ldd	r17, Y+3	; 0x03
    2f38:	aa 81       	ldd	r26, Y+2	; 0x02
    2f3a:	b9 81       	ldd	r27, Y+1	; 0x01
    2f3c:	ce 0f       	add	r28, r30
    2f3e:	d1 1d       	adc	r29, r1
    2f40:	0f b6       	in	r0, 0x3f	; 63
    2f42:	f8 94       	cli
    2f44:	de bf       	out	0x3e, r29	; 62
    2f46:	0f be       	out	0x3f, r0	; 63
    2f48:	cd bf       	out	0x3d, r28	; 61
    2f4a:	ed 01       	movw	r28, r26
    2f4c:	08 95       	ret

00002f4e <_exit>:
    2f4e:	f8 94       	cli

00002f50 <__stop_program>:
    2f50:	ff cf       	rjmp	.-2      	; 0x2f50 <__stop_program>
